{
  "description": "SidecarDefinition is the Schema for the sidecardefinitions API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SidecarDefinitionSpec defines the desired state of SidecarDefinition",
      "type": "object",
      "required": [
        "containers",
        "name",
        "owner",
        "selectors"
      ],
      "properties": {
        "configs": {
          "description": "Specifies the configuration file templates used by the Sidecar.\n\n\nThis field is immutable.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "defaultMode": {
                "description": "The operator attempts to set default file permissions (0444).\n\n\nMust be specified as an octal value between 0000 and 0777 (inclusive),\nor as a decimal value between 0 and 511 (inclusive).\nYAML supports both octal and decimal values for file permissions.\n\n\nPlease note that this setting only affects the permissions of the files themselves.\nDirectories within the specified path are not impacted by this setting.\nIt's important to be aware that this setting might conflict with other options\nthat influence the file mode, such as fsGroup.\nIn such cases, the resulting file mode may have additional bits set.\nRefers to documents of k8s.ConfigMapVolumeSource.defaultMode for more information.",
                "type": "integer",
                "format": "int32"
              },
              "externalManaged": {
                "description": "ExternalManaged indicates whether the configuration is managed by an external system.\nWhen set to true, the controller will ignore the management of this configuration.",
                "type": "boolean"
              },
              "name": {
                "description": "Specifies the name of the template.",
                "type": "string",
                "maxLength": 63,
                "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
              },
              "namespace": {
                "description": "Specifies the namespace of the referenced template ConfigMap object.",
                "type": "string",
                "default": "default",
                "maxLength": 63,
                "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$"
              },
              "restartOnFileChange": {
                "description": "Specifies whether to restart the pod when the file changes.",
                "type": "boolean"
              },
              "template": {
                "description": "Specifies the name of the referenced template ConfigMap object.",
                "type": "string",
                "maxLength": 63,
                "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
              },
              "volumeName": {
                "description": "Refers to the volume name of PodTemplate. The file produced through the template will be mounted to\nthe corresponding volume. Must be a DNS_LABEL name.\nThe volume name must be defined in podSpec.containers[*].volumeMounts.",
                "type": "string",
                "maxLength": 63,
                "pattern": "^[a-z]([a-z0-9\\-]*[a-z0-9])?$"
              }
            },
            "additionalProperties": false
          }
        },
        "containers": {
          "description": "List of containers for the sidecar.\n\n\nCannot be updated.",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "A single application container that you want to run within a pod.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "args": {
                "description": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "command": {
                "description": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "env": {
                "description": "List of environment variables to set in the container.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "EnvVar represents an environment variable present in a Container.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                      "type": "object",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Selects a key of a ConfigMap.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "fieldRef": {
                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                          "type": "object",
                          "required": [
                            "fieldPath"
                          ],
                          "properties": {
                            "apiVersion": {
                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "Path of the field to select in the specified API version.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "resourceFieldRef": {
                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                          "type": "object",
                          "required": [
                            "resource"
                          ],
                          "properties": {
                            "containerName": {
                              "description": "Container name: required for volumes, optional for env vars",
                              "type": "string"
                            },
                            "divisor": {
                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "resource": {
                              "description": "Required: resource to select",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "secretKeyRef": {
                          "description": "Selects a key of a secret in the pod's namespace",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "envFrom": {
                "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "EnvFromSource represents the source of a set of ConfigMaps",
                  "type": "object",
                  "properties": {
                    "configMapRef": {
                      "description": "The ConfigMap to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "prefix": {
                      "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "The Secret to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": "string"
                        },
                        "optional": {
                          "description": "Specify whether the Secret must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "image": {
                "description": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                "type": "string"
              },
              "imagePullPolicy": {
                "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                "type": "string"
              },
              "lifecycle": {
                "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                "type": "object",
                "properties": {
                  "postStart": {
                    "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies the action to take.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies the http request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sleep": {
                        "description": "Sleep represents the duration that the container should sleep before being terminated.",
                        "type": "object",
                        "required": [
                          "seconds"
                        ],
                        "properties": {
                          "seconds": {
                            "description": "Seconds is the number of seconds to sleep.",
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tcpSocket": {
                        "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "preStop": {
                    "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies the action to take.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies the http request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sleep": {
                        "description": "Sleep represents the duration that the container should sleep before being terminated.",
                        "type": "object",
                        "required": [
                          "seconds"
                        ],
                        "properties": {
                          "seconds": {
                            "description": "Seconds is the number of seconds to sleep.",
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tcpSocket": {
                        "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor the backward compatibility. There are no validation of this field and\nlifecycle hooks will fail in runtime when tcp handler is specified.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "livenessProbe": {
                "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies the action to take.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies an action involving a GRPC port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies the http request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies an action involving a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated.",
                "type": "string"
              },
              "ports": {
                "description": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "ContainerPort represents a network port in a single container.",
                  "type": "object",
                  "required": [
                    "containerPort"
                  ],
                  "properties": {
                    "containerPort": {
                      "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "hostIP": {
                      "description": "What host IP to bind the external port to.",
                      "type": "string"
                    },
                    "hostPort": {
                      "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                      "type": "string"
                    },
                    "protocol": {
                      "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                      "type": "string",
                      "default": "TCP"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "containerPort",
                  "protocol"
                ],
                "x-kubernetes-list-type": "map"
              },
              "readinessProbe": {
                "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies the action to take.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies an action involving a GRPC port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies the http request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies an action involving a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "resizePolicy": {
                "description": "Resources resize policy for the container.",
                "type": "array",
                "items": {
                  "description": "ContainerResizePolicy represents resource resize policy for the container.",
                  "type": "object",
                  "required": [
                    "resourceName",
                    "restartPolicy"
                  ],
                  "properties": {
                    "resourceName": {
                      "description": "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory.",
                      "type": "string"
                    },
                    "restartPolicy": {
                      "description": "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "resources": {
                "description": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                "type": "object",
                "properties": {
                  "claims": {
                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers.",
                    "type": "array",
                    "items": {
                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-map-keys": [
                      "name"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "additionalProperties": false
              },
              "restartPolicy": {
                "description": "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted.",
                "type": "string"
              },
              "securityContext": {
                "description": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                "type": "object",
                "properties": {
                  "allowPrivilegeEscalation": {
                    "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "capabilities": {
                    "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "add": {
                        "description": "Added capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        }
                      },
                      "drop": {
                        "description": "Removed capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "privileged": {
                    "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "procMount": {
                    "description": "procMount denotes the type of proc mount to use for the containers.\nThe default is DefaultProcMount which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "string"
                  },
                  "readOnlyRootFilesystem": {
                    "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                  },
                  "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "seLinuxOptions": {
                    "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "level": {
                        "description": "Level is SELinux level label that applies to the container.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Role is a SELinux role label that applies to the container.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type is a SELinux type label that applies to the container.",
                        "type": "string"
                      },
                      "user": {
                        "description": "User is a SELinux user label that applies to the container.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "seccompProfile": {
                    "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "windowsOptions": {
                    "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                    "type": "object",
                    "properties": {
                      "gmsaCredentialSpec": {
                        "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                        "type": "string"
                      },
                      "gmsaCredentialSpecName": {
                        "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                        "type": "string"
                      },
                      "hostProcess": {
                        "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                        "type": "boolean"
                      },
                      "runAsUserName": {
                        "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "startupProbe": {
                "description": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies the action to take.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies an action involving a GRPC port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies the http request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies an action involving a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "stdin": {
                "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.",
                "type": "boolean"
              },
              "stdinOnce": {
                "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false",
                "type": "boolean"
              },
              "terminationMessagePath": {
                "description": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.",
                "type": "string"
              },
              "terminationMessagePolicy": {
                "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.",
                "type": "string"
              },
              "tty": {
                "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.",
                "type": "boolean"
              },
              "volumeDevices": {
                "description": "volumeDevices is the list of block devices to be used by the container.",
                "type": "array",
                "items": {
                  "description": "volumeDevice describes a mapping of a raw block device within a container.",
                  "type": "object",
                  "required": [
                    "devicePath",
                    "name"
                  ],
                  "properties": {
                    "devicePath": {
                      "description": "devicePath is the path inside of the container that the device will be mapped to.",
                      "type": "string"
                    },
                    "name": {
                      "description": "name must match the name of a persistentVolumeClaim in the pod",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "volumeMounts": {
                "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "VolumeMount describes a mounting of a Volume within a container.",
                  "type": "object",
                  "required": [
                    "mountPath",
                    "name"
                  ],
                  "properties": {
                    "mountPath": {
                      "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                      "type": "string"
                    },
                    "mountPropagation": {
                      "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.",
                      "type": "string"
                    },
                    "name": {
                      "description": "This must match the Name of a Volume.",
                      "type": "string"
                    },
                    "readOnly": {
                      "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                      "type": "boolean"
                    },
                    "subPath": {
                      "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                      "type": "string"
                    },
                    "subPathExpr": {
                      "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "workingDir": {
                "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "name": {
          "description": "Specifies the name of the sidecar.",
          "type": "string"
        },
        "owner": {
          "description": "Specifies the component definition that the sidecar belongs to.\n\n\nFor a specific cluster object, if there is any components provided by the component definition of @owner,\nthe sidecar will be created and injected into the components which are provided by\nthe component definition of @selectors automatically.\n\n\nThis field is immutable.",
          "type": "string"
        },
        "scripts": {
          "description": "Specifies the scripts used by the Sidecar.\n\n\nThis field is immutable.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "defaultMode": {
                "description": "The operator attempts to set default file permissions (0444).\n\n\nMust be specified as an octal value between 0000 and 0777 (inclusive),\nor as a decimal value between 0 and 511 (inclusive).\nYAML supports both octal and decimal values for file permissions.\n\n\nPlease note that this setting only affects the permissions of the files themselves.\nDirectories within the specified path are not impacted by this setting.\nIt's important to be aware that this setting might conflict with other options\nthat influence the file mode, such as fsGroup.\nIn such cases, the resulting file mode may have additional bits set.\nRefers to documents of k8s.ConfigMapVolumeSource.defaultMode for more information.",
                "type": "integer",
                "format": "int32"
              },
              "externalManaged": {
                "description": "ExternalManaged indicates whether the configuration is managed by an external system.\nWhen set to true, the controller will ignore the management of this configuration.",
                "type": "boolean"
              },
              "name": {
                "description": "Specifies the name of the template.",
                "type": "string",
                "maxLength": 63,
                "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
              },
              "namespace": {
                "description": "Specifies the namespace of the referenced template ConfigMap object.",
                "type": "string",
                "default": "default",
                "maxLength": 63,
                "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$"
              },
              "restartOnFileChange": {
                "description": "Specifies whether to restart the pod when the file changes.",
                "type": "boolean"
              },
              "template": {
                "description": "Specifies the name of the referenced template ConfigMap object.",
                "type": "string",
                "maxLength": 63,
                "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
              },
              "volumeName": {
                "description": "Refers to the volume name of PodTemplate. The file produced through the template will be mounted to\nthe corresponding volume. Must be a DNS_LABEL name.\nThe volume name must be defined in podSpec.containers[*].volumeMounts.",
                "type": "string",
                "maxLength": 63,
                "pattern": "^[a-z]([a-z0-9\\-]*[a-z0-9])?$"
              }
            },
            "additionalProperties": false
          }
        },
        "selectors": {
          "description": "Specifies the component definition of components that the sidecar along with.\n\n\nThis field is immutable.",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "vars": {
          "description": "Defines variables which are needed by the sidecar.\n\n\nThis field is immutable.",
          "type": "array",
          "items": {
            "description": "EnvVar represents a variable present in the env of Pod/Action or the template of config/script.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "expression": {
                "description": "A Go template expression that will be applied to the resolved value of the var.\n\n\nThe expression will only be evaluated if the var is successfully resolved to a non-credential value.\n\n\nThe resolved value can be accessed by its name within the expression, system vars and other user-defined\nnon-credential vars can be used within the expression in the same way.\nNotice that, when accessing vars by its name, you should replace all the \"-\" in the name with \"_\", because of\nthat \"-\" is not a valid identifier in Go.\n\n\nAll expressions are evaluated in the order the vars are defined. If a var depends on any vars that also\nhave expressions defined, be careful about the evaluation order as it may use intermediate values.\n\n\nThe result of evaluation will be used as the final value of the var. If the expression fails to evaluate,\nthe resolving of var will also be considered failed.",
                "type": "string"
              },
              "name": {
                "description": "Name of the variable. Must be a C_IDENTIFIER.",
                "type": "string"
              },
              "value": {
                "description": "Variable references `$(VAR_NAME)` are expanded using the previously defined variables in the current context.\n\n\nIf a variable cannot be resolved, the reference in the input string will be unchanged.\nDouble `$$` are reduced to a single `$`, which allows for escaping the `$(VAR_NAME)` syntax: i.e.\n\n\n- `$$(VAR_NAME)` will produce the string literal `$(VAR_NAME)`.\n\n\nEscaped references will never be expanded, regardless of whether the variable exists or not.\nDefaults to \"\".",
                "type": "string"
              },
              "valueFrom": {
                "description": "Source for the variable's value. Cannot be used if value is not empty.",
                "type": "object",
                "properties": {
                  "clusterVarRef": {
                    "description": "Selects a defined var of a Cluster.",
                    "type": "object",
                    "properties": {
                      "clusterName": {
                        "description": "Reference to the name of the Cluster object.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "clusterUID": {
                        "description": "Reference to the UID of the Cluster object.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "namespace": {
                        "description": "Reference to the namespace of the Cluster object.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "componentVarRef": {
                    "description": "Selects a defined var of a Component.",
                    "type": "object",
                    "properties": {
                      "compDef": {
                        "description": "Specifies the exact name, name prefix, or regular expression pattern for matching the name of the ComponentDefinition\ncustom resource (CR) used by the component that the referent object resident in.\n\n\nIf not specified, the component itself will be used.",
                        "type": "string"
                      },
                      "componentName": {
                        "description": "Reference to the name of the Component object.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "multipleClusterObjectOption": {
                        "description": "This option defines the behavior when multiple component objects match the specified @CompDef.\nIf not provided, an error will be raised when handling multiple matches.",
                        "type": "object",
                        "required": [
                          "strategy"
                        ],
                        "properties": {
                          "combinedOption": {
                            "description": "Define the options for handling combined variables.\nValid only when the strategy is set to \"combined\".",
                            "type": "object",
                            "properties": {
                              "flattenFormat": {
                                "description": "The flatten format, default is: $(comp-name-1):value,$(comp-name-2):value.",
                                "type": "object",
                                "required": [
                                  "delimiter",
                                  "keyValueDelimiter"
                                ],
                                "properties": {
                                  "delimiter": {
                                    "description": "Pair delimiter.",
                                    "type": "string",
                                    "default": ","
                                  },
                                  "keyValueDelimiter": {
                                    "description": "Key-value delimiter.",
                                    "type": "string",
                                    "default": ":"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "newVarSuffix": {
                                "description": "If set, the existing variable will be kept, and a new variable will be defined with the specified suffix\nin pattern: $(var.name)_$(suffix).\nThe new variable will be auto-created and placed behind the existing one.\nIf not set, the existing variable will be reused with the value format defined below.",
                                "type": "string"
                              },
                              "valueFormat": {
                                "description": "The format of the value that the operator will use to compose values from multiple components.",
                                "type": "string",
                                "default": "Flatten"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireAllComponentObjects": {
                            "description": "RequireAllComponentObjects controls whether all component objects must exist before resolving.\nIf set to true, resolving will only proceed if all component objects are present.",
                            "type": "boolean"
                          },
                          "strategy": {
                            "description": "Define the strategy for handling multiple cluster objects.",
                            "type": "string",
                            "enum": [
                              "individual",
                              "combined"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the referent object.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the object must be defined.",
                        "type": "boolean"
                      },
                      "podFQDNs": {
                        "description": "Reference to the pod FQDN list of the component.\nThe value will be presented in the following format: FQDN1,FQDN2,...",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "podFQDNsForRole": {
                        "description": "Reference to the pod FQDN list of the component that have a specific role.\nThe value will be presented in the following format: FQDN1,FQDN2,...",
                        "type": "object",
                        "properties": {
                          "option": {
                            "description": "VarOption defines whether a variable is required or optional.",
                            "type": "string",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "role": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "podNames": {
                        "description": "Reference to the pod name list of the component.\nand the value will be presented in the following format: name1,name2,...",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "podNamesForRole": {
                        "description": "Reference to the pod name list of the component that have a specific role.\nThe value will be presented in the following format: name1,name2,...",
                        "type": "object",
                        "properties": {
                          "option": {
                            "description": "VarOption defines whether a variable is required or optional.",
                            "type": "string",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "role": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "replicas": {
                        "description": "Reference to the replicas of the component.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "shortName": {
                        "description": "Reference to the short name of the Component object.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "configMapKeyRef": {
                    "description": "Selects a key of a ConfigMap.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the ConfigMap or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "credentialVarRef": {
                    "description": "Selects a defined var of a Credential (SystemAccount).",
                    "type": "object",
                    "properties": {
                      "compDef": {
                        "description": "Specifies the exact name, name prefix, or regular expression pattern for matching the name of the ComponentDefinition\ncustom resource (CR) used by the component that the referent object resident in.\n\n\nIf not specified, the component itself will be used.",
                        "type": "string"
                      },
                      "multipleClusterObjectOption": {
                        "description": "This option defines the behavior when multiple component objects match the specified @CompDef.\nIf not provided, an error will be raised when handling multiple matches.",
                        "type": "object",
                        "required": [
                          "strategy"
                        ],
                        "properties": {
                          "combinedOption": {
                            "description": "Define the options for handling combined variables.\nValid only when the strategy is set to \"combined\".",
                            "type": "object",
                            "properties": {
                              "flattenFormat": {
                                "description": "The flatten format, default is: $(comp-name-1):value,$(comp-name-2):value.",
                                "type": "object",
                                "required": [
                                  "delimiter",
                                  "keyValueDelimiter"
                                ],
                                "properties": {
                                  "delimiter": {
                                    "description": "Pair delimiter.",
                                    "type": "string",
                                    "default": ","
                                  },
                                  "keyValueDelimiter": {
                                    "description": "Key-value delimiter.",
                                    "type": "string",
                                    "default": ":"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "newVarSuffix": {
                                "description": "If set, the existing variable will be kept, and a new variable will be defined with the specified suffix\nin pattern: $(var.name)_$(suffix).\nThe new variable will be auto-created and placed behind the existing one.\nIf not set, the existing variable will be reused with the value format defined below.",
                                "type": "string"
                              },
                              "valueFormat": {
                                "description": "The format of the value that the operator will use to compose values from multiple components.",
                                "type": "string",
                                "default": "Flatten"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireAllComponentObjects": {
                            "description": "RequireAllComponentObjects controls whether all component objects must exist before resolving.\nIf set to true, resolving will only proceed if all component objects are present.",
                            "type": "boolean"
                          },
                          "strategy": {
                            "description": "Define the strategy for handling multiple cluster objects.",
                            "type": "string",
                            "enum": [
                              "individual",
                              "combined"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the referent object.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the object must be defined.",
                        "type": "boolean"
                      },
                      "password": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "username": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "hostNetworkVarRef": {
                    "description": "Selects a defined var of host-network resources.",
                    "type": "object",
                    "properties": {
                      "compDef": {
                        "description": "Specifies the exact name, name prefix, or regular expression pattern for matching the name of the ComponentDefinition\ncustom resource (CR) used by the component that the referent object resident in.\n\n\nIf not specified, the component itself will be used.",
                        "type": "string"
                      },
                      "container": {
                        "description": "ContainerVars defines the vars that can be referenced from a Container.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the container.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Container port to reference.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "option": {
                                "description": "VarOption defines whether a variable is required or optional.",
                                "type": "string",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "multipleClusterObjectOption": {
                        "description": "This option defines the behavior when multiple component objects match the specified @CompDef.\nIf not provided, an error will be raised when handling multiple matches.",
                        "type": "object",
                        "required": [
                          "strategy"
                        ],
                        "properties": {
                          "combinedOption": {
                            "description": "Define the options for handling combined variables.\nValid only when the strategy is set to \"combined\".",
                            "type": "object",
                            "properties": {
                              "flattenFormat": {
                                "description": "The flatten format, default is: $(comp-name-1):value,$(comp-name-2):value.",
                                "type": "object",
                                "required": [
                                  "delimiter",
                                  "keyValueDelimiter"
                                ],
                                "properties": {
                                  "delimiter": {
                                    "description": "Pair delimiter.",
                                    "type": "string",
                                    "default": ","
                                  },
                                  "keyValueDelimiter": {
                                    "description": "Key-value delimiter.",
                                    "type": "string",
                                    "default": ":"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "newVarSuffix": {
                                "description": "If set, the existing variable will be kept, and a new variable will be defined with the specified suffix\nin pattern: $(var.name)_$(suffix).\nThe new variable will be auto-created and placed behind the existing one.\nIf not set, the existing variable will be reused with the value format defined below.",
                                "type": "string"
                              },
                              "valueFormat": {
                                "description": "The format of the value that the operator will use to compose values from multiple components.",
                                "type": "string",
                                "default": "Flatten"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireAllComponentObjects": {
                            "description": "RequireAllComponentObjects controls whether all component objects must exist before resolving.\nIf set to true, resolving will only proceed if all component objects are present.",
                            "type": "boolean"
                          },
                          "strategy": {
                            "description": "Define the strategy for handling multiple cluster objects.",
                            "type": "string",
                            "enum": [
                              "individual",
                              "combined"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the referent object.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the object must be defined.",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "resourceVarRef": {
                    "description": "Selects a defined var of a kind of resource.",
                    "type": "object",
                    "properties": {
                      "compDef": {
                        "description": "Specifies the exact name, name prefix, or regular expression pattern for matching the name of the ComponentDefinition\ncustom resource (CR) used by the component that the referent object resident in.\n\n\nIf not specified, the component itself will be used.",
                        "type": "string"
                      },
                      "cpu": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "cpuLimit": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "memory": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "memoryLimit": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "multipleClusterObjectOption": {
                        "description": "This option defines the behavior when multiple component objects match the specified @CompDef.\nIf not provided, an error will be raised when handling multiple matches.",
                        "type": "object",
                        "required": [
                          "strategy"
                        ],
                        "properties": {
                          "combinedOption": {
                            "description": "Define the options for handling combined variables.\nValid only when the strategy is set to \"combined\".",
                            "type": "object",
                            "properties": {
                              "flattenFormat": {
                                "description": "The flatten format, default is: $(comp-name-1):value,$(comp-name-2):value.",
                                "type": "object",
                                "required": [
                                  "delimiter",
                                  "keyValueDelimiter"
                                ],
                                "properties": {
                                  "delimiter": {
                                    "description": "Pair delimiter.",
                                    "type": "string",
                                    "default": ","
                                  },
                                  "keyValueDelimiter": {
                                    "description": "Key-value delimiter.",
                                    "type": "string",
                                    "default": ":"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "newVarSuffix": {
                                "description": "If set, the existing variable will be kept, and a new variable will be defined with the specified suffix\nin pattern: $(var.name)_$(suffix).\nThe new variable will be auto-created and placed behind the existing one.\nIf not set, the existing variable will be reused with the value format defined below.",
                                "type": "string"
                              },
                              "valueFormat": {
                                "description": "The format of the value that the operator will use to compose values from multiple components.",
                                "type": "string",
                                "default": "Flatten"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireAllComponentObjects": {
                            "description": "RequireAllComponentObjects controls whether all component objects must exist before resolving.\nIf set to true, resolving will only proceed if all component objects are present.",
                            "type": "boolean"
                          },
                          "strategy": {
                            "description": "Define the strategy for handling multiple cluster objects.",
                            "type": "string",
                            "enum": [
                              "individual",
                              "combined"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the referent object.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the object must be defined.",
                        "type": "boolean"
                      },
                      "storage": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "option": {
                            "description": "VarOption defines whether a variable is required or optional.",
                            "type": "string",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "secretKeyRef": {
                    "description": "Selects a key of a Secret.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "serviceRefVarRef": {
                    "description": "Selects a defined var of a ServiceRef.",
                    "type": "object",
                    "properties": {
                      "compDef": {
                        "description": "Specifies the exact name, name prefix, or regular expression pattern for matching the name of the ComponentDefinition\ncustom resource (CR) used by the component that the referent object resident in.\n\n\nIf not specified, the component itself will be used.",
                        "type": "string"
                      },
                      "endpoint": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "host": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "multipleClusterObjectOption": {
                        "description": "This option defines the behavior when multiple component objects match the specified @CompDef.\nIf not provided, an error will be raised when handling multiple matches.",
                        "type": "object",
                        "required": [
                          "strategy"
                        ],
                        "properties": {
                          "combinedOption": {
                            "description": "Define the options for handling combined variables.\nValid only when the strategy is set to \"combined\".",
                            "type": "object",
                            "properties": {
                              "flattenFormat": {
                                "description": "The flatten format, default is: $(comp-name-1):value,$(comp-name-2):value.",
                                "type": "object",
                                "required": [
                                  "delimiter",
                                  "keyValueDelimiter"
                                ],
                                "properties": {
                                  "delimiter": {
                                    "description": "Pair delimiter.",
                                    "type": "string",
                                    "default": ","
                                  },
                                  "keyValueDelimiter": {
                                    "description": "Key-value delimiter.",
                                    "type": "string",
                                    "default": ":"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "newVarSuffix": {
                                "description": "If set, the existing variable will be kept, and a new variable will be defined with the specified suffix\nin pattern: $(var.name)_$(suffix).\nThe new variable will be auto-created and placed behind the existing one.\nIf not set, the existing variable will be reused with the value format defined below.",
                                "type": "string"
                              },
                              "valueFormat": {
                                "description": "The format of the value that the operator will use to compose values from multiple components.",
                                "type": "string",
                                "default": "Flatten"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireAllComponentObjects": {
                            "description": "RequireAllComponentObjects controls whether all component objects must exist before resolving.\nIf set to true, resolving will only proceed if all component objects are present.",
                            "type": "boolean"
                          },
                          "strategy": {
                            "description": "Define the strategy for handling multiple cluster objects.",
                            "type": "string",
                            "enum": [
                              "individual",
                              "combined"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the referent object.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the object must be defined.",
                        "type": "boolean"
                      },
                      "password": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "podFQDNs": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "port": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "username": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "serviceVarRef": {
                    "description": "Selects a defined var of a Service.",
                    "type": "object",
                    "properties": {
                      "compDef": {
                        "description": "Specifies the exact name, name prefix, or regular expression pattern for matching the name of the ComponentDefinition\ncustom resource (CR) used by the component that the referent object resident in.\n\n\nIf not specified, the component itself will be used.",
                        "type": "string"
                      },
                      "host": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "loadBalancer": {
                        "description": "LoadBalancer represents the LoadBalancer ingress point of the service.\n\n\nIf multiple ingress points are available, the first one will be used automatically, choosing between IP and Hostname.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "multipleClusterObjectOption": {
                        "description": "This option defines the behavior when multiple component objects match the specified @CompDef.\nIf not provided, an error will be raised when handling multiple matches.",
                        "type": "object",
                        "required": [
                          "strategy"
                        ],
                        "properties": {
                          "combinedOption": {
                            "description": "Define the options for handling combined variables.\nValid only when the strategy is set to \"combined\".",
                            "type": "object",
                            "properties": {
                              "flattenFormat": {
                                "description": "The flatten format, default is: $(comp-name-1):value,$(comp-name-2):value.",
                                "type": "object",
                                "required": [
                                  "delimiter",
                                  "keyValueDelimiter"
                                ],
                                "properties": {
                                  "delimiter": {
                                    "description": "Pair delimiter.",
                                    "type": "string",
                                    "default": ","
                                  },
                                  "keyValueDelimiter": {
                                    "description": "Key-value delimiter.",
                                    "type": "string",
                                    "default": ":"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "newVarSuffix": {
                                "description": "If set, the existing variable will be kept, and a new variable will be defined with the specified suffix\nin pattern: $(var.name)_$(suffix).\nThe new variable will be auto-created and placed behind the existing one.\nIf not set, the existing variable will be reused with the value format defined below.",
                                "type": "string"
                              },
                              "valueFormat": {
                                "description": "The format of the value that the operator will use to compose values from multiple components.",
                                "type": "string",
                                "default": "Flatten"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireAllComponentObjects": {
                            "description": "RequireAllComponentObjects controls whether all component objects must exist before resolving.\nIf set to true, resolving will only proceed if all component objects are present.",
                            "type": "boolean"
                          },
                          "strategy": {
                            "description": "Define the strategy for handling multiple cluster objects.",
                            "type": "string",
                            "enum": [
                              "individual",
                              "combined"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the referent object.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the object must be defined.",
                        "type": "boolean"
                      },
                      "port": {
                        "description": "Port references a port or node-port defined in the service.\n\n\nIf the referenced service is a pod-service, there will be multiple service objects matched,\nand the value will be presented in the following format: service1.name:port1,service2.name:port2...",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "option": {
                            "description": "VarOption defines whether a variable is required or optional.",
                            "type": "string",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "serviceType": {
                        "description": "ServiceType references the type of the service.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsVarRef": {
                    "description": "Selects a defined var of the TLS.",
                    "type": "object",
                    "properties": {
                      "compDef": {
                        "description": "Specifies the exact name, name prefix, or regular expression pattern for matching the name of the ComponentDefinition\ncustom resource (CR) used by the component that the referent object resident in.\n\n\nIf not specified, the component itself will be used.",
                        "type": "string"
                      },
                      "enabled": {
                        "description": "VarOption defines whether a variable is required or optional.",
                        "type": "string",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "multipleClusterObjectOption": {
                        "description": "This option defines the behavior when multiple component objects match the specified @CompDef.\nIf not provided, an error will be raised when handling multiple matches.",
                        "type": "object",
                        "required": [
                          "strategy"
                        ],
                        "properties": {
                          "combinedOption": {
                            "description": "Define the options for handling combined variables.\nValid only when the strategy is set to \"combined\".",
                            "type": "object",
                            "properties": {
                              "flattenFormat": {
                                "description": "The flatten format, default is: $(comp-name-1):value,$(comp-name-2):value.",
                                "type": "object",
                                "required": [
                                  "delimiter",
                                  "keyValueDelimiter"
                                ],
                                "properties": {
                                  "delimiter": {
                                    "description": "Pair delimiter.",
                                    "type": "string",
                                    "default": ","
                                  },
                                  "keyValueDelimiter": {
                                    "description": "Key-value delimiter.",
                                    "type": "string",
                                    "default": ":"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "newVarSuffix": {
                                "description": "If set, the existing variable will be kept, and a new variable will be defined with the specified suffix\nin pattern: $(var.name)_$(suffix).\nThe new variable will be auto-created and placed behind the existing one.\nIf not set, the existing variable will be reused with the value format defined below.",
                                "type": "string"
                              },
                              "valueFormat": {
                                "description": "The format of the value that the operator will use to compose values from multiple components.",
                                "type": "string",
                                "default": "Flatten"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requireAllComponentObjects": {
                            "description": "RequireAllComponentObjects controls whether all component objects must exist before resolving.\nIf set to true, resolving will only proceed if all component objects are present.",
                            "type": "boolean"
                          },
                          "strategy": {
                            "description": "Define the strategy for handling multiple cluster objects.",
                            "type": "string",
                            "enum": [
                              "individual",
                              "combined"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the referent object.",
                        "type": "string"
                      },
                      "optional": {
                        "description": "Specify whether the object must be defined.",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SidecarDefinitionStatus defines the observed state of SidecarDefinition",
      "type": "object",
      "properties": {
        "message": {
          "description": "Provides additional information about the current phase.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "Refers to the most recent generation that has been observed for the SidecarDefinition.",
          "type": "integer",
          "format": "int64"
        },
        "owners": {
          "description": "Resolved owners of the SidecarDefinition.",
          "type": "string"
        },
        "phase": {
          "description": "Represents the current status of the SidecarDefinition. Valid values include ``, `Available`, and `Unavailable`.\nWhen the status is `Available`, the SidecarDefinition is ready and can be utilized by related objects.",
          "type": "string",
          "enum": [
            "Available",
            "Unavailable"
          ]
        },
        "selectors": {
          "description": "Resolved selectors of the SidecarDefinition.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
