{
  "description": "ComponentVersion is the Schema for the componentversions API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ComponentVersionSpec defines the desired state of ComponentVersion",
      "type": "object",
      "required": [
        "compatibilityRules",
        "releases"
      ],
      "properties": {
        "compatibilityRules": {
          "description": "CompatibilityRules defines compatibility rules between sets of component definitions and releases.",
          "type": "array",
          "maxItems": 128,
          "minItems": 1,
          "items": {
            "description": "ComponentVersionCompatibilityRule defines the compatibility between a set of component definitions and a set of releases.",
            "type": "object",
            "required": [
              "compDefs",
              "releases"
            ],
            "properties": {
              "compDefs": {
                "description": "CompDefs specifies names for the component definitions associated with this ComponentVersion.\nEach name in the list can represent an exact name, a name prefix, or a regular expression pattern.\n\n\nFor example:\n\n\n- \"mysql-8.0.30-v1alpha1\": Matches the exact name \"mysql-8.0.30-v1alpha1\"\n- \"mysql-8.0.30\": Matches all names starting with \"mysql-8.0.30\"\n- \"^mysql-8.0.\\d{1,2}$\": Matches all names starting with \"mysql-8.0.\" followed by one or two digits.",
                "type": "array",
                "maxItems": 128,
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              },
              "releases": {
                "description": "Releases is a list of identifiers for the releases.",
                "type": "array",
                "maxItems": 128,
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "releases": {
          "description": "Releases represents different releases of component instances within this ComponentVersion.",
          "type": "array",
          "maxItems": 128,
          "minItems": 1,
          "items": {
            "description": "ComponentVersionRelease represents a release of component instances within a ComponentVersion.",
            "type": "object",
            "required": [
              "images",
              "name",
              "serviceVersion"
            ],
            "properties": {
              "changes": {
                "description": "Changes provides information about the changes made in this release.",
                "type": "string",
                "maxLength": 256
              },
              "images": {
                "description": "Images define the new images for containers, actions or external applications within the release.\n\n\nIf an image is specified for a lifecycle action, the key should be the field name (case-insensitive) of\nthe action in the LifecycleActions struct.",
                "type": "object",
                "maxProperties": 128,
                "minProperties": 1,
                "additionalProperties": {
                  "type": "string"
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "self.all(key, size(key) \u003c= 32)",
                    "message": "Container, action or external application name may not exceed maximum length of 32 characters"
                  },
                  {
                    "rule": "self.all(key, size(self[key]) \u003c= 256)",
                    "message": "Image name may not exceed maximum length of 256 characters"
                  }
                ]
              },
              "name": {
                "description": "Name is a unique identifier for this release.\nCannot be updated.",
                "type": "string",
                "maxLength": 32
              },
              "serviceVersion": {
                "description": "ServiceVersion defines the version of the well-known service that the component provides.\nThe version should follow the syntax and semantics of the \"Semantic Versioning\" specification (http://semver.org/).\nIf the release is used, it will serve as the service version for component instances, overriding the one defined in the component definition.\nCannot be updated.",
                "type": "string",
                "maxLength": 32
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ComponentVersionStatus defines the observed state of ComponentVersion",
      "type": "object",
      "properties": {
        "message": {
          "description": "Extra message for current phase.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this ComponentVersion.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Phase valid values are ``, `Available`, 'Unavailable`.\nAvailable is ComponentVersion become available, and can be used for co-related objects.",
          "type": "string",
          "enum": [
            "Available",
            "Unavailable"
          ]
        },
        "serviceVersions": {
          "description": "ServiceVersions represent the supported service versions of this ComponentVersion.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
