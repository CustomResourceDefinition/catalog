{
  "description": "BackupPolicyTemplate should be provided by addon developers and is linked to a ClusterDefinition\nand its associated ComponentDefinitions.\nIt is responsible for generating BackupPolicies for Components that require backup operations,\nalso determining the suitable backup methods and strategies.\nThis template is automatically selected based on the specified ClusterDefinition and ComponentDefinitions\nwhen a Cluster is created.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Defines the desired state of the BackupPolicyTemplate.",
      "type": "object",
      "required": [
        "backupPolicies"
      ],
      "properties": {
        "backupPolicies": {
          "description": "Represents an array of BackupPolicy templates, with each template corresponding to a specified ComponentDefinition\nor to a group of ComponentDefinitions that are different versions of definitions of the same component.",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "BackupPolicy is the template corresponding to a specified ComponentDefinition\nor to a group of ComponentDefinitions that are different versions of definitions of the same component.",
            "type": "object",
            "required": [
              "backupMethods"
            ],
            "properties": {
              "backoffLimit": {
                "description": "Specifies the maximum number of retry attempts for a backup before it is considered a failure.",
                "type": "integer",
                "format": "int32",
                "default": 2,
                "maximum": 10,
                "minimum": 0
              },
              "backupMethods": {
                "description": "Defines an array of BackupMethods to be used.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "actionSetName": {
                      "description": "Refers to the ActionSet object that defines the backup actions.\nFor volume snapshot backup, the actionSet is not required, the controller\nwill use the CSI volume snapshotter to create the snapshot.",
                      "type": "string"
                    },
                    "compatibleMethod": {
                      "description": "The name of the compatible full backup method, used by incremental backups.",
                      "type": "string",
                      "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
                    },
                    "env": {
                      "description": "Specifies the environment variables for the backup workload.",
                      "type": "array",
                      "items": {
                        "description": "EnvVar represents an environment variable present in a Container.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                    "type": "string"
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "envMapping": {
                      "description": "Specifies a mapping of an environment variable key to the appropriate version of the tool image\nrequired for backups, as determined by ClusterVersion and ComponentDefinition.\nThe environment variable is then injected into the container executing the backup task.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "key",
                          "valueFrom"
                        ],
                        "properties": {
                          "key": {
                            "description": "Specifies the environment variable key in the mapping.",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Specifies the source used to derive the value of the environment variable,\nwhich typically represents the tool image required for backup operation.",
                            "type": "object",
                            "properties": {
                              "clusterVersionRef": {
                                "description": "Determine the appropriate version of the backup tool image from ClusterVersion.\n\n\nDeprecated since v0.9, since ClusterVersion is deprecated.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "mappingValue",
                                    "names"
                                  ],
                                  "properties": {
                                    "mappingValue": {
                                      "description": "Specifies the appropriate version of the backup tool image.",
                                      "type": "string"
                                    },
                                    "names": {
                                      "description": "Represents an array of names of ClusterVersion or ComponentDefinition or ServiceVersion that can be mapped to\nthe appropriate version of the backup tool image.\n\n\nThis mapping allows different versions of component images to correspond to specific versions of backup tool images.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "componentDef": {
                                "description": "Determine the appropriate version of the backup tool image from ComponentDefinition.\nEach name in the list can represent an exact name, a name prefix, or a regular expression pattern.\n\n\nFor example:\n\n\n- \"mysql-8.0.30-v1alpha1\": Matches the exact name \"mysql-8.0.30-v1alpha1\"\n- \"mysql-8.0.30\": Matches all names starting with \"mysql-8.0.30\"\n- \"^mysql-8.0.\\d{1,2}$\": Matches all names starting with \"mysql-8.0.\" followed by one or two digits.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "mappingValue",
                                    "names"
                                  ],
                                  "properties": {
                                    "mappingValue": {
                                      "description": "Specifies the appropriate version of the backup tool image.",
                                      "type": "string"
                                    },
                                    "names": {
                                      "description": "Represents an array of names of ClusterVersion or ComponentDefinition or ServiceVersion that can be mapped to\nthe appropriate version of the backup tool image.\n\n\nThis mapping allows different versions of component images to correspond to specific versions of backup tool images.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "serviceVersion": {
                                "description": "Determine the appropriate version of the backup tool image from ServiceVersion.\nEach service version in the list can represent an exact version, a version prefix, or a regular expression pattern.\n\n\nFor example:\n\n\n- \"8.0.33\": Matches the exact version \"8.0.33\"\n- \"8.0\": Matches all versions starting with \"8.0\"\n- \"^8.0.\\d{1,2}$\": Matches all versions starting with \"8.0.\" followed by one or two digits.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "mappingValue",
                                    "names"
                                  ],
                                  "properties": {
                                    "mappingValue": {
                                      "description": "Specifies the appropriate version of the backup tool image.",
                                      "type": "string"
                                    },
                                    "names": {
                                      "description": "Represents an array of names of ClusterVersion or ComponentDefinition or ServiceVersion that can be mapped to\nthe appropriate version of the backup tool image.\n\n\nThis mapping allows different versions of component images to correspond to specific versions of backup tool images.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "name": {
                      "description": "The name of backup method.",
                      "type": "string",
                      "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
                    },
                    "runtimeSettings": {
                      "description": "Specifies runtime settings for the backup workload container.",
                      "type": "object",
                      "properties": {
                        "resources": {
                          "description": "Specifies the resource required by container.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": "object",
                          "properties": {
                            "claims": {
                              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers.",
                              "type": "array",
                              "items": {
                                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "limits": {
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "requests": {
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "snapshotVolumes": {
                      "description": "Specifies whether to take snapshots of persistent volumes. If true,\nthe ActionSetName is not required, the controller will use the CSI volume\nsnapshotter to create the snapshot.",
                      "type": "boolean",
                      "default": false
                    },
                    "target": {
                      "description": "Specifies the target information to back up, it will override the target in backup policy.",
                      "type": "object",
                      "required": [
                        "role"
                      ],
                      "properties": {
                        "account": {
                          "description": "If `backupPolicy.componentDefs` is set, this field is required to specify the system account name.\nThis account must match one listed in `componentDefinition.spec.systemAccounts[*].name`.\nThe corresponding secret created by this account is used to connect to the database.\n\n\nIf `backupPolicy.componentDefRef` (a legacy and deprecated API) is set, the secret defined in\n`clusterDefinition.spec.ConnectionCredential` is used instead.",
                          "type": "string"
                        },
                        "connectionCredential": {
                          "description": "Specifies the connection credential to connect to the target database cluster.",
                          "type": "object",
                          "required": [
                            "secretName"
                          ],
                          "properties": {
                            "hostKey": {
                              "description": "Specifies the map key of the host in the connection credential secret.",
                              "type": "string"
                            },
                            "passwordKey": {
                              "description": "Specifies the map key of the password in the connection credential secret.\nThis password will be saved in the backup annotation for full backup.\nYou can use the environment variable DP_ENCRYPTION_KEY to specify encryption key.",
                              "type": "string",
                              "default": "password"
                            },
                            "portKey": {
                              "description": "Specifies the map key of the port in the connection credential secret.",
                              "type": "string"
                            },
                            "secretName": {
                              "description": "Refers to the Secret object that contains the connection credential.",
                              "type": "string",
                              "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
                            },
                            "usernameKey": {
                              "description": "Specifies the map key of the user in the connection credential secret.",
                              "type": "string",
                              "default": "username"
                            }
                          },
                          "additionalProperties": false
                        },
                        "connectionCredentialKey": {
                          "description": "Specifies the keys of the connection credential secret defined in `clusterDefinition.spec.ConnectionCredential`.\nIt will be ignored when the `account` is set.",
                          "type": "object",
                          "properties": {
                            "hostKey": {
                              "description": "Defines the key of the host in the connection credential secret.",
                              "type": "string"
                            },
                            "passwordKey": {
                              "description": "Represents the key of the password in the connection credential secret.\nIf not specified, the default key \"password\" is used.",
                              "type": "string"
                            },
                            "portKey": {
                              "description": "Indicates map key of the port in the connection credential secret.",
                              "type": "string"
                            },
                            "usernameKey": {
                              "description": "Represents the key of the username in the connection credential secret.\nIf not specified, the default key \"username\" is used.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "fallbackRole": {
                          "description": "Specifies the fallback role to select one replica for backup, this only takes effect when the\n`strategy` field below is set to `Any`.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Specifies a mandatory and unique identifier for each target when using the \"targets\" field.\nThe backup data for the current target is stored in a uniquely named subdirectory.",
                          "type": "string"
                        },
                        "podSelector": {
                          "description": "Used to find the target pod. The volumes of the target pod will be backed up.",
                          "type": "object",
                          "properties": {
                            "fallbackLabelSelector": {
                              "description": "fallbackLabelSelector is used to filter available pods when the labelSelector fails.\nThis only takes effect when the `strategy` field below is set to `Any`.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "type": "array",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "matchLabels": {
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "matchExpressions": {
                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                              "type": "array",
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "matchLabels": {
                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "strategy": {
                              "description": "Specifies the strategy to select the target pod when multiple pods are selected.\nValid values are:\n\n\n- `Any`: select any one pod that match the labelsSelector.\n- `All`: select all pods that match the labelsSelector. The backup data for the current pod\nwill be stored in a subdirectory named after the pod.",
                              "type": "string",
                              "default": "Any",
                              "enum": [
                                "Any",
                                "All"
                              ]
                            },
                            "useParentSelectedPods": {
                              "description": "UseParentSelectedPods indicates whether to use the pods selected by the parent for backup.\nIf set to true, the backup will use the same pods selected by the parent.\nAnd only takes effect when the 'strategy' is set to 'Any'.",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "resources": {
                          "description": "Specifies the kubernetes resources to back up.",
                          "type": "object",
                          "properties": {
                            "excluded": {
                              "description": "excluded is a slice of namespaced-scoped resource type names to exclude in\nthe kubernetes resources.\nThe default value is empty.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "included": {
                              "description": "included is a slice of namespaced-scoped resource type names to include in\nthe kubernetes resources.\nThe default value is empty.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "selector": {
                              "description": "A metav1.LabelSelector to filter the target kubernetes resources that need\nto be backed up. If not set, will do not back up any kubernetes resources.",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "type": "array",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "matchLabels": {
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        },
                        "role": {
                          "description": "Specifies the role to select one or more replicas for backup.\n\n\n- If no replica with the specified role exists, the backup task will fail.\n  Special case: If there is only one replica in the cluster, it will be used for backup,\n  even if its role differs from the specified one.\n  For example, if you specify backing up on a secondary replica, but the cluster is single-node\n  with only one primary replica, the primary will be used for backup.\n  Future versions will address this special case using role priorities.\n- If multiple replicas satisfy the specified role, the choice (`Any` or `All`) will be made according to\n  the `strategy` field below.",
                          "type": "string"
                        },
                        "serviceAccountName": {
                          "description": "Specifies the service account to run the backup workload.",
                          "type": "string"
                        },
                        "strategy": {
                          "description": "Specifies the PodSelectionStrategy to use when multiple pods are\nselected for the backup target.\nValid values are:\n\n\n- Any: Selects any one pod that matches the labelsSelector.\n- All: Selects all pods that match the labelsSelector.",
                          "type": "string",
                          "enum": [
                            "Any",
                            "All"
                          ]
                        },
                        "useParentSelectedPods": {
                          "description": "UseParentSelectedPods indicates whether to use the pods selected by the parent for backup.\nIf set to true, the backup will use the same pods selected by the parent.\nAnd only takes effect when the 'strategy' is set to 'Any'.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "targetVolumes": {
                      "description": "Specifies which volumes from the target should be mounted in the backup workload.",
                      "type": "object",
                      "properties": {
                        "volumeMounts": {
                          "description": "Specifies the mount for the volumes specified in `volumes` section.",
                          "type": "array",
                          "items": {
                            "description": "VolumeMount describes a mounting of a Volume within a container.",
                            "type": "object",
                            "required": [
                              "mountPath",
                              "name"
                            ],
                            "properties": {
                              "mountPath": {
                                "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                                "type": "string"
                              },
                              "mountPropagation": {
                                "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.",
                                "type": "string"
                              },
                              "name": {
                                "description": "This must match the Name of a Volume.",
                                "type": "string"
                              },
                              "readOnly": {
                                "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                                "type": "boolean"
                              },
                              "subPath": {
                                "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                                "type": "string"
                              },
                              "subPathExpr": {
                                "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "volumes": {
                          "description": "Specifies the list of volumes of targeted application that should be mounted\non the backup workload.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "targets": {
                      "description": "Specifies multiple target information for backup operations. This includes details\nsuch as the target pod and cluster connection credentials. All specified targets\nwill be backed up collectively.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "connectionCredential": {
                            "description": "Specifies the connection credential to connect to the target database cluster.",
                            "type": "object",
                            "required": [
                              "secretName"
                            ],
                            "properties": {
                              "hostKey": {
                                "description": "Specifies the map key of the host in the connection credential secret.",
                                "type": "string"
                              },
                              "passwordKey": {
                                "description": "Specifies the map key of the password in the connection credential secret.\nThis password will be saved in the backup annotation for full backup.\nYou can use the environment variable DP_ENCRYPTION_KEY to specify encryption key.",
                                "type": "string",
                                "default": "password"
                              },
                              "portKey": {
                                "description": "Specifies the map key of the port in the connection credential secret.",
                                "type": "string"
                              },
                              "secretName": {
                                "description": "Refers to the Secret object that contains the connection credential.",
                                "type": "string",
                                "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
                              },
                              "usernameKey": {
                                "description": "Specifies the map key of the user in the connection credential secret.",
                                "type": "string",
                                "default": "username"
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Specifies a mandatory and unique identifier for each target when using the \"targets\" field.\nThe backup data for the current target is stored in a uniquely named subdirectory.",
                            "type": "string"
                          },
                          "podSelector": {
                            "description": "Used to find the target pod. The volumes of the target pod will be backed up.",
                            "type": "object",
                            "properties": {
                              "fallbackLabelSelector": {
                                "description": "fallbackLabelSelector is used to filter available pods when the labelSelector fails.\nThis only takes effect when the `strategy` field below is set to `Any`.",
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "type": "array",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "matchLabels": {
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              },
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "strategy": {
                                "description": "Specifies the strategy to select the target pod when multiple pods are selected.\nValid values are:\n\n\n- `Any`: select any one pod that match the labelsSelector.\n- `All`: select all pods that match the labelsSelector. The backup data for the current pod\nwill be stored in a subdirectory named after the pod.",
                                "type": "string",
                                "default": "Any",
                                "enum": [
                                  "Any",
                                  "All"
                                ]
                              },
                              "useParentSelectedPods": {
                                "description": "UseParentSelectedPods indicates whether to use the pods selected by the parent for backup.\nIf set to true, the backup will use the same pods selected by the parent.\nAnd only takes effect when the 'strategy' is set to 'Any'.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resources": {
                            "description": "Specifies the kubernetes resources to back up.",
                            "type": "object",
                            "properties": {
                              "excluded": {
                                "description": "excluded is a slice of namespaced-scoped resource type names to exclude in\nthe kubernetes resources.\nThe default value is empty.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "included": {
                                "description": "included is a slice of namespaced-scoped resource type names to include in\nthe kubernetes resources.\nThe default value is empty.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "selector": {
                                "description": "A metav1.LabelSelector to filter the target kubernetes resources that need\nto be backed up. If not set, will do not back up any kubernetes resources.",
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "type": "array",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "matchLabels": {
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          },
                          "serviceAccountName": {
                            "description": "Specifies the service account to run the backup workload.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "componentDefRef": {
                "description": "Specifies the name of ClusterComponentDefinition defined in the ClusterDefinition.\nMust comply with the IANA Service Naming rule.\n\n\nDeprecated since v0.9, should use `componentDefs` instead.\nThis field is maintained for backward compatibility and its use is discouraged.\nExisting usage should be updated to the current preferred approach to avoid compatibility issues in future releases.",
                "type": "string",
                "maxLength": 22,
                "pattern": "^[a-z]([a-z0-9\\-]*[a-z0-9])?$"
              },
              "componentDefs": {
                "description": "Specifies the name of the ComponentDefinition.\nEach name in the list can represent an exact name, a name prefix, or a regular expression pattern.\n\n\nFor example:\n\n\n- \"mysql-8.0.30-v1alpha1\": Matches the exact name \"mysql-8.0.30-v1alpha1\"\n- \"mysql-8.0.30\": Matches all names starting with \"mysql-8.0.30\"\n- \"^mysql-8.0.\\d{1,2}$\": Matches all names starting with \"mysql-8.0.\" followed by one or two digits.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "schedules": {
                "description": "Defines the execution plans for backup tasks, specifying when and how backups should occur,\nand the retention period of backup files.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "backupMethod",
                    "cronExpression"
                  ],
                  "properties": {
                    "backupMethod": {
                      "description": "Defines the backup method name that is defined in backupPolicy.",
                      "type": "string"
                    },
                    "cronExpression": {
                      "description": "Represents the cron expression for schedule, with the timezone set in UTC.\nRefer to https://en.wikipedia.org/wiki/Cron for more details.",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Specifies whether the backup schedule is enabled or not.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Specifies the name of the schedule. Names cannot be duplicated.\nIf the name is empty, it will be considered the same as the value of the backupMethod below.",
                      "type": "string"
                    },
                    "parameters": {
                      "description": "Specifies a list of name-value pairs representing parameters and their corresponding values.\nParameters match the schema specified in the `actionset.spec.parametersSchema`",
                      "type": "array",
                      "maxItems": 128,
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "value"
                        ],
                        "properties": {
                          "name": {
                            "description": "Represents the name of the parameter.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Represents the parameter values.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "retentionPeriod": {
                      "description": "Determines the duration for which the backup should be retained.\nThe controller will remove all backups that are older than the RetentionPeriod.\nFor instance, a RetentionPeriod of `30d` will retain only the backups from the last 30 days.\nSample duration format:\n\n\n- years: \t2y\n- months: \t6mo\n- days: \t\t30d\n- hours: \t12h\n- minutes: \t30m\n\n\nThese durations can also be combined, for example: 30d12h30m.",
                      "type": "string",
                      "default": "7d"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "target": {
                "description": "Defines the selection criteria of instance to be backed up, and the connection credential to be used\nduring the backup process.",
                "type": "object",
                "required": [
                  "role"
                ],
                "properties": {
                  "account": {
                    "description": "If `backupPolicy.componentDefs` is set, this field is required to specify the system account name.\nThis account must match one listed in `componentDefinition.spec.systemAccounts[*].name`.\nThe corresponding secret created by this account is used to connect to the database.\n\n\nIf `backupPolicy.componentDefRef` (a legacy and deprecated API) is set, the secret defined in\n`clusterDefinition.spec.ConnectionCredential` is used instead.",
                    "type": "string"
                  },
                  "connectionCredentialKey": {
                    "description": "Specifies the keys of the connection credential secret defined in `clusterDefinition.spec.ConnectionCredential`.\nIt will be ignored when the `account` is set.",
                    "type": "object",
                    "properties": {
                      "hostKey": {
                        "description": "Defines the key of the host in the connection credential secret.",
                        "type": "string"
                      },
                      "passwordKey": {
                        "description": "Represents the key of the password in the connection credential secret.\nIf not specified, the default key \"password\" is used.",
                        "type": "string"
                      },
                      "portKey": {
                        "description": "Indicates map key of the port in the connection credential secret.",
                        "type": "string"
                      },
                      "usernameKey": {
                        "description": "Represents the key of the username in the connection credential secret.\nIf not specified, the default key \"username\" is used.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "fallbackRole": {
                    "description": "Specifies the fallback role to select one replica for backup, this only takes effect when the\n`strategy` field below is set to `Any`.",
                    "type": "string"
                  },
                  "role": {
                    "description": "Specifies the role to select one or more replicas for backup.\n\n\n- If no replica with the specified role exists, the backup task will fail.\n  Special case: If there is only one replica in the cluster, it will be used for backup,\n  even if its role differs from the specified one.\n  For example, if you specify backing up on a secondary replica, but the cluster is single-node\n  with only one primary replica, the primary will be used for backup.\n  Future versions will address this special case using role priorities.\n- If multiple replicas satisfy the specified role, the choice (`Any` or `All`) will be made according to\n  the `strategy` field below.",
                    "type": "string"
                  },
                  "strategy": {
                    "description": "Specifies the PodSelectionStrategy to use when multiple pods are\nselected for the backup target.\nValid values are:\n\n\n- Any: Selects any one pod that matches the labelsSelector.\n- All: Selects all pods that match the labelsSelector.",
                    "type": "string",
                    "enum": [
                      "Any",
                      "All"
                    ]
                  },
                  "useParentSelectedPods": {
                    "description": "UseParentSelectedPods indicates whether to use the pods selected by the parent for backup.\nIf set to true, the backup will use the same pods selected by the parent.\nAnd only takes effect when the 'strategy' is set to 'Any'.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "clusterDefinitionRef": {
          "description": "Specifies the name of a ClusterDefinition.\nThis is an immutable attribute that cannot be changed after creation.\nAnd this field is deprecated since v0.9, consider using the ComponentDef instead.",
          "type": "string",
          "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "clusterDefinitionRef is immutable"
            }
          ]
        },
        "identifier": {
          "description": "Specifies a unique identifier for the BackupPolicyTemplate.\n\n\nThis identifier will be used as the suffix of the name of automatically generated BackupPolicy.\nThis prevents unintended overwriting of BackupPolicies due to name conflicts when multiple BackupPolicyTemplates\nare present.\nFor instance, using \"backup-policy\" for regular backups and \"backup-policy-hscale\" for horizontal-scale ops\ncan differentiate the policies.",
          "type": "string",
          "maxLength": 20
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Populated by the system, it represents the current information about the BackupPolicyTemplate.",
      "type": "object"
    }
  }
}
