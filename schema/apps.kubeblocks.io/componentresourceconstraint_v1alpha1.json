{
  "description": "ComponentResourceConstraint is the Schema for the componentresourceconstraints API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ComponentResourceConstraintSpec defines the desired state of ComponentResourceConstraint",
      "type": "object",
      "required": [
        "rules"
      ],
      "properties": {
        "componentSelector": {
          "description": "componentSelector is used to bind the resource constraint to components based on ComponentDefinition API.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "componentDefRef",
              "rules"
            ],
            "properties": {
              "componentDefRef": {
                "description": "In versions prior to KB 0.8.0, ComponentDefRef is the name of the component definition in the ClusterDefinition.\nIn KB 0.8.0 and later versions, ComponentDefRef is the name of ComponentDefinition.",
                "type": "string"
              },
              "rules": {
                "description": "rules are the constraint rules that will be applied to the component.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "componentDefRef"
          ],
          "x-kubernetes-list-type": "map"
        },
        "rules": {
          "description": "Component resource constraint rules.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "cpu",
              "memory",
              "name"
            ],
            "properties": {
              "cpu": {
                "description": "The constraint for vcpu cores.",
                "type": "object",
                "properties": {
                  "max": {
                    "description": "The maximum count of vcpu cores, [Min, Max] defines a range for valid vcpu cores, and the value in this range\nmust be multiple times of Step. It's useful to define a large number of valid values without defining them one by\none. Please see the documentation for Step for some examples.\nIf Slots is specified, Max, Min, and Step are ignored",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "min": {
                    "description": "The minimum count of vcpu cores, [Min, Max] defines a range for valid vcpu cores, and the value in this range\nmust be multiple times of Step. It's useful to define a large number of valid values without defining them one by\none. Please see the documentation for Step for some examples.\nIf Slots is specified, Max, Min, and Step are ignored",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "slots": {
                    "description": "The valid vcpu cores, it's useful if you want to define valid vcpu cores explicitly.\nIf Slots is specified, Max, Min, and Step are ignored",
                    "type": "array",
                    "items": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "step": {
                    "description": "The minimum granularity of vcpu cores, [Min, Max] defines a range for valid vcpu cores and the value in this range must be\nmultiple times of Step.\nFor example:\n1. Min is 2, Max is 8, Step is 2, and the valid vcpu core is {2, 4, 6, 8}.\n2. Min is 0.5, Max is 2, Step is 0.5, and the valid vcpu core is {0.5, 1, 1.5, 2}.",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                },
                "additionalProperties": false
              },
              "memory": {
                "description": "The constraint for memory size.",
                "type": "object",
                "properties": {
                  "maxPerCPU": {
                    "description": "The maximum size of memory per vcpu core, [MinPerCPU, MaxPerCPU] defines a range for valid memory size per vcpu core.\nIt is useful on GCP as the ratio between the CPU and memory may be a range.\nIf SizePerCPU is specified, MinPerCPU and MaxPerCPU are ignored.\nReference: https://cloud.google.com/compute/docs/general-purpose-machines#custom_machine_types",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "minPerCPU": {
                    "description": "The minimum size of memory per vcpu core, [MinPerCPU, MaxPerCPU] defines a range for valid memory size per vcpu core.\nIt is useful on GCP as the ratio between the CPU and memory may be a range.\nIf SizePerCPU is specified, MinPerCPU and MaxPerCPU are ignored.\nReference: https://cloud.google.com/compute/docs/general-purpose-machines#custom_machine_types",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "sizePerCPU": {
                    "description": "The size of memory per vcpu core.\nFor example: 1Gi, 200Mi.\nIf SizePerCPU is specified, MinPerCPU and MaxPerCPU are ignore.",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "The name of the constraint.",
                "type": "string"
              },
              "storage": {
                "description": "The constraint for storage size.",
                "type": "object",
                "properties": {
                  "max": {
                    "description": "The maximum size of storage.",
                    "default": "10Ti",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "min": {
                    "description": "The minimum size of storage.",
                    "default": "20Gi",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "selector": {
          "description": "selector is used to bind the resource constraint to cluster definitions based on ClusterDefinition API.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "clusterDefRef",
              "components"
            ],
            "properties": {
              "clusterDefRef": {
                "description": "clusterDefRef is the name of the cluster definition.",
                "type": "string"
              },
              "components": {
                "description": "selector is used to bind the resource constraint to components.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "componentDefRef",
                    "rules"
                  ],
                  "properties": {
                    "componentDefRef": {
                      "description": "In versions prior to KB 0.8.0, ComponentDefRef is the name of the component definition in the ClusterDefinition.\nIn KB 0.8.0 and later versions, ComponentDefRef is the name of ComponentDefinition.",
                      "type": "string"
                    },
                    "rules": {
                      "description": "rules are the constraint rules that will be applied to the component.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "componentDefRef"
                ],
                "x-kubernetes-list-type": "map"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "clusterDefRef"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "additionalProperties": false
    }
  }
}
