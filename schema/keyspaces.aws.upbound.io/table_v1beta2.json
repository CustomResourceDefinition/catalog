{
  "description": "Table is the Schema for the Tables API. Provides a Keyspaces Table.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "TableSpec defines the desired state of Table",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "capacitySpecification": {
              "description": "Specifies the read/write throughput capacity mode for the table.",
              "type": "object",
              "properties": {
                "readCapacityUnits": {
                  "description": "The throughput capacity specified for read operations defined in read capacity units (RCUs).",
                  "type": "number"
                },
                "throughputMode": {
                  "description": "The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.",
                  "type": "string"
                },
                "writeCapacityUnits": {
                  "description": "The throughput capacity specified for write operations defined in write capacity units (WCUs).",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "clientSideTimestamps": {
              "description": "Enables client-side timestamps for the table. By default, the setting is disabled.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "comment": {
              "description": "A description of the table.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "A description of the table.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "defaultTimeToLive": {
              "description": "The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.",
              "type": "number"
            },
            "encryptionSpecification": {
              "description": "Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "kmsKeyIdentifier": {
                  "description": "The Amazon Resource Name (ARN) of the customer managed KMS key.",
                  "type": "string"
                },
                "type": {
                  "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keyspaceName": {
              "description": "The name of the keyspace that the table is going to be created in.",
              "type": "string"
            },
            "keyspaceNameRef": {
              "description": "Reference to a Keyspace in keyspaces to populate keyspaceName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "keyspaceNameSelector": {
              "description": "Selector for a Keyspace in keyspaces to populate keyspaceName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "pointInTimeRecovery": {
              "description": "Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "schemaDefinition": {
              "description": "Describes the schema of the table.",
              "type": "object",
              "properties": {
                "clusteringKey": {
                  "description": "The columns that are part of the clustering key of the table.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      },
                      "orderBy": {
                        "description": "The order modifier. Valid values: ASC, DESC.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "column": {
                  "description": "The regular columns of the table.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "partitionKey": {
                  "description": "The columns that are part of the partition key of the table .",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "staticColumn": {
                  "description": "The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "tableName": {
              "description": "The name of the table.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "ttl": {
              "description": "Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "capacitySpecification": {
              "description": "Specifies the read/write throughput capacity mode for the table.",
              "type": "object",
              "properties": {
                "readCapacityUnits": {
                  "description": "The throughput capacity specified for read operations defined in read capacity units (RCUs).",
                  "type": "number"
                },
                "throughputMode": {
                  "description": "The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.",
                  "type": "string"
                },
                "writeCapacityUnits": {
                  "description": "The throughput capacity specified for write operations defined in write capacity units (WCUs).",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "clientSideTimestamps": {
              "description": "Enables client-side timestamps for the table. By default, the setting is disabled.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "comment": {
              "description": "A description of the table.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "A description of the table.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "defaultTimeToLive": {
              "description": "The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.",
              "type": "number"
            },
            "encryptionSpecification": {
              "description": "Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "kmsKeyIdentifier": {
                  "description": "The Amazon Resource Name (ARN) of the customer managed KMS key.",
                  "type": "string"
                },
                "type": {
                  "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keyspaceName": {
              "description": "The name of the keyspace that the table is going to be created in.",
              "type": "string"
            },
            "keyspaceNameRef": {
              "description": "Reference to a Keyspace in keyspaces to populate keyspaceName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "keyspaceNameSelector": {
              "description": "Selector for a Keyspace in keyspaces to populate keyspaceName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "pointInTimeRecovery": {
              "description": "Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "schemaDefinition": {
              "description": "Describes the schema of the table.",
              "type": "object",
              "properties": {
                "clusteringKey": {
                  "description": "The columns that are part of the clustering key of the table.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      },
                      "orderBy": {
                        "description": "The order modifier. Valid values: ASC, DESC.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "column": {
                  "description": "The regular columns of the table.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "partitionKey": {
                  "description": "The columns that are part of the partition key of the table .",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "staticColumn": {
                  "description": "The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "tableName": {
              "description": "The name of the table.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "ttl": {
              "description": "Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.schemaDefinition) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.schemaDefinition))",
          "message": "spec.forProvider.schemaDefinition is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tableName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.tableName))",
          "message": "spec.forProvider.tableName is a required parameter"
        }
      ]
    },
    "status": {
      "description": "TableStatus defines the observed state of Table.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The ARN of the table.",
              "type": "string"
            },
            "capacitySpecification": {
              "description": "Specifies the read/write throughput capacity mode for the table.",
              "type": "object",
              "properties": {
                "readCapacityUnits": {
                  "description": "The throughput capacity specified for read operations defined in read capacity units (RCUs).",
                  "type": "number"
                },
                "throughputMode": {
                  "description": "The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.",
                  "type": "string"
                },
                "writeCapacityUnits": {
                  "description": "The throughput capacity specified for write operations defined in write capacity units (WCUs).",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "clientSideTimestamps": {
              "description": "Enables client-side timestamps for the table. By default, the setting is disabled.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "comment": {
              "description": "A description of the table.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "A description of the table.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "defaultTimeToLive": {
              "description": "The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.",
              "type": "number"
            },
            "encryptionSpecification": {
              "description": "Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "kmsKeyIdentifier": {
                  "description": "The Amazon Resource Name (ARN) of the customer managed KMS key.",
                  "type": "string"
                },
                "type": {
                  "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "type": "string"
            },
            "keyspaceName": {
              "description": "The name of the keyspace that the table is going to be created in.",
              "type": "string"
            },
            "pointInTimeRecovery": {
              "description": "Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "schemaDefinition": {
              "description": "Describes the schema of the table.",
              "type": "object",
              "properties": {
                "clusteringKey": {
                  "description": "The columns that are part of the clustering key of the table.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      },
                      "orderBy": {
                        "description": "The order modifier. Valid values: ASC, DESC.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "column": {
                  "description": "The regular columns of the table.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      },
                      "type": {
                        "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "partitionKey": {
                  "description": "The columns that are part of the partition key of the table .",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "staticColumn": {
                  "description": "The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the column.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "tableName": {
              "description": "The name of the table.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "ttl": {
              "description": "Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Shows how to enable client-side timestamps settings for the specified table. Valid values: ENABLED.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
