{
  "description": "Fleet is the Schema for the Fleets API. Provides an AppStream fleet",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FleetSpec defines the desired state of Fleet",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "computeCapacity": {
              "description": "Configuration block for the desired capacity of the fleet. See below.",
              "type": "object",
              "properties": {
                "desiredInstances": {
                  "description": "Desired number of streaming instances.",
                  "type": "number"
                },
                "desiredSessions": {
                  "description": "Desired number of user sessions for a multi-session fleet. This is not allowed for single-session fleets.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Description to display.",
              "type": "string"
            },
            "disconnectTimeoutInSeconds": {
              "description": "Amount of time that a streaming session remains active after users disconnect.",
              "type": "number"
            },
            "displayName": {
              "description": "Human-readable friendly name for the AppStream fleet.",
              "type": "string"
            },
            "domainJoinInfo": {
              "description": "Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.",
              "type": "object",
              "properties": {
                "directoryName": {
                  "description": "Fully qualified name of the directory (for example, corp.example.com).",
                  "type": "string"
                },
                "organizationalUnitDistinguishedName": {
                  "description": "Distinguished name of the organizational unit for computer accounts.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "enableDefaultInternetAccess": {
              "description": "Enables or disables default internet access for the fleet.",
              "type": "boolean"
            },
            "fleetType": {
              "description": "Fleet type. Valid values are: ON_DEMAND, ALWAYS_ON",
              "type": "string"
            },
            "iamRoleArn": {
              "description": "ARN of the IAM role to apply to the fleet.",
              "type": "string"
            },
            "iamRoleArnRef": {
              "description": "Reference to a Role in iam to populate iamRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "iamRoleArnSelector": {
              "description": "Selector for a Role in iam to populate iamRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "idleDisconnectTimeoutInSeconds": {
              "description": "Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect_timeout_in_seconds time interval begins. Defaults to 0. Valid value is between 60 and 3600 seconds.",
              "type": "number"
            },
            "imageArn": {
              "description": "ARN of the public, private, or shared image to use.",
              "type": "string"
            },
            "imageName": {
              "description": "Name of the image used to create the fleet.",
              "type": "string"
            },
            "instanceType": {
              "description": "Instance type to use when launching fleet instances.",
              "type": "string"
            },
            "maxSessionsPerInstance": {
              "description": "The maximum number of user sessions on an instance. This only applies to multi-session fleets.",
              "type": "number"
            },
            "maxUserDurationInSeconds": {
              "description": "Maximum amount of time that a streaming session can remain active, in seconds.",
              "type": "number"
            },
            "name": {
              "description": "Unique name for the fleet.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "streamView": {
              "description": "AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to APP.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcConfig": {
              "description": "Configuration block for the VPC configuration for the image builder. See below.",
              "type": "object",
              "properties": {
                "securityGroupIds": {
                  "description": "Identifiers of the security groups for the fleet or image builder.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subnetIdRefs": {
                  "description": "References to Subnet in ec2 to populate subnetIds.",
                  "type": "array",
                  "items": {
                    "description": "A Reference to a named object.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "subnetIdSelector": {
                  "description": "Selector for a list of Subnet in ec2 to populate subnetIds.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "subnetIds": {
                  "description": "Identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "computeCapacity": {
              "description": "Configuration block for the desired capacity of the fleet. See below.",
              "type": "object",
              "properties": {
                "desiredInstances": {
                  "description": "Desired number of streaming instances.",
                  "type": "number"
                },
                "desiredSessions": {
                  "description": "Desired number of user sessions for a multi-session fleet. This is not allowed for single-session fleets.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Description to display.",
              "type": "string"
            },
            "disconnectTimeoutInSeconds": {
              "description": "Amount of time that a streaming session remains active after users disconnect.",
              "type": "number"
            },
            "displayName": {
              "description": "Human-readable friendly name for the AppStream fleet.",
              "type": "string"
            },
            "domainJoinInfo": {
              "description": "Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.",
              "type": "object",
              "properties": {
                "directoryName": {
                  "description": "Fully qualified name of the directory (for example, corp.example.com).",
                  "type": "string"
                },
                "organizationalUnitDistinguishedName": {
                  "description": "Distinguished name of the organizational unit for computer accounts.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "enableDefaultInternetAccess": {
              "description": "Enables or disables default internet access for the fleet.",
              "type": "boolean"
            },
            "fleetType": {
              "description": "Fleet type. Valid values are: ON_DEMAND, ALWAYS_ON",
              "type": "string"
            },
            "iamRoleArn": {
              "description": "ARN of the IAM role to apply to the fleet.",
              "type": "string"
            },
            "iamRoleArnRef": {
              "description": "Reference to a Role in iam to populate iamRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "iamRoleArnSelector": {
              "description": "Selector for a Role in iam to populate iamRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "idleDisconnectTimeoutInSeconds": {
              "description": "Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect_timeout_in_seconds time interval begins. Defaults to 0. Valid value is between 60 and 3600 seconds.",
              "type": "number"
            },
            "imageArn": {
              "description": "ARN of the public, private, or shared image to use.",
              "type": "string"
            },
            "imageName": {
              "description": "Name of the image used to create the fleet.",
              "type": "string"
            },
            "instanceType": {
              "description": "Instance type to use when launching fleet instances.",
              "type": "string"
            },
            "maxSessionsPerInstance": {
              "description": "The maximum number of user sessions on an instance. This only applies to multi-session fleets.",
              "type": "number"
            },
            "maxUserDurationInSeconds": {
              "description": "Maximum amount of time that a streaming session can remain active, in seconds.",
              "type": "number"
            },
            "name": {
              "description": "Unique name for the fleet.",
              "type": "string"
            },
            "streamView": {
              "description": "AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to APP.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcConfig": {
              "description": "Configuration block for the VPC configuration for the image builder. See below.",
              "type": "object",
              "properties": {
                "securityGroupIds": {
                  "description": "Identifiers of the security groups for the fleet or image builder.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subnetIdRefs": {
                  "description": "References to Subnet in ec2 to populate subnetIds.",
                  "type": "array",
                  "items": {
                    "description": "A Reference to a named object.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "subnetIdSelector": {
                  "description": "Selector for a list of Subnet in ec2 to populate subnetIds.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "subnetIds": {
                  "description": "Identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.computeCapacity) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.computeCapacity))",
          "message": "spec.forProvider.computeCapacity is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.instanceType))",
          "message": "spec.forProvider.instanceType is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        }
      ]
    },
    "status": {
      "description": "FleetStatus defines the observed state of Fleet.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "ARN of the appstream fleet.",
              "type": "string"
            },
            "computeCapacity": {
              "description": "Configuration block for the desired capacity of the fleet. See below.",
              "type": "object",
              "properties": {
                "available": {
                  "description": "Number of currently available instances that can be used to stream sessions.",
                  "type": "number"
                },
                "desiredInstances": {
                  "description": "Desired number of streaming instances.",
                  "type": "number"
                },
                "desiredSessions": {
                  "description": "Desired number of user sessions for a multi-session fleet. This is not allowed for single-session fleets.",
                  "type": "number"
                },
                "inUse": {
                  "description": "Number of instances in use for streaming.",
                  "type": "number"
                },
                "running": {
                  "description": "Total number of simultaneous streaming instances that are running.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "createdTime": {
              "description": "Date and time, in UTC and extended RFC 3339 format, when the fleet was created.",
              "type": "string"
            },
            "description": {
              "description": "Description to display.",
              "type": "string"
            },
            "disconnectTimeoutInSeconds": {
              "description": "Amount of time that a streaming session remains active after users disconnect.",
              "type": "number"
            },
            "displayName": {
              "description": "Human-readable friendly name for the AppStream fleet.",
              "type": "string"
            },
            "domainJoinInfo": {
              "description": "Configuration block for the name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain. See below.",
              "type": "object",
              "properties": {
                "directoryName": {
                  "description": "Fully qualified name of the directory (for example, corp.example.com).",
                  "type": "string"
                },
                "organizationalUnitDistinguishedName": {
                  "description": "Distinguished name of the organizational unit for computer accounts.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "enableDefaultInternetAccess": {
              "description": "Enables or disables default internet access for the fleet.",
              "type": "boolean"
            },
            "fleetType": {
              "description": "Fleet type. Valid values are: ON_DEMAND, ALWAYS_ON",
              "type": "string"
            },
            "iamRoleArn": {
              "description": "ARN of the IAM role to apply to the fleet.",
              "type": "string"
            },
            "id": {
              "description": "Unique identifier (ID) of the appstream fleet.",
              "type": "string"
            },
            "idleDisconnectTimeoutInSeconds": {
              "description": "Amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect_timeout_in_seconds time interval begins. Defaults to 0. Valid value is between 60 and 3600 seconds.",
              "type": "number"
            },
            "imageArn": {
              "description": "ARN of the public, private, or shared image to use.",
              "type": "string"
            },
            "imageName": {
              "description": "Name of the image used to create the fleet.",
              "type": "string"
            },
            "instanceType": {
              "description": "Instance type to use when launching fleet instances.",
              "type": "string"
            },
            "maxSessionsPerInstance": {
              "description": "The maximum number of user sessions on an instance. This only applies to multi-session fleets.",
              "type": "number"
            },
            "maxUserDurationInSeconds": {
              "description": "Maximum amount of time that a streaming session can remain active, in seconds.",
              "type": "number"
            },
            "name": {
              "description": "Unique name for the fleet.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "state": {
              "description": "State of the fleet. Can be STARTING, RUNNING, STOPPING or STOPPED",
              "type": "string"
            },
            "streamView": {
              "description": "AppStream 2.0 view that is displayed to your users when they stream from the fleet. When APP is specified, only the windows of applications opened by users display. When DESKTOP is specified, the standard desktop that is provided by the operating system displays. If not specified, defaults to APP.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcConfig": {
              "description": "Configuration block for the VPC configuration for the image builder. See below.",
              "type": "object",
              "properties": {
                "securityGroupIds": {
                  "description": "Identifiers of the security groups for the fleet or image builder.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subnetIds": {
                  "description": "Identifiers of the subnets to which a network interface is attached from the fleet instance or image builder instance.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
