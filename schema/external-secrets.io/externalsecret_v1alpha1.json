{
  "description": "ExternalSecret is the Schema for the external-secrets API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ExternalSecretSpec defines the desired state of ExternalSecret.",
      "type": "object",
      "required": [
        "secretStoreRef",
        "target"
      ],
      "properties": {
        "data": {
          "description": "Data defines the connection between the Kubernetes Secret keys and the Provider data",
          "type": "array",
          "items": {
            "description": "ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.\u003ckey\u003e) and the Provider data.",
            "type": "object",
            "required": [
              "remoteRef",
              "secretKey"
            ],
            "properties": {
              "remoteRef": {
                "description": "ExternalSecretDataRemoteRef defines Provider data location.",
                "type": "object",
                "required": [
                  "key"
                ],
                "properties": {
                  "conversionStrategy": {
                    "description": "Used to define a conversion Strategy",
                    "type": "string",
                    "default": "Default",
                    "enum": [
                      "Default",
                      "Unicode"
                    ]
                  },
                  "key": {
                    "description": "Key is the key used in the Provider, mandatory",
                    "type": "string"
                  },
                  "property": {
                    "description": "Used to select a specific property of the Provider value (if a map), if supported",
                    "type": "string"
                  },
                  "version": {
                    "description": "Used to select a specific version of the Provider value, if supported",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "secretKey": {
                "description": "The key in the Kubernetes Secret to store the value.",
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[-._a-zA-Z0-9]+$"
              }
            },
            "additionalProperties": false
          }
        },
        "dataFrom": {
          "description": "DataFrom is used to fetch all properties from a specific Provider data\nIf multiple entries are specified, the Secret keys are merged in the specified order",
          "type": "array",
          "items": {
            "description": "ExternalSecretDataRemoteRef defines Provider data location.",
            "type": "object",
            "required": [
              "key"
            ],
            "properties": {
              "conversionStrategy": {
                "description": "Used to define a conversion Strategy",
                "type": "string",
                "default": "Default",
                "enum": [
                  "Default",
                  "Unicode"
                ]
              },
              "key": {
                "description": "Key is the key used in the Provider, mandatory",
                "type": "string"
              },
              "property": {
                "description": "Used to select a specific property of the Provider value (if a map), if supported",
                "type": "string"
              },
              "version": {
                "description": "Used to select a specific version of the Provider value, if supported",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "refreshInterval": {
          "description": "RefreshInterval is the amount of time before the values are read again from the SecretStore provider\nValid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\"\nMay be set to zero to fetch and create it once. Defaults to 1h.",
          "type": "string",
          "default": "1h"
        },
        "secretStoreRef": {
          "description": "SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "Kind of the SecretStore resource (SecretStore or ClusterSecretStore)\nDefaults to `SecretStore`",
              "type": "string",
              "enum": [
                "SecretStore",
                "ClusterSecretStore"
              ]
            },
            "name": {
              "description": "Name of the SecretStore resource",
              "type": "string",
              "maxLength": 253,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            }
          },
          "additionalProperties": false
        },
        "target": {
          "description": "ExternalSecretTarget defines the Kubernetes Secret to be created\nThere can be only one target per ExternalSecret.",
          "type": "object",
          "properties": {
            "creationPolicy": {
              "description": "CreationPolicy defines rules on how to create the resulting Secret.\nDefaults to \"Owner\"",
              "type": "string",
              "default": "Owner",
              "enum": [
                "Owner",
                "Merge",
                "None"
              ]
            },
            "immutable": {
              "description": "Immutable defines if the final secret will be immutable",
              "type": "boolean"
            },
            "name": {
              "description": "The name of the Secret resource to be managed.\nDefaults to the .metadata.name of the ExternalSecret resource",
              "type": "string",
              "maxLength": 253,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            },
            "template": {
              "description": "Template defines a blueprint for the created Secret resource.",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "engineVersion": {
                  "description": "EngineVersion specifies the template engine version\nthat should be used to compile/execute the\ntemplate specified in .data and .templateFrom[].",
                  "type": "string",
                  "default": "v1",
                  "enum": [
                    "v1",
                    "v2"
                  ]
                },
                "metadata": {
                  "description": "ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "templateFrom": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "maxProperties": 1,
                    "minProperties": 1,
                    "properties": {
                      "configMap": {
                        "type": "object",
                        "required": [
                          "items",
                          "name"
                        ],
                        "properties": {
                          "items": {
                            "description": "A list of keys in the ConfigMap/Secret to use as templates for Secret data",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "A key in the ConfigMap/Secret",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "description": "The name of the ConfigMap/Secret resource",
                            "type": "string",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          }
                        },
                        "additionalProperties": false
                      },
                      "secret": {
                        "type": "object",
                        "required": [
                          "items",
                          "name"
                        ],
                        "properties": {
                          "items": {
                            "description": "A list of keys in the ConfigMap/Secret to use as templates for Secret data",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "A key in the ConfigMap/Secret",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "name": {
                            "description": "The name of the ConfigMap/Secret resource",
                            "type": "string",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "type": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "properties": {
        "binding": {
          "description": "Binding represents a servicebinding.io Provisioned Service reference to the secret",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "refreshTime": {
          "description": "refreshTime is the time and date the external secret was fetched and\nthe target secret updated",
          "type": "string",
          "format": "date-time",
          "nullable": true
        },
        "syncedResourceVersion": {
          "description": "SyncedResourceVersion keeps track of the last synced version",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
