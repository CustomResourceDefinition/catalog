{
  "description": "BackupPolicyVMWorkload is the Schema for the BackupPolicyVMWorkloads API. Manages an Azure VM Workload Backup Policy.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BackupPolicyVMWorkloadSpec defines the desired state of BackupPolicyVMWorkload",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "protectionPolicy": {
              "description": "One or more protection_policy blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backup": {
                    "description": "A backup block as defined below.",
                    "type": "object",
                    "properties": {
                      "frequency": {
                        "description": "The backup frequency for the VM Workload Backup Policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "frequencyInMinutes": {
                        "description": "The backup frequency in minutes for the VM Workload Backup Policy. Possible values are 15, 30, 60, 120, 240, 480, 720 and 1440.",
                        "type": "number"
                      },
                      "time": {
                        "description": "The time of day to perform the backup in 24hour format.",
                        "type": "string"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "policyType": {
                    "description": "The type of the VM Workload Backup Policy. Possible values are Differential, Full, Incremental and Log.",
                    "type": "string"
                  },
                  "retentionDaily": {
                    "description": "A retention_daily block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionMonthly": {
                    "description": "A retention_monthly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "formatType": {
                        "description": "The retention schedule format type for yearly retention policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "monthdays": {
                        "description": "The monthday backups to retain. Possible values are between 0 and 28.",
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weeks": {
                        "description": "The weeks of the month to retain backups of. Possible values are First, Second, Third, Fourth, Last.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionWeekly": {
                    "description": "A retention_weekly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionYearly": {
                    "description": "A retention_yearly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "formatType": {
                        "description": "The retention schedule format type for yearly retention policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "monthdays": {
                        "description": "The monthday backups to retain. Possible values are between 0 and 28.",
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "months": {
                        "description": "The months of the year to retain backups of. Possible values are January, February, March, April, May, June, July, August, September, October, November and December.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weeks": {
                        "description": "The weeks of the month to retain backups of. Possible values are First, Second, Third, Fourth, Last.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "simpleRetention": {
                    "description": "A simple_retention block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "recoveryVaultName": {
              "description": "The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "recoveryVaultNameRef": {
              "description": "Reference to a Vault in recoveryservices to populate recoveryVaultName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "recoveryVaultNameSelector": {
              "description": "Selector for a Vault in recoveryservices to populate recoveryVaultName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "settings": {
              "description": "A settings block as defined below.",
              "type": "object",
              "properties": {
                "compressionEnabled": {
                  "description": "The compression setting for the VM Workload Backup Policy. Defaults to false.",
                  "type": "boolean"
                },
                "timeZone": {
                  "description": "The timezone for the VM Workload Backup Policy. The possible values are defined here.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "workloadType": {
              "description": "The VM Workload type for the Backup Policy. Possible values are SQLDataBase and SAPHanaDatabase. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "protectionPolicy": {
              "description": "One or more protection_policy blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backup": {
                    "description": "A backup block as defined below.",
                    "type": "object",
                    "properties": {
                      "frequency": {
                        "description": "The backup frequency for the VM Workload Backup Policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "frequencyInMinutes": {
                        "description": "The backup frequency in minutes for the VM Workload Backup Policy. Possible values are 15, 30, 60, 120, 240, 480, 720 and 1440.",
                        "type": "number"
                      },
                      "time": {
                        "description": "The time of day to perform the backup in 24hour format.",
                        "type": "string"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "policyType": {
                    "description": "The type of the VM Workload Backup Policy. Possible values are Differential, Full, Incremental and Log.",
                    "type": "string"
                  },
                  "retentionDaily": {
                    "description": "A retention_daily block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionMonthly": {
                    "description": "A retention_monthly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "formatType": {
                        "description": "The retention schedule format type for yearly retention policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "monthdays": {
                        "description": "The monthday backups to retain. Possible values are between 0 and 28.",
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weeks": {
                        "description": "The weeks of the month to retain backups of. Possible values are First, Second, Third, Fourth, Last.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionWeekly": {
                    "description": "A retention_weekly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionYearly": {
                    "description": "A retention_yearly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "formatType": {
                        "description": "The retention schedule format type for yearly retention policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "monthdays": {
                        "description": "The monthday backups to retain. Possible values are between 0 and 28.",
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "months": {
                        "description": "The months of the year to retain backups of. Possible values are January, February, March, April, May, June, July, August, September, October, November and December.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weeks": {
                        "description": "The weeks of the month to retain backups of. Possible values are First, Second, Third, Fourth, Last.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "simpleRetention": {
                    "description": "A simple_retention block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "settings": {
              "description": "A settings block as defined below.",
              "type": "object",
              "properties": {
                "compressionEnabled": {
                  "description": "The compression setting for the VM Workload Backup Policy. Defaults to false.",
                  "type": "boolean"
                },
                "timeZone": {
                  "description": "The timezone for the VM Workload Backup Policy. The possible values are defined here.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "workloadType": {
              "description": "The VM Workload type for the Backup Policy. Possible values are SQLDataBase and SAPHanaDatabase. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protectionPolicy) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.protectionPolicy))",
          "message": "spec.forProvider.protectionPolicy is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.settings) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.settings))",
          "message": "spec.forProvider.settings is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.workloadType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.workloadType))",
          "message": "spec.forProvider.workloadType is a required parameter"
        }
      ]
    },
    "status": {
      "description": "BackupPolicyVMWorkloadStatus defines the observed state of BackupPolicyVMWorkload.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "id": {
              "description": "The ID of the Azure VM Workload Backup Policy.",
              "type": "string"
            },
            "protectionPolicy": {
              "description": "One or more protection_policy blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backup": {
                    "description": "A backup block as defined below.",
                    "type": "object",
                    "properties": {
                      "frequency": {
                        "description": "The backup frequency for the VM Workload Backup Policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "frequencyInMinutes": {
                        "description": "The backup frequency in minutes for the VM Workload Backup Policy. Possible values are 15, 30, 60, 120, 240, 480, 720 and 1440.",
                        "type": "number"
                      },
                      "time": {
                        "description": "The time of day to perform the backup in 24hour format.",
                        "type": "string"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "policyType": {
                    "description": "The type of the VM Workload Backup Policy. Possible values are Differential, Full, Incremental and Log.",
                    "type": "string"
                  },
                  "retentionDaily": {
                    "description": "A retention_daily block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionMonthly": {
                    "description": "A retention_monthly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "formatType": {
                        "description": "The retention schedule format type for yearly retention policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "monthdays": {
                        "description": "The monthday backups to retain. Possible values are between 0 and 28.",
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weeks": {
                        "description": "The weeks of the month to retain backups of. Possible values are First, Second, Third, Fourth, Last.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionWeekly": {
                    "description": "A retention_weekly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "retentionYearly": {
                    "description": "A retention_yearly block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      },
                      "formatType": {
                        "description": "The retention schedule format type for yearly retention policy. Possible values are Daily and Weekly.",
                        "type": "string"
                      },
                      "monthdays": {
                        "description": "The monthday backups to retain. Possible values are between 0 and 28.",
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "months": {
                        "description": "The months of the year to retain backups of. Possible values are January, February, March, April, May, June, July, August, September, October, November and December.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weekdays": {
                        "description": "The weekday backups to retain. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "weeks": {
                        "description": "The weeks of the month to retain backups of. Possible values are First, Second, Third, Fourth, Last.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  },
                  "simpleRetention": {
                    "description": "A simple_retention block as defined below.",
                    "type": "object",
                    "properties": {
                      "count": {
                        "description": "The count that is used to count retention duration with duration type Days. Possible values are between 7 and 35.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "recoveryVaultName": {
              "description": "The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "settings": {
              "description": "A settings block as defined below.",
              "type": "object",
              "properties": {
                "compressionEnabled": {
                  "description": "The compression setting for the VM Workload Backup Policy. Defaults to false.",
                  "type": "boolean"
                },
                "timeZone": {
                  "description": "The timezone for the VM Workload Backup Policy. The possible values are defined here.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "workloadType": {
              "description": "The VM Workload type for the Backup Policy. Possible values are SQLDataBase and SAPHanaDatabase. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
