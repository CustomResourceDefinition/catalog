{
  "description": "Application is the Schema for the Applications API. Manages an EMR Serverless Application",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ApplicationSpec defines the desired state of Application",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "architecture": {
              "description": "The CPU architecture of an application. Valid values are ARM64 or X86_64. Default value is X86_64.",
              "type": "string"
            },
            "autoStartConfiguration": {
              "description": "The configuration for an application to automatically start on job submission.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enables the application to automatically start on job submission. Defaults to true.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "autoStopConfiguration": {
              "description": "The configuration for an application to automatically stop after a certain amount of time being idle.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enables the application to automatically start on job submission. Defaults to true.",
                  "type": "boolean"
                },
                "idleTimeoutMinutes": {
                  "description": "The amount of idle time in minutes after which your application will automatically stop. Defaults to 15 minutes.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "imageConfiguration": {
              "description": "The image configuration applied to all worker types.",
              "type": "object",
              "properties": {
                "imageUri": {
                  "description": "The image URI.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "initialCapacity": {
              "description": "The capacity to initialize when the application is created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "initialCapacityConfig": {
                    "description": "The initial capacity configuration per worker.",
                    "type": "object",
                    "properties": {
                      "workerConfiguration": {
                        "description": "The resource configuration of the initial capacity configuration.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "description": "The maximum allowed CPU for an application.",
                            "type": "string"
                          },
                          "disk": {
                            "description": "The maximum allowed disk for an application.",
                            "type": "string"
                          },
                          "memory": {
                            "description": "The maximum allowed resources for an application.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "workerCount": {
                        "description": "The number of workers in the initial capacity configuration.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialCapacityType": {
                    "description": "The worker type for an analytics framework. For Spark applications, the key can either be set to Driver or Executor. For Hive applications, it can be set to HiveDriver or TezTask.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "interactiveConfiguration": {
              "description": "Enables the interactive use cases to use when running an application.",
              "type": "object",
              "properties": {
                "livyEndpointEnabled": {
                  "description": "Enables an Apache Livy endpoint that you can connect to and run interactive jobs.",
                  "type": "boolean"
                },
                "studioEnabled": {
                  "description": "Enables you to connect an application to Amazon EMR Studio to run interactive workloads in a notebook.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "maximumCapacity": {
              "description": "The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "The maximum allowed CPU for an application.",
                  "type": "string"
                },
                "disk": {
                  "description": "The maximum allowed disk for an application.",
                  "type": "string"
                },
                "memory": {
                  "description": "The maximum allowed resources for an application.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "The name of the application.",
              "type": "string"
            },
            "networkConfiguration": {
              "description": "The network configuration for customer VPC connectivity.",
              "type": "object",
              "properties": {
                "securityGroupIds": {
                  "description": "The array of security group Ids for customer VPC connectivity.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "subnetIds": {
                  "description": "The array of subnet Ids for customer VPC connectivity.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "releaseLabel": {
              "description": "The EMR release version associated with the application.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "type": {
              "description": "The type of application you want to start, such as spark or hive.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "architecture": {
              "description": "The CPU architecture of an application. Valid values are ARM64 or X86_64. Default value is X86_64.",
              "type": "string"
            },
            "autoStartConfiguration": {
              "description": "The configuration for an application to automatically start on job submission.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enables the application to automatically start on job submission. Defaults to true.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "autoStopConfiguration": {
              "description": "The configuration for an application to automatically stop after a certain amount of time being idle.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enables the application to automatically start on job submission. Defaults to true.",
                  "type": "boolean"
                },
                "idleTimeoutMinutes": {
                  "description": "The amount of idle time in minutes after which your application will automatically stop. Defaults to 15 minutes.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "imageConfiguration": {
              "description": "The image configuration applied to all worker types.",
              "type": "object",
              "properties": {
                "imageUri": {
                  "description": "The image URI.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "initialCapacity": {
              "description": "The capacity to initialize when the application is created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "initialCapacityConfig": {
                    "description": "The initial capacity configuration per worker.",
                    "type": "object",
                    "properties": {
                      "workerConfiguration": {
                        "description": "The resource configuration of the initial capacity configuration.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "description": "The maximum allowed CPU for an application.",
                            "type": "string"
                          },
                          "disk": {
                            "description": "The maximum allowed disk for an application.",
                            "type": "string"
                          },
                          "memory": {
                            "description": "The maximum allowed resources for an application.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "workerCount": {
                        "description": "The number of workers in the initial capacity configuration.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialCapacityType": {
                    "description": "The worker type for an analytics framework. For Spark applications, the key can either be set to Driver or Executor. For Hive applications, it can be set to HiveDriver or TezTask.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "interactiveConfiguration": {
              "description": "Enables the interactive use cases to use when running an application.",
              "type": "object",
              "properties": {
                "livyEndpointEnabled": {
                  "description": "Enables an Apache Livy endpoint that you can connect to and run interactive jobs.",
                  "type": "boolean"
                },
                "studioEnabled": {
                  "description": "Enables you to connect an application to Amazon EMR Studio to run interactive workloads in a notebook.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "maximumCapacity": {
              "description": "The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "The maximum allowed CPU for an application.",
                  "type": "string"
                },
                "disk": {
                  "description": "The maximum allowed disk for an application.",
                  "type": "string"
                },
                "memory": {
                  "description": "The maximum allowed resources for an application.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "The name of the application.",
              "type": "string"
            },
            "networkConfiguration": {
              "description": "The network configuration for customer VPC connectivity.",
              "type": "object",
              "properties": {
                "securityGroupIds": {
                  "description": "The array of security group Ids for customer VPC connectivity.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "subnetIds": {
                  "description": "The array of subnet Ids for customer VPC connectivity.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "releaseLabel": {
              "description": "The EMR release version associated with the application.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "type": {
              "description": "The type of application you want to start, such as spark or hive.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.releaseLabel) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.releaseLabel))",
          "message": "spec.forProvider.releaseLabel is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.type))",
          "message": "spec.forProvider.type is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ApplicationStatus defines the observed state of Application.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "architecture": {
              "description": "The CPU architecture of an application. Valid values are ARM64 or X86_64. Default value is X86_64.",
              "type": "string"
            },
            "arn": {
              "description": "ARN of the cluster.",
              "type": "string"
            },
            "autoStartConfiguration": {
              "description": "The configuration for an application to automatically start on job submission.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enables the application to automatically start on job submission. Defaults to true.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "autoStopConfiguration": {
              "description": "The configuration for an application to automatically stop after a certain amount of time being idle.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Enables the application to automatically start on job submission. Defaults to true.",
                  "type": "boolean"
                },
                "idleTimeoutMinutes": {
                  "description": "The amount of idle time in minutes after which your application will automatically stop. Defaults to 15 minutes.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "The ID of the cluster.",
              "type": "string"
            },
            "imageConfiguration": {
              "description": "The image configuration applied to all worker types.",
              "type": "object",
              "properties": {
                "imageUri": {
                  "description": "The image URI.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "initialCapacity": {
              "description": "The capacity to initialize when the application is created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "initialCapacityConfig": {
                    "description": "The initial capacity configuration per worker.",
                    "type": "object",
                    "properties": {
                      "workerConfiguration": {
                        "description": "The resource configuration of the initial capacity configuration.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "description": "The maximum allowed CPU for an application.",
                            "type": "string"
                          },
                          "disk": {
                            "description": "The maximum allowed disk for an application.",
                            "type": "string"
                          },
                          "memory": {
                            "description": "The maximum allowed resources for an application.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "workerCount": {
                        "description": "The number of workers in the initial capacity configuration.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialCapacityType": {
                    "description": "The worker type for an analytics framework. For Spark applications, the key can either be set to Driver or Executor. For Hive applications, it can be set to HiveDriver or TezTask.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "interactiveConfiguration": {
              "description": "Enables the interactive use cases to use when running an application.",
              "type": "object",
              "properties": {
                "livyEndpointEnabled": {
                  "description": "Enables an Apache Livy endpoint that you can connect to and run interactive jobs.",
                  "type": "boolean"
                },
                "studioEnabled": {
                  "description": "Enables you to connect an application to Amazon EMR Studio to run interactive workloads in a notebook.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "maximumCapacity": {
              "description": "The maximum capacity to allocate when the application is created. This is cumulative across all workers at any given point in time, not just when an application is created. No new resources will be created once any one of the defined limits is hit.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "The maximum allowed CPU for an application.",
                  "type": "string"
                },
                "disk": {
                  "description": "The maximum allowed disk for an application.",
                  "type": "string"
                },
                "memory": {
                  "description": "The maximum allowed resources for an application.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "The name of the application.",
              "type": "string"
            },
            "networkConfiguration": {
              "description": "The network configuration for customer VPC connectivity.",
              "type": "object",
              "properties": {
                "securityGroupIds": {
                  "description": "The array of security group Ids for customer VPC connectivity.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "subnetIds": {
                  "description": "The array of subnet Ids for customer VPC connectivity.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "releaseLabel": {
              "description": "The EMR release version associated with the application.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "type": {
              "description": "The type of application you want to start, such as spark or hive.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
