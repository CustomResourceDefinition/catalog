{
  "description": "GKEBackupBackupPlan is the Schema for the GKEBackupBackupPlan API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "GKEBackupBackupPlanSpec defines the desired state of GKEBackupBackupPlan",
      "type": "object",
      "required": [
        "clusterRef",
        "location",
        "projectRef"
      ],
      "properties": {
        "backupConfig": {
          "description": "Optional. Defines the configuration of Backups created via this BackupPlan.",
          "type": "object",
          "properties": {
            "allNamespaces": {
              "description": "If True, include all namespaced resources",
              "type": "boolean"
            },
            "encryptionKey": {
              "description": "Optional. This defines a customer managed encryption key that will be\n used to encrypt the \"config\" portion (the Kubernetes resources) of\n Backups created via this plan.\n\n Default (empty): Config backup artifacts will not be encrypted.",
              "type": "object",
              "properties": {
                "kmsKeyRef": {
                  "description": "Optional. Google Cloud KMS encryption key.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "A reference to an externally managed KMSCryptoKey. Should be in the format `projects/[kms_project_id]/locations/[region]/keyRings/[key_ring_id]/cryptoKeys/[key]`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The `name` of a `KMSCryptoKey` resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `namespace` of a `KMSCryptoKey` resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "includeSecrets": {
              "description": "Optional. This flag specifies whether Kubernetes Secret resources should\n be included when they fall into the scope of Backups.\n\n Default: False",
              "type": "boolean"
            },
            "includeVolumeData": {
              "description": "Optional. This flag specifies whether volume data should be backed up\n when PVCs are included in the scope of a Backup.\n\n Default: False",
              "type": "boolean"
            },
            "permissiveMode": {
              "description": "Optional. If false, Backups will fail when Backup for GKE detects\n Kubernetes configuration that is non-standard or\n requires additional setup to restore.\n\n Default: False",
              "type": "boolean"
            },
            "selectedApplications": {
              "description": "If set, include just the resources referenced by the listed ProtectedApplications.",
              "type": "object",
              "properties": {
                "namespacedNames": {
                  "description": "Optional. A list of namespaced Kubernetes resources.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Optional. The name of the Kubernetes resource.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Optional. The Namespace of the Kubernetes resource.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "selectedNamespaces": {
              "description": "If set, include just the resources in the listed namespaces.",
              "type": "object",
              "properties": {
                "namespaces": {
                  "description": "Optional. A list of Kubernetes Namespaces",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "backupSchedule": {
          "description": "Optional. Defines a schedule for automatic Backup creation via this BackupPlan.",
          "type": "object",
          "properties": {
            "cronSchedule": {
              "description": "Optional. A standard [cron](https://wikipedia.com/wiki/cron) string that\n defines a repeating schedule for creating Backups via this BackupPlan.\n This is mutually exclusive with the\n [rpo_config][google.cloud.gkebackup.v1.BackupPlan.Schedule.rpo_config]\n field since at most one schedule can be defined for a BackupPlan. If this\n is defined, then\n [backup_retain_days][google.cloud.gkebackup.v1.BackupPlan.RetentionPolicy.backup_retain_days]\n must also be defined.\n\n Default (empty): no automatic backup creation will occur.",
              "type": "string"
            },
            "paused": {
              "description": "Optional. This flag denotes whether automatic Backup creation is paused\n for this BackupPlan.\n\n Default: False",
              "type": "boolean"
            },
            "rpoConfig": {
              "description": "Optional. Defines the RPO schedule configuration for this BackupPlan.\n This is mutually exclusive with the\n [cron_schedule][google.cloud.gkebackup.v1.BackupPlan.Schedule.cron_schedule]\n field since at most one schedule can be defined for a BackupPLan. If this\n is defined, then\n [backup_retain_days][google.cloud.gkebackup.v1.BackupPlan.RetentionPolicy.backup_retain_days]\n must also be defined.\n\n Default (empty): no automatic backup creation will occur.",
              "type": "object",
              "properties": {
                "exclusionWindows": {
                  "description": "Optional. User specified time windows during which backup can NOT happen for this BackupPlan - backups should start and finish outside of any given exclusion window. Note: backup jobs will be scheduled to start and finish outside the duration of the window as much as possible, but running jobs will not get canceled when it runs into the window. All the time and date values in exclusion_windows entry in the API are in UTC. We only allow \u003c=1 recurrence (daily or weekly) exclusion window for a BackupPlan while no restriction on number of single occurrence windows.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "duration",
                      "startTime"
                    ],
                    "properties": {
                      "daily": {
                        "description": "The exclusion window occurs every day if set to \"True\". Specifying this field to \"False\" is an error.",
                        "type": "boolean"
                      },
                      "daysOfWeek": {
                        "description": "The exclusion window occurs on these days of each week in UTC.",
                        "type": "object",
                        "properties": {
                          "daysOfWeek": {
                            "description": "Optional. A list of days of week.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "duration": {
                        "description": "Required. Specifies duration of the window. Duration must be \u003e= 5 minutes and \u003c (target RPO - 20 minutes). Additional restrictions based on the recurrence type to allow some time for backup to happen: - single_occurrence_date:  no restriction, but UI may warn about this when duration \u003e= target RPO - daily window: duration \u003c 24 hours - weekly window: - days of week includes all seven days of a week: duration \u003c 24 hours - all other weekly window: duration \u003c 168 hours (i.e., 24 * 7 hours)",
                        "type": "string"
                      },
                      "singleOccurrenceDate": {
                        "description": "No recurrence. The exclusion window occurs only once and on this date in UTC.",
                        "type": "object",
                        "properties": {
                          "day": {
                            "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "month": {
                            "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "year": {
                            "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "startTime": {
                        "description": "Required. Specifies the start time of the window using time of the day in UTC.",
                        "type": "object",
                        "properties": {
                          "hours": {
                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "minutes": {
                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "nanos": {
                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "seconds": {
                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "targetRPOMinutes": {
                  "description": "Required. Defines the target RPO for the BackupPlan in minutes, which means the target maximum data loss in time that is acceptable for this BackupPlan. This must be at least 60, i.e., 1 hour, and at most 86400, i.e., 60 days.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "clusterRef": {
          "description": "Required. Immutable. The source cluster from which Backups will be created via this BackupPlan.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The GKE cluster. Valid formats: `projects/{projectID}/locations/{location}/clusters/{clusterID}` `projects/{projectID}/zones/{zone}/clusters/{clusterID}`",
              "type": "string"
            },
            "name": {
              "description": "Name of the project resource. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names */",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the project resource. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ */",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "deactivated": {
          "description": "Optional. This flag indicates whether this BackupPlan has been deactivated.\n Setting this field to True locks the BackupPlan such that no further\n updates will be allowed (except deletes), including the deactivated field\n itself. It also prevents any new Backups from being created via this\n BackupPlan (including scheduled Backups).\n\n Default: False",
          "type": "boolean"
        },
        "description": {
          "description": "Optional. User specified descriptive string for this BackupPlan.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. A set of custom labels supplied by user.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Immutable.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Location field is immutable"
            }
          ]
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The GKEBackupBackupPlan name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "retentionPolicy": {
          "description": "Optional. RetentionPolicy governs lifecycle of Backups created under this plan.",
          "type": "object",
          "properties": {
            "backupDeleteLockDays": {
              "description": "Optional. Minimum age for Backups created via this BackupPlan (in days).\n This field MUST be an integer value between 0-90 (inclusive).\n A Backup created under this BackupPlan will NOT be deletable until it\n reaches Backup's (create_time + backup_delete_lock_days).\n Updating this field of a BackupPlan does NOT affect existing Backups\n under it. Backups created AFTER a successful update will inherit\n the new value.\n\n Default: 0 (no delete blocking)",
              "type": "integer",
              "format": "int32"
            },
            "backupRetainDays": {
              "description": "Optional. The default maximum age of a Backup created via this\n BackupPlan. This field MUST be an integer value \u003e= 0 and \u003c= 365. If\n specified, a Backup created under this BackupPlan will be automatically\n deleted after its age reaches (create_time + backup_retain_days). If not\n specified, Backups created under this BackupPlan will NOT be subject to\n automatic deletion. Updating this field does NOT affect existing Backups\n under it. Backups created AFTER a successful update will automatically\n pick up the new value. NOTE: backup_retain_days must be \u003e=\n [backup_delete_lock_days][google.cloud.gkebackup.v1.BackupPlan.RetentionPolicy.backup_delete_lock_days].\n If\n [cron_schedule][google.cloud.gkebackup.v1.BackupPlan.Schedule.cron_schedule]\n is defined, then this must be\n \u003c= 360 * the creation interval. If\n [rpo_config][google.cloud.gkebackup.v1.BackupPlan.Schedule.rpo_config] is\n defined, then this must be\n \u003c= 360 * [target_rpo_minutes][Schedule.rpo_config.target_rpo_minutes] /\n (1440minutes/day).\n\n Default: 0 (no automatic deletion)",
              "type": "integer",
              "format": "int32"
            },
            "locked": {
              "description": "Optional. This flag denotes whether the retention policy of this\n BackupPlan is locked.  If set to True, no further update is allowed on\n this policy, including the `locked` field itself.\n\n Default: False",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "GKEBackupBackupPlanStatus defines the config connector machine state of GKEBackupBackupPlan",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the GKEBackupBackupPlan resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "backupSchedule": {
              "description": "Optional. Defines a schedule for automatic Backup creation via this BackupPlan.",
              "type": "object",
              "properties": {
                "nextScheduledBackupTime": {
                  "description": "Output only. Start time of next scheduled backup under this BackupPlan by either cron_schedule or rpo config.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "createTime": {
              "description": "Output only. The timestamp when this BackupPlan resource was created.",
              "type": "string"
            },
            "etag": {
              "description": "Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from overwriting each other. It is strongly suggested that systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackupPlan`, and systems are expected to put that etag in the request to `UpdateBackupPlan` or `DeleteBackupPlan` to ensure that their change will be applied to the same version of the resource.",
              "type": "string"
            },
            "protectedPodCount": {
              "description": "Output only. The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.",
              "type": "integer",
              "format": "int32"
            },
            "rpoRiskLevel": {
              "description": "Output only. A number that represents the current risk level of this BackupPlan from RPO perspective with 1 being no risk and 5 being highest risk.",
              "type": "integer",
              "format": "int32"
            },
            "rpoRiskReason": {
              "description": "Output only. Human-readable description of why the BackupPlan is in the current rpo_risk_level and action items if any.",
              "type": "string"
            },
            "state": {
              "description": "Output only. State of the BackupPlan. This State field reflects the various stages a BackupPlan can be in during the Create operation. It will be set to \"DEACTIVATED\" if the BackupPlan is deactivated on an Update",
              "type": "string"
            },
            "stateReason": {
              "description": "Output only. Human-readable description of why BackupPlan is in the current `state`",
              "type": "string"
            },
            "uid": {
              "description": "Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. The timestamp when this BackupPlan resource was last updated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
