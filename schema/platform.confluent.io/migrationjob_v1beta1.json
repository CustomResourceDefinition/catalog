{
  "description": "MigrationJob is the schema for the MigrationJob API.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "spec defines the desired state of the MigrationJob.",
      "type": "object",
      "required": [
        "initContainerImage"
      ],
      "properties": {
        "blockReconcile": {
          "description": "blockReconcile specifies whether to block the reconciling process.",
          "type": "boolean"
        },
        "connect": {
          "description": "connect specifies the migration job spec for Connect.",
          "type": "object",
          "required": [
            "enabled",
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "annotations specify the annotations for the new resource created. An annotation is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. annotations are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "configOverrides": {
              "description": "configOverrides specify the configuration overrides for the new resource created. This setting takes precedence over the default configuration.",
              "type": "object",
              "properties": {
                "jvm": {
                  "description": "jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "log4j": {
                  "description": "log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "description": "server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "enabled indicates whether migration of this component is enabled.",
              "type": "boolean"
            },
            "labels": {
              "description": "labels specify the labels for the new resource created. A label is a map of string key and value that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "name specifies the name of the component resource to migrate. It must be unique within a namespace. Note that the resource will be deleted once the migration is complete. Required if this component is enabled.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace specifies the namespace for the component to migrate. An empty namespace is equivalent to the \"default\" namespace, but `default` is the canonical representation. Not all objects are required to be scoped to a namespace, and the value of this field for those objects will be empty.",
              "type": "string"
            },
            "release": {
              "description": "release is the Helm release name for the component. It is optional for the Kafka and Zookeeper releases.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "controlcenter": {
          "description": "controlcenter specifies the migration job spec for Control Center.",
          "type": "object",
          "required": [
            "enabled",
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "annotations specify the annotations for the new resource created. An annotation is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. annotations are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "configOverrides": {
              "description": "configOverrides specify the configuration overrides for the new resource created. This setting takes precedence over the default configuration.",
              "type": "object",
              "properties": {
                "jvm": {
                  "description": "jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "log4j": {
                  "description": "log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "description": "server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "enabled indicates whether migration of this component is enabled.",
              "type": "boolean"
            },
            "labels": {
              "description": "labels specify the labels for the new resource created. A label is a map of string key and value that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "name specifies the name of the component resource to migrate. It must be unique within a namespace. Note that the resource will be deleted once the migration is complete. Required if this component is enabled.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace specifies the namespace for the component to migrate. An empty namespace is equivalent to the \"default\" namespace, but `default` is the canonical representation. Not all objects are required to be scoped to a namespace, and the value of this field for those objects will be empty.",
              "type": "string"
            },
            "release": {
              "description": "release is the Helm release name for the component. It is optional for the Kafka and Zookeeper releases.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "initContainerImage": {
          "description": "initContainerImage specifies the image name of the init container.",
          "type": "string",
          "minLength": 1
        },
        "kafka": {
          "description": "kafka specifies the migration job spec for Kafka.",
          "type": "object",
          "required": [
            "enabled",
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "annotations specify the annotations for the new resource created. An annotation is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. annotations are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "configOverrides": {
              "description": "configOverrides specify the configuration overrides for the new resource created. This setting takes precedence over the default configuration.",
              "type": "object",
              "properties": {
                "jvm": {
                  "description": "jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "log4j": {
                  "description": "log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "description": "server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "enabled indicates whether migration of this component is enabled.",
              "type": "boolean"
            },
            "labels": {
              "description": "labels specify the labels for the new resource created. A label is a map of string key and value that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "name specifies the name of the component resource to migrate. It must be unique within a namespace. Note that the resource will be deleted once the migration is complete. Required if this component is enabled.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace specifies the namespace for the component to migrate. An empty namespace is equivalent to the \"default\" namespace, but `default` is the canonical representation. Not all objects are required to be scoped to a namespace, and the value of this field for those objects will be empty.",
              "type": "string"
            },
            "release": {
              "description": "release is the Helm release name for the component. It is optional for the Kafka and Zookeeper releases.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "ksqldb": {
          "description": "ksqldb specifies the migration job spec for ksqlDB.",
          "type": "object",
          "required": [
            "enabled",
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "annotations specify the annotations for the new resource created. An annotation is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. annotations are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "configOverrides": {
              "description": "configOverrides specify the configuration overrides for the new resource created. This setting takes precedence over the default configuration.",
              "type": "object",
              "properties": {
                "jvm": {
                  "description": "jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "log4j": {
                  "description": "log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "description": "server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "enabled indicates whether migration of this component is enabled.",
              "type": "boolean"
            },
            "labels": {
              "description": "labels specify the labels for the new resource created. A label is a map of string key and value that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "name specifies the name of the component resource to migrate. It must be unique within a namespace. Note that the resource will be deleted once the migration is complete. Required if this component is enabled.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace specifies the namespace for the component to migrate. An empty namespace is equivalent to the \"default\" namespace, but `default` is the canonical representation. Not all objects are required to be scoped to a namespace, and the value of this field for those objects will be empty.",
              "type": "string"
            },
            "release": {
              "description": "release is the Helm release name for the component. It is optional for the Kafka and Zookeeper releases.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "pullSecretRef": {
          "description": "pullSecretRef references a list of the secret names for pulling Confluent images.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replicator": {
          "description": "replicator specifies the migration job spec for Replicator.",
          "type": "object",
          "required": [
            "enabled",
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "annotations specify the annotations for the new resource created. An annotation is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. annotations are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "configOverrides": {
              "description": "configOverrides specify the configuration overrides for the new resource created. This setting takes precedence over the default configuration.",
              "type": "object",
              "properties": {
                "jvm": {
                  "description": "jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "log4j": {
                  "description": "log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "description": "server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "enabled indicates whether migration of this component is enabled.",
              "type": "boolean"
            },
            "labels": {
              "description": "labels specify the labels for the new resource created. A label is a map of string key and value that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "name specifies the name of the component resource to migrate. It must be unique within a namespace. Note that the resource will be deleted once the migration is complete. Required if this component is enabled.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace specifies the namespace for the component to migrate. An empty namespace is equivalent to the \"default\" namespace, but `default` is the canonical representation. Not all objects are required to be scoped to a namespace, and the value of this field for those objects will be empty.",
              "type": "string"
            },
            "release": {
              "description": "release is the Helm release name for the component. It is optional for the Kafka and Zookeeper releases.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "schemaRegistry": {
          "description": "schemaRegistry specifies the migration job spec for Schema Registry.",
          "type": "object",
          "required": [
            "enabled",
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "annotations specify the annotations for the new resource created. An annotation is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. annotations are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "configOverrides": {
              "description": "configOverrides specify the configuration overrides for the new resource created. This setting takes precedence over the default configuration.",
              "type": "object",
              "properties": {
                "jvm": {
                  "description": "jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "log4j": {
                  "description": "log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "description": "server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "enabled indicates whether migration of this component is enabled.",
              "type": "boolean"
            },
            "labels": {
              "description": "labels specify the labels for the new resource created. A label is a map of string key and value that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "name specifies the name of the component resource to migrate. It must be unique within a namespace. Note that the resource will be deleted once the migration is complete. Required if this component is enabled.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace specifies the namespace for the component to migrate. An empty namespace is equivalent to the \"default\" namespace, but `default` is the canonical representation. Not all objects are required to be scoped to a namespace, and the value of this field for those objects will be empty.",
              "type": "string"
            },
            "release": {
              "description": "release is the Helm release name for the component. It is optional for the Kafka and Zookeeper releases.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "skipCleanup": {
          "description": "skipCleanup specifies whether to skip the cleanup.",
          "type": "boolean"
        },
        "skipRollback": {
          "description": "skipRollback specifies whether to skip the rollback.",
          "type": "boolean"
        },
        "zookeeper": {
          "description": "zookeeper specifies the migration job spec for Zookeeper.",
          "type": "object",
          "required": [
            "enabled",
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "annotations specify the annotations for the new resource created. An annotation is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. annotations are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "configOverrides": {
              "description": "configOverrides specify the configuration overrides for the new resource created. This setting takes precedence over the default configuration.",
              "type": "object",
              "properties": {
                "jvm": {
                  "description": "jvm is a list of JVM configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "log4j": {
                  "description": "log4j is a list of Log4J configuration supported by the Confluent Platform component. This will either add or update the existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "server": {
                  "description": "server is a list of server configuration supported by the Confluent Platform component. This will either add or update existing configuration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "enabled indicates whether migration of this component is enabled.",
              "type": "boolean"
            },
            "labels": {
              "description": "labels specify the labels for the new resource created. A label is a map of string key and value that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "name specifies the name of the component resource to migrate. It must be unique within a namespace. Note that the resource will be deleted once the migration is complete. Required if this component is enabled.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace specifies the namespace for the component to migrate. An empty namespace is equivalent to the \"default\" namespace, but `default` is the canonical representation. Not all objects are required to be scoped to a namespace, and the value of this field for those objects will be empty.",
              "type": "string"
            },
            "release": {
              "description": "release is the Helm release name for the component. It is optional for the Kafka and Zookeeper releases.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "status defines the observed state of the MigrationJob.",
      "type": "object",
      "required": [
        "phase"
      ],
      "properties": {
        "conditions": {
          "description": "conditions represents the latest available observations of the migration job.",
          "type": "array",
          "items": {
            "description": "Condition represent the latest available observations of the current state.",
            "type": "object",
            "properties": {
              "lastProbeTime": {
                "description": "lastProbeTime shows the last time the condition was evaluated.",
                "type": "string",
                "format": "date-time"
              },
              "lastTransitionTime": {
                "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message shows a human-readable message with details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "reason shows the reason for the last transition of the condition.",
                "type": "string"
              },
              "status": {
                "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                "type": "string"
              },
              "type": {
                "description": "type shows the condition type.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "connect": {
          "description": "connect is the migration state of Connect.",
          "type": "object",
          "required": [
            "message",
            "phase"
          ],
          "properties": {
            "message": {
              "description": "message is the message for migration.",
              "type": "string"
            },
            "phase": {
              "description": "phase is the migration state.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "controlcenter": {
          "description": "controlcenter is the migration state of Control Center.",
          "type": "object",
          "required": [
            "message",
            "phase"
          ],
          "properties": {
            "message": {
              "description": "message is the message for migration.",
              "type": "string"
            },
            "phase": {
              "description": "phase is the migration state.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "kafka": {
          "description": "kafka is the migration state of Kafka.",
          "type": "object",
          "required": [
            "message",
            "phase"
          ],
          "properties": {
            "message": {
              "description": "message is the message for migration.",
              "type": "string"
            },
            "phase": {
              "description": "phase is the migration state.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ksqldb": {
          "description": "ksqldb is the migration state of ksqlDB.",
          "type": "object",
          "required": [
            "message",
            "phase"
          ],
          "properties": {
            "message": {
              "description": "message is the message for migration.",
              "type": "string"
            },
            "phase": {
              "description": "phase is the migration state.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "phase": {
          "description": "phase is the state of the migration job.",
          "type": "string"
        },
        "replicator": {
          "description": "replicator is the migration state of Replicator.",
          "type": "object",
          "required": [
            "message",
            "phase"
          ],
          "properties": {
            "message": {
              "description": "message is the message for migration.",
              "type": "string"
            },
            "phase": {
              "description": "phase is the migration state.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "schemaRegistry": {
          "description": "schemaRegistry is the migration state of Schema Registry.",
          "type": "object",
          "required": [
            "message",
            "phase"
          ],
          "properties": {
            "message": {
              "description": "message is the message for migration.",
              "type": "string"
            },
            "phase": {
              "description": "phase is the migration state.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "zookeeper": {
          "description": "zookeeper is the migration state of Zookeeper.",
          "type": "object",
          "required": [
            "message",
            "phase"
          ],
          "properties": {
            "message": {
              "description": "message is the message for migration.",
              "type": "string"
            },
            "phase": {
              "description": "phase is the migration state.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
