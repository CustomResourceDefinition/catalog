{
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "properties": {
        "failedRevisionLimit": {
          "format": "int32",
          "type": "integer"
        },
        "forceRedeploymentReason": {
          "type": "string"
        },
        "logLevel": {
          "default": "Normal",
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ],
          "type": "string"
        },
        "managedBootImages": {
          "additionalProperties": false,
          "properties": {
            "machineManagers": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "apiGroup": {
                    "enum": [
                      "machine.openshift.io"
                    ],
                    "type": "string"
                  },
                  "resource": {
                    "enum": [
                      "machinesets"
                    ],
                    "type": "string"
                  },
                  "selection": {
                    "additionalProperties": false,
                    "properties": {
                      "mode": {
                        "enum": [
                          "All",
                          "Partial"
                        ],
                        "type": "string"
                      },
                      "partial": {
                        "additionalProperties": false,
                        "properties": {
                          "machineResourceSelector": {
                            "additionalProperties": false,
                            "properties": {
                              "matchExpressions": {
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array",
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "type": "object"
                                },
                                "type": "array",
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object"
                              }
                            },
                            "type": "object",
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "required": [
                          "machineResourceSelector"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "mode"
                    ],
                    "type": "object",
                    "x-kubernetes-validations": [
                      {
                        "message": "Partial is required when type is partial, and forbidden otherwise",
                        "rule": "has(self.mode) && self.mode == 'Partial' ?  has(self.partial) : !has(self.partial)"
                      }
                    ]
                  }
                },
                "required": [
                  "apiGroup",
                  "resource",
                  "selection"
                ],
                "type": "object"
              },
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "resource",
                "apiGroup"
              ],
              "x-kubernetes-list-type": "map"
            }
          },
          "type": "object"
        },
        "managementState": {
          "pattern": "^(Managed|Unmanaged|Force|Removed)$",
          "type": "string"
        },
        "nodeDisruptionPolicy": {
          "additionalProperties": false,
          "properties": {
            "files": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "actions": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "reload": {
                          "additionalProperties": false,
                          "properties": {
                            "serviceName": {
                              "maxLength": 255,
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                  "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                },
                                {
                                  "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                  "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                }
                              ]
                            }
                          },
                          "required": [
                            "serviceName"
                          ],
                          "type": "object"
                        },
                        "restart": {
                          "additionalProperties": false,
                          "properties": {
                            "serviceName": {
                              "maxLength": 255,
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                  "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                },
                                {
                                  "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                  "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                }
                              ]
                            }
                          },
                          "required": [
                            "serviceName"
                          ],
                          "type": "object"
                        },
                        "type": {
                          "enum": [
                            "Reboot",
                            "Drain",
                            "Reload",
                            "Restart",
                            "DaemonReload",
                            "None"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "reload is required when type is Reload, and forbidden otherwise",
                          "rule": "has(self.type) && self.type == 'Reload' ? has(self.reload) : !has(self.reload)"
                        },
                        {
                          "message": "restart is required when type is Restart, and forbidden otherwise",
                          "rule": "has(self.type) && self.type == 'Restart' ? has(self.restart) : !has(self.restart)"
                        }
                      ]
                    },
                    "maxItems": 10,
                    "type": "array",
                    "x-kubernetes-list-type": "atomic",
                    "x-kubernetes-validations": [
                      {
                        "message": "Reboot action can only be specified standalone, as it will override any other actions",
                        "rule": "self.exists(x, x.type=='Reboot') ? size(self) == 1 : true"
                      },
                      {
                        "message": "None action can only be specified standalone, as it will override any other actions",
                        "rule": "self.exists(x, x.type=='None') ? size(self) == 1 : true"
                      }
                    ]
                  },
                  "path": {
                    "type": "string"
                  }
                },
                "required": [
                  "actions",
                  "path"
                ],
                "type": "object"
              },
              "maxItems": 50,
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "path"
              ],
              "x-kubernetes-list-type": "map"
            },
            "sshkey": {
              "additionalProperties": false,
              "properties": {
                "actions": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "reload": {
                        "additionalProperties": false,
                        "properties": {
                          "serviceName": {
                            "maxLength": 255,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                              },
                              {
                                "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                              }
                            ]
                          }
                        },
                        "required": [
                          "serviceName"
                        ],
                        "type": "object"
                      },
                      "restart": {
                        "additionalProperties": false,
                        "properties": {
                          "serviceName": {
                            "maxLength": 255,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                              },
                              {
                                "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                              }
                            ]
                          }
                        },
                        "required": [
                          "serviceName"
                        ],
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "Reboot",
                          "Drain",
                          "Reload",
                          "Restart",
                          "DaemonReload",
                          "None"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object",
                    "x-kubernetes-validations": [
                      {
                        "message": "reload is required when type is Reload, and forbidden otherwise",
                        "rule": "has(self.type) && self.type == 'Reload' ? has(self.reload) : !has(self.reload)"
                      },
                      {
                        "message": "restart is required when type is Restart, and forbidden otherwise",
                        "rule": "has(self.type) && self.type == 'Restart' ? has(self.restart) : !has(self.restart)"
                      }
                    ]
                  },
                  "maxItems": 10,
                  "type": "array",
                  "x-kubernetes-list-type": "atomic",
                  "x-kubernetes-validations": [
                    {
                      "message": "Reboot action can only be specified standalone, as it will override any other actions",
                      "rule": "self.exists(x, x.type=='Reboot') ? size(self) == 1 : true"
                    },
                    {
                      "message": "None action can only be specified standalone, as it will override any other actions",
                      "rule": "self.exists(x, x.type=='None') ? size(self) == 1 : true"
                    }
                  ]
                }
              },
              "required": [
                "actions"
              ],
              "type": "object"
            },
            "units": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "actions": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "reload": {
                          "additionalProperties": false,
                          "properties": {
                            "serviceName": {
                              "maxLength": 255,
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                  "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                },
                                {
                                  "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                  "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                }
                              ]
                            }
                          },
                          "required": [
                            "serviceName"
                          ],
                          "type": "object"
                        },
                        "restart": {
                          "additionalProperties": false,
                          "properties": {
                            "serviceName": {
                              "maxLength": 255,
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                  "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                },
                                {
                                  "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                  "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                }
                              ]
                            }
                          },
                          "required": [
                            "serviceName"
                          ],
                          "type": "object"
                        },
                        "type": {
                          "enum": [
                            "Reboot",
                            "Drain",
                            "Reload",
                            "Restart",
                            "DaemonReload",
                            "None"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "reload is required when type is Reload, and forbidden otherwise",
                          "rule": "has(self.type) && self.type == 'Reload' ? has(self.reload) : !has(self.reload)"
                        },
                        {
                          "message": "restart is required when type is Restart, and forbidden otherwise",
                          "rule": "has(self.type) && self.type == 'Restart' ? has(self.restart) : !has(self.restart)"
                        }
                      ]
                    },
                    "maxItems": 10,
                    "type": "array",
                    "x-kubernetes-list-type": "atomic",
                    "x-kubernetes-validations": [
                      {
                        "message": "Reboot action can only be specified standalone, as it will override any other actions",
                        "rule": "self.exists(x, x.type=='Reboot') ? size(self) == 1 : true"
                      },
                      {
                        "message": "None action can only be specified standalone, as it will override any other actions",
                        "rule": "self.exists(x, x.type=='None') ? size(self) == 1 : true"
                      }
                    ]
                  },
                  "name": {
                    "maxLength": 255,
                    "type": "string",
                    "x-kubernetes-validations": [
                      {
                        "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                        "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                      },
                      {
                        "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                        "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                      }
                    ]
                  }
                },
                "required": [
                  "actions",
                  "name"
                ],
                "type": "object"
              },
              "maxItems": 50,
              "type": "array",
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            }
          },
          "type": "object"
        },
        "observedConfig": {
          "nullable": true,
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "operatorLogLevel": {
          "default": "Normal",
          "enum": [
            "",
            "Normal",
            "Debug",
            "Trace",
            "TraceAll"
          ],
          "type": "string"
        },
        "succeededRevisionLimit": {
          "format": "int32",
          "type": "integer"
        },
        "unsupportedConfigOverrides": {
          "nullable": true,
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "nodeDisruptionPolicyStatus": {
          "additionalProperties": false,
          "properties": {
            "clusterPolicies": {
              "additionalProperties": false,
              "properties": {
                "files": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "actions": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "reload": {
                              "additionalProperties": false,
                              "properties": {
                                "serviceName": {
                                  "maxLength": 255,
                                  "type": "string",
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                      "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                    },
                                    {
                                      "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                      "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "serviceName"
                              ],
                              "type": "object"
                            },
                            "restart": {
                              "additionalProperties": false,
                              "properties": {
                                "serviceName": {
                                  "maxLength": 255,
                                  "type": "string",
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                      "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                    },
                                    {
                                      "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                      "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "serviceName"
                              ],
                              "type": "object"
                            },
                            "type": {
                              "enum": [
                                "Reboot",
                                "Drain",
                                "Reload",
                                "Restart",
                                "DaemonReload",
                                "None",
                                "Special"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object",
                          "x-kubernetes-validations": [
                            {
                              "message": "reload is required when type is Reload, and forbidden otherwise",
                              "rule": "has(self.type) && self.type == 'Reload' ? has(self.reload) : !has(self.reload)"
                            },
                            {
                              "message": "restart is required when type is Restart, and forbidden otherwise",
                              "rule": "has(self.type) && self.type == 'Restart' ? has(self.restart) : !has(self.restart)"
                            }
                          ]
                        },
                        "maxItems": 10,
                        "type": "array",
                        "x-kubernetes-list-type": "atomic",
                        "x-kubernetes-validations": [
                          {
                            "message": "Reboot action can only be specified standalone, as it will override any other actions",
                            "rule": "self.exists(x, x.type=='Reboot') ? size(self) == 1 : true"
                          },
                          {
                            "message": "None action can only be specified standalone, as it will override any other actions",
                            "rule": "self.exists(x, x.type=='None') ? size(self) == 1 : true"
                          }
                        ]
                      },
                      "path": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "actions",
                      "path"
                    ],
                    "type": "object"
                  },
                  "maxItems": 100,
                  "type": "array",
                  "x-kubernetes-list-map-keys": [
                    "path"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "sshkey": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "reload": {
                            "additionalProperties": false,
                            "properties": {
                              "serviceName": {
                                "maxLength": 255,
                                "type": "string",
                                "x-kubernetes-validations": [
                                  {
                                    "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                    "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                  },
                                  {
                                    "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                    "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "serviceName"
                            ],
                            "type": "object"
                          },
                          "restart": {
                            "additionalProperties": false,
                            "properties": {
                              "serviceName": {
                                "maxLength": 255,
                                "type": "string",
                                "x-kubernetes-validations": [
                                  {
                                    "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                    "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                  },
                                  {
                                    "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                    "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "serviceName"
                            ],
                            "type": "object"
                          },
                          "type": {
                            "enum": [
                              "Reboot",
                              "Drain",
                              "Reload",
                              "Restart",
                              "DaemonReload",
                              "None",
                              "Special"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object",
                        "x-kubernetes-validations": [
                          {
                            "message": "reload is required when type is Reload, and forbidden otherwise",
                            "rule": "has(self.type) && self.type == 'Reload' ? has(self.reload) : !has(self.reload)"
                          },
                          {
                            "message": "restart is required when type is Restart, and forbidden otherwise",
                            "rule": "has(self.type) && self.type == 'Restart' ? has(self.restart) : !has(self.restart)"
                          }
                        ]
                      },
                      "maxItems": 10,
                      "type": "array",
                      "x-kubernetes-list-type": "atomic",
                      "x-kubernetes-validations": [
                        {
                          "message": "Reboot action can only be specified standalone, as it will override any other actions",
                          "rule": "self.exists(x, x.type=='Reboot') ? size(self) == 1 : true"
                        },
                        {
                          "message": "None action can only be specified standalone, as it will override any other actions",
                          "rule": "self.exists(x, x.type=='None') ? size(self) == 1 : true"
                        }
                      ]
                    }
                  },
                  "required": [
                    "actions"
                  ],
                  "type": "object"
                },
                "units": {
                  "items": {
                    "additionalProperties": false,
                    "properties": {
                      "actions": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "reload": {
                              "additionalProperties": false,
                              "properties": {
                                "serviceName": {
                                  "maxLength": 255,
                                  "type": "string",
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                      "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                    },
                                    {
                                      "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                      "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "serviceName"
                              ],
                              "type": "object"
                            },
                            "restart": {
                              "additionalProperties": false,
                              "properties": {
                                "serviceName": {
                                  "maxLength": 255,
                                  "type": "string",
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                                      "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                                    },
                                    {
                                      "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                                      "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "serviceName"
                              ],
                              "type": "object"
                            },
                            "type": {
                              "enum": [
                                "Reboot",
                                "Drain",
                                "Reload",
                                "Restart",
                                "DaemonReload",
                                "None",
                                "Special"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object",
                          "x-kubernetes-validations": [
                            {
                              "message": "reload is required when type is Reload, and forbidden otherwise",
                              "rule": "has(self.type) && self.type == 'Reload' ? has(self.reload) : !has(self.reload)"
                            },
                            {
                              "message": "restart is required when type is Restart, and forbidden otherwise",
                              "rule": "has(self.type) && self.type == 'Restart' ? has(self.restart) : !has(self.restart)"
                            }
                          ]
                        },
                        "maxItems": 10,
                        "type": "array",
                        "x-kubernetes-list-type": "atomic",
                        "x-kubernetes-validations": [
                          {
                            "message": "Reboot action can only be specified standalone, as it will override any other actions",
                            "rule": "self.exists(x, x.type=='Reboot') ? size(self) == 1 : true"
                          },
                          {
                            "message": "None action can only be specified standalone, as it will override any other actions",
                            "rule": "self.exists(x, x.type=='None') ? size(self) == 1 : true"
                          }
                        ]
                      },
                      "name": {
                        "maxLength": 255,
                        "type": "string",
                        "x-kubernetes-validations": [
                          {
                            "message": "Invalid ${SERVICETYPE} in service name. Expected format is ${NAME}${SERVICETYPE}, where ${SERVICETYPE} must be one of \".service\", \".socket\", \".device\", \".mount\", \".automount\", \".swap\", \".target\", \".path\", \".timer\",\".snapshot\", \".slice\" or \".scope\".",
                            "rule": "self.matches('\\\\.(service|socket|device|mount|automount|swap|target|path|timer|snapshot|slice|scope)$')"
                          },
                          {
                            "message": "Invalid ${NAME} in service name. Expected format is ${NAME}${SERVICETYPE}, where {NAME} must be atleast 1 character long and can only consist of alphabets, digits, \":\", \"-\", \"_\", \".\", and \"\\\"",
                            "rule": "self.matches('^[a-zA-Z0-9:._\\\\\\\\-]+\\\\..')"
                          }
                        ]
                      }
                    },
                    "required": [
                      "actions",
                      "name"
                    ],
                    "type": "object"
                  },
                  "maxItems": 100,
                  "type": "array",
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "observedGeneration": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
