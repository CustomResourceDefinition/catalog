{
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "properties": {
        "additionalTrustBundle": {
          "format": "byte",
          "nullable": true,
          "type": "string"
        },
        "baseOSContainerImage": {
          "type": "string"
        },
        "baseOSExtensionsContainerImage": {
          "type": "string"
        },
        "cloudProviderCAData": {
          "format": "byte",
          "nullable": true,
          "type": "string"
        },
        "cloudProviderConfig": {
          "type": "string"
        },
        "clusterDNSIP": {
          "type": "string"
        },
        "dns": {
          "additionalProperties": false,
          "nullable": true,
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "metadata": {
              "type": "object"
            },
            "spec": {
              "additionalProperties": false,
              "properties": {
                "baseDomain": {
                  "type": "string"
                },
                "platform": {
                  "additionalProperties": false,
                  "properties": {
                    "aws": {
                      "additionalProperties": false,
                      "properties": {
                        "privateZoneIAMRole": {
                          "pattern": "^arn:(aws|aws-cn|aws-us-gov):iam::[0-9]{12}:role\\/.*$",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "enum": [
                        "",
                        "AWS",
                        "Azure",
                        "BareMetal",
                        "GCP",
                        "Libvirt",
                        "OpenStack",
                        "None",
                        "VSphere",
                        "oVirt",
                        "IBMCloud",
                        "KubeVirt",
                        "EquinixMetal",
                        "PowerVS",
                        "AlibabaCloud",
                        "Nutanix",
                        "External"
                      ],
                      "type": "string",
                      "x-kubernetes-validations": [
                        {
                          "message": "allowed values are '' and 'AWS'",
                          "rule": "self in ['','AWS']"
                        }
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "type": "object",
                  "x-kubernetes-validations": [
                    {
                      "message": "aws configuration is required when platform is AWS, and forbidden otherwise",
                      "rule": "has(self.type) && self.type == 'AWS' ?  has(self.aws) : !has(self.aws)"
                    }
                  ]
                },
                "privateZone": {
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "tags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "publicZone": {
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "tags": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "status": {
              "type": "object"
            }
          },
          "required": [
            "spec"
          ],
          "type": "object",
          "x-kubernetes-embedded-resource": true
        },
        "etcdDiscoveryDomain": {
          "type": "string"
        },
        "imageRegistryBundleData": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "data": {
                "format": "byte",
                "type": "string"
              },
              "file": {
                "type": "string"
              }
            },
            "required": [
              "data",
              "file"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "imageRegistryBundleUserData": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "data": {
                "format": "byte",
                "type": "string"
              },
              "file": {
                "type": "string"
              }
            },
            "required": [
              "data",
              "file"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "images": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "infra": {
          "additionalProperties": false,
          "nullable": true,
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "metadata": {
              "type": "object"
            },
            "spec": {
              "additionalProperties": false,
              "properties": {
                "cloudConfig": {
                  "additionalProperties": false,
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "platformSpec": {
                  "additionalProperties": false,
                  "properties": {
                    "alibabaCloud": {
                      "type": "object"
                    },
                    "aws": {
                      "additionalProperties": false,
                      "properties": {
                        "serviceEndpoints": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "pattern": "^[a-z0-9-]+$",
                                "type": "string"
                              },
                              "url": {
                                "pattern": "^https://",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object"
                    },
                    "azure": {
                      "type": "object"
                    },
                    "baremetal": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIPs": {
                          "items": {
                            "maxLength": 39,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid IP address",
                                "rule": "isIP(self)"
                              }
                            ]
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true"
                            }
                          ]
                        },
                        "ingressIPs": {
                          "items": {
                            "maxLength": 39,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid IP address",
                                "rule": "isIP(self)"
                              }
                            ]
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true"
                            }
                          ]
                        },
                        "machineNetworks": {
                          "items": {
                            "maxLength": 43,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid CIDR network address",
                                "rule": "isCIDR(self)"
                              }
                            ]
                          },
                          "maxItems": 32,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.all(x, self.exists_one(y, x == y))"
                            }
                          ]
                        }
                      },
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "apiServerInternalIPs list is required once set",
                          "rule": "!has(oldSelf.apiServerInternalIPs) || has(self.apiServerInternalIPs)"
                        },
                        {
                          "message": "ingressIPs list is required once set",
                          "rule": "!has(oldSelf.ingressIPs) || has(self.ingressIPs)"
                        }
                      ]
                    },
                    "equinixMetal": {
                      "type": "object"
                    },
                    "external": {
                      "additionalProperties": false,
                      "properties": {
                        "platformName": {
                          "default": "Unknown",
                          "type": "string",
                          "x-kubernetes-validations": [
                            {
                              "message": "platform name cannot be changed once set",
                              "rule": "oldSelf == 'Unknown' || self == oldSelf"
                            }
                          ]
                        }
                      },
                      "type": "object"
                    },
                    "gcp": {
                      "type": "object"
                    },
                    "ibmcloud": {
                      "type": "object"
                    },
                    "kubevirt": {
                      "type": "object"
                    },
                    "nutanix": {
                      "additionalProperties": false,
                      "properties": {
                        "failureDomains": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "cluster": {
                                "additionalProperties": false,
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "enum": [
                                      "UUID",
                                      "Name"
                                    ],
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "type": "object",
                                "x-kubernetes-validations": [
                                  {
                                    "message": "uuid configuration is required when type is UUID, and forbidden otherwise",
                                    "rule": "has(self.type) && self.type == 'UUID' ?  has(self.uuid) : !has(self.uuid)"
                                  },
                                  {
                                    "message": "name configuration is required when type is Name, and forbidden otherwise",
                                    "rule": "has(self.type) && self.type == 'Name' ?  has(self.name) : !has(self.name)"
                                  }
                                ]
                              },
                              "name": {
                                "maxLength": 64,
                                "minLength": 1,
                                "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?",
                                "type": "string"
                              },
                              "subnets": {
                                "items": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "enum": [
                                        "UUID",
                                        "Name"
                                      ],
                                      "type": "string"
                                    },
                                    "uuid": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "type": "object",
                                  "x-kubernetes-validations": [
                                    {
                                      "message": "uuid configuration is required when type is UUID, and forbidden otherwise",
                                      "rule": "has(self.type) && self.type == 'UUID' ?  has(self.uuid) : !has(self.uuid)"
                                    },
                                    {
                                      "message": "name configuration is required when type is Name, and forbidden otherwise",
                                      "rule": "has(self.type) && self.type == 'Name' ?  has(self.name) : !has(self.name)"
                                    }
                                  ]
                                },
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array",
                                "x-kubernetes-list-map-keys": [
                                  "type"
                                ],
                                "x-kubernetes-list-type": "map"
                              }
                            },
                            "required": [
                              "cluster",
                              "name",
                              "subnets"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "prismCentral": {
                          "additionalProperties": false,
                          "properties": {
                            "address": {
                              "maxLength": 256,
                              "type": "string"
                            },
                            "port": {
                              "format": "int32",
                              "maximum": 65535,
                              "minimum": 1,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "address",
                            "port"
                          ],
                          "type": "object"
                        },
                        "prismElements": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "endpoint": {
                                "additionalProperties": false,
                                "properties": {
                                  "address": {
                                    "maxLength": 256,
                                    "type": "string"
                                  },
                                  "port": {
                                    "format": "int32",
                                    "maximum": 65535,
                                    "minimum": 1,
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "address",
                                  "port"
                                ],
                                "type": "object"
                              },
                              "name": {
                                "maxLength": 256,
                                "type": "string"
                              }
                            },
                            "required": [
                              "endpoint",
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "required": [
                        "prismCentral",
                        "prismElements"
                      ],
                      "type": "object"
                    },
                    "openstack": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIPs": {
                          "items": {
                            "maxLength": 39,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid IP address",
                                "rule": "isIP(self)"
                              }
                            ]
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true"
                            }
                          ]
                        },
                        "ingressIPs": {
                          "items": {
                            "maxLength": 39,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid IP address",
                                "rule": "isIP(self)"
                              }
                            ]
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true"
                            }
                          ]
                        },
                        "machineNetworks": {
                          "items": {
                            "maxLength": 43,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid CIDR network address",
                                "rule": "isCIDR(self)"
                              }
                            ]
                          },
                          "maxItems": 32,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.all(x, self.exists_one(y, x == y))"
                            }
                          ]
                        }
                      },
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "apiServerInternalIPs list is required once set",
                          "rule": "!has(oldSelf.apiServerInternalIPs) || has(self.apiServerInternalIPs)"
                        },
                        {
                          "message": "ingressIPs list is required once set",
                          "rule": "!has(oldSelf.ingressIPs) || has(self.ingressIPs)"
                        }
                      ]
                    },
                    "ovirt": {
                      "type": "object"
                    },
                    "powervs": {
                      "additionalProperties": false,
                      "properties": {
                        "serviceEndpoints": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "pattern": "^[a-z0-9-]+$",
                                "type": "string"
                              },
                              "url": {
                                "format": "uri",
                                "pattern": "^https://",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "url"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "enum": [
                        "",
                        "AWS",
                        "Azure",
                        "BareMetal",
                        "GCP",
                        "Libvirt",
                        "OpenStack",
                        "None",
                        "VSphere",
                        "oVirt",
                        "IBMCloud",
                        "KubeVirt",
                        "EquinixMetal",
                        "PowerVS",
                        "AlibabaCloud",
                        "Nutanix",
                        "External"
                      ],
                      "type": "string"
                    },
                    "vsphere": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIPs": {
                          "items": {
                            "maxLength": 39,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid IP address",
                                "rule": "isIP(self)"
                              }
                            ]
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true"
                            }
                          ]
                        },
                        "failureDomains": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "maxLength": 256,
                                "minLength": 1,
                                "type": "string"
                              },
                              "region": {
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                              },
                              "server": {
                                "maxLength": 255,
                                "minLength": 1,
                                "type": "string"
                              },
                              "topology": {
                                "additionalProperties": false,
                                "properties": {
                                  "computeCluster": {
                                    "maxLength": 2048,
                                    "pattern": "^/.*?/host/.*?",
                                    "type": "string"
                                  },
                                  "datacenter": {
                                    "maxLength": 80,
                                    "type": "string"
                                  },
                                  "datastore": {
                                    "maxLength": 2048,
                                    "pattern": "^/.*?/datastore/.*?",
                                    "type": "string"
                                  },
                                  "folder": {
                                    "maxLength": 2048,
                                    "pattern": "^/.*?/vm/.*?",
                                    "type": "string"
                                  },
                                  "networks": {
                                    "items": {
                                      "type": "string"
                                    },
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array",
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "resourcePool": {
                                    "maxLength": 2048,
                                    "pattern": "^/.*?/host/.*?/Resources.*",
                                    "type": "string"
                                  },
                                  "template": {
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "pattern": "^/.*?/vm/.*?",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "computeCluster",
                                  "datacenter",
                                  "datastore",
                                  "networks"
                                ],
                                "type": "object"
                              },
                              "zone": {
                                "maxLength": 80,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "region",
                              "server",
                              "topology",
                              "zone"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "ingressIPs": {
                          "items": {
                            "maxLength": 39,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid IP address",
                                "rule": "isIP(self)"
                              }
                            ]
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true"
                            }
                          ]
                        },
                        "machineNetworks": {
                          "items": {
                            "maxLength": 43,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid CIDR network address",
                                "rule": "isCIDR(self)"
                              }
                            ]
                          },
                          "maxItems": 32,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.all(x, self.exists_one(y, x == y))"
                            }
                          ]
                        },
                        "nodeNetworking": {
                          "additionalProperties": false,
                          "properties": {
                            "external": {
                              "additionalProperties": false,
                              "properties": {
                                "excludeNetworkSubnetCidr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "network": {
                                  "type": "string"
                                },
                                "networkSubnetCidr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "set"
                                }
                              },
                              "type": "object"
                            },
                            "internal": {
                              "additionalProperties": false,
                              "properties": {
                                "excludeNetworkSubnetCidr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "network": {
                                  "type": "string"
                                },
                                "networkSubnetCidr": {
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array",
                                  "x-kubernetes-list-type": "set"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "vcenters": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "datacenters": {
                                "items": {
                                  "type": "string"
                                },
                                "minItems": 1,
                                "type": "array",
                                "x-kubernetes-list-type": "set"
                              },
                              "port": {
                                "format": "int32",
                                "maximum": 32767,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "server": {
                                "maxLength": 255,
                                "type": "string"
                              }
                            },
                            "required": [
                              "datacenters",
                              "server"
                            ],
                            "type": "object"
                          },
                          "maxItems": 3,
                          "minItems": 0,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "apiServerInternalIPs list is required once set",
                          "rule": "!has(oldSelf.apiServerInternalIPs) || has(self.apiServerInternalIPs)"
                        },
                        {
                          "message": "ingressIPs list is required once set",
                          "rule": "!has(oldSelf.ingressIPs) || has(self.ingressIPs)"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "status": {
              "additionalProperties": false,
              "properties": {
                "apiServerInternalURI": {
                  "type": "string"
                },
                "apiServerURL": {
                  "type": "string"
                },
                "controlPlaneTopology": {
                  "default": "HighlyAvailable",
                  "enum": [
                    "HighlyAvailable",
                    "SingleReplica",
                    "External"
                  ],
                  "type": "string"
                },
                "cpuPartitioning": {
                  "default": "None",
                  "enum": [
                    "None",
                    "AllNodes"
                  ],
                  "type": "string"
                },
                "etcdDiscoveryDomain": {
                  "type": "string"
                },
                "infrastructureName": {
                  "type": "string"
                },
                "infrastructureTopology": {
                  "default": "HighlyAvailable",
                  "enum": [
                    "HighlyAvailable",
                    "SingleReplica"
                  ],
                  "type": "string"
                },
                "platform": {
                  "enum": [
                    "",
                    "AWS",
                    "Azure",
                    "BareMetal",
                    "GCP",
                    "Libvirt",
                    "OpenStack",
                    "None",
                    "VSphere",
                    "oVirt",
                    "IBMCloud",
                    "KubeVirt",
                    "EquinixMetal",
                    "PowerVS",
                    "AlibabaCloud",
                    "Nutanix",
                    "External"
                  ],
                  "type": "string"
                },
                "platformStatus": {
                  "additionalProperties": false,
                  "properties": {
                    "alibabaCloud": {
                      "additionalProperties": false,
                      "properties": {
                        "region": {
                          "pattern": "^[0-9A-Za-z-]+$",
                          "type": "string"
                        },
                        "resourceGroupID": {
                          "pattern": "^(rg-[0-9A-Za-z]+)?$",
                          "type": "string"
                        },
                        "resourceTags": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "key": {
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "maxLength": 128,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ],
                            "type": "object"
                          },
                          "maxItems": 20,
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "required": [
                        "region"
                      ],
                      "type": "object"
                    },
                    "aws": {
                      "additionalProperties": false,
                      "properties": {
                        "region": {
                          "type": "string"
                        },
                        "resourceTags": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "key": {
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[0-9A-Za-z_.:/=+-@]+$",
                                "type": "string"
                              },
                              "value": {
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "^[0-9A-Za-z_.:/=+-@]+$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ],
                            "type": "object"
                          },
                          "maxItems": 25,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        },
                        "serviceEndpoints": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "pattern": "^[a-z0-9-]+$",
                                "type": "string"
                              },
                              "url": {
                                "pattern": "^https://",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "type": "object"
                    },
                    "azure": {
                      "additionalProperties": false,
                      "properties": {
                        "armEndpoint": {
                          "type": "string"
                        },
                        "cloudName": {
                          "enum": [
                            "",
                            "AzurePublicCloud",
                            "AzureUSGovernmentCloud",
                            "AzureChinaCloud",
                            "AzureGermanCloud",
                            "AzureStackCloud"
                          ],
                          "type": "string"
                        },
                        "networkResourceGroupName": {
                          "type": "string"
                        },
                        "resourceGroupName": {
                          "type": "string"
                        },
                        "resourceTags": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "key": {
                                "maxLength": 128,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z]([0-9A-Za-z_.-]*[0-9A-Za-z_])?$",
                                "type": "string"
                              },
                              "value": {
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "^[0-9A-Za-z_.=+-@]+$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ],
                            "type": "object"
                          },
                          "maxItems": 10,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "resourceTags are immutable and may only be configured during installation",
                              "rule": "self.all(x, x in oldSelf) && oldSelf.all(x, x in self)"
                            }
                          ]
                        }
                      },
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "resourceTags may only be configured during installation",
                          "rule": "!has(oldSelf.resourceTags) && !has(self.resourceTags) || has(oldSelf.resourceTags) && has(self.resourceTags)"
                        }
                      ]
                    },
                    "baremetal": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIP": {
                          "type": "string"
                        },
                        "apiServerInternalIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "ingressIP": {
                          "type": "string"
                        },
                        "ingressIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "loadBalancer": {
                          "additionalProperties": false,
                          "default": {
                            "type": "OpenShiftManagedDefault"
                          },
                          "properties": {
                            "type": {
                              "default": "OpenShiftManagedDefault",
                              "enum": [
                                "OpenShiftManagedDefault",
                                "UserManaged"
                              ],
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "type is immutable once set",
                                  "rule": "oldSelf == '' || self == oldSelf"
                                }
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "machineNetworks": {
                          "items": {
                            "maxLength": 43,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid CIDR network address",
                                "rule": "isCIDR(self)"
                              }
                            ]
                          },
                          "maxItems": 32,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.all(x, self.exists_one(y, x == y))"
                            }
                          ]
                        },
                        "nodeDNSIP": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "equinixMetal": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIP": {
                          "type": "string"
                        },
                        "ingressIP": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "external": {
                      "additionalProperties": false,
                      "properties": {
                        "cloudControllerManager": {
                          "additionalProperties": false,
                          "properties": {
                            "state": {
                              "enum": [
                                "",
                                "External",
                                "None"
                              ],
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "state is immutable once set",
                                  "rule": "self == oldSelf"
                                }
                              ]
                            }
                          },
                          "type": "object",
                          "x-kubernetes-validations": [
                            {
                              "message": "state may not be added or removed once set",
                              "rule": "(has(self.state) == has(oldSelf.state)) || (!has(oldSelf.state) && self.state != \"External\")"
                            }
                          ]
                        }
                      },
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "cloudControllerManager may not be added or removed once set",
                          "rule": "has(self.cloudControllerManager) == has(oldSelf.cloudControllerManager)"
                        }
                      ]
                    },
                    "gcp": {
                      "additionalProperties": false,
                      "properties": {
                        "cloudLoadBalancerConfig": {
                          "additionalProperties": false,
                          "default": {
                            "dnsType": "PlatformDefault"
                          },
                          "nullable": true,
                          "properties": {
                            "clusterHosted": {
                              "additionalProperties": false,
                              "properties": {
                                "apiIntLoadBalancerIPs": {
                                  "format": "ip",
                                  "items": {
                                    "maxLength": 39,
                                    "minLength": 1,
                                    "type": "string",
                                    "x-kubernetes-validations": [
                                      {
                                        "message": "value must be a valid IP address",
                                        "rule": "isIP(self)"
                                      }
                                    ]
                                  },
                                  "maxItems": 16,
                                  "type": "array",
                                  "x-kubernetes-list-type": "set"
                                },
                                "apiLoadBalancerIPs": {
                                  "format": "ip",
                                  "items": {
                                    "maxLength": 39,
                                    "minLength": 1,
                                    "type": "string",
                                    "x-kubernetes-validations": [
                                      {
                                        "message": "value must be a valid IP address",
                                        "rule": "isIP(self)"
                                      }
                                    ]
                                  },
                                  "maxItems": 16,
                                  "type": "array",
                                  "x-kubernetes-list-type": "set"
                                },
                                "ingressLoadBalancerIPs": {
                                  "format": "ip",
                                  "items": {
                                    "maxLength": 39,
                                    "minLength": 1,
                                    "type": "string",
                                    "x-kubernetes-validations": [
                                      {
                                        "message": "value must be a valid IP address",
                                        "rule": "isIP(self)"
                                      }
                                    ]
                                  },
                                  "maxItems": 16,
                                  "type": "array",
                                  "x-kubernetes-list-type": "set"
                                }
                              },
                              "type": "object"
                            },
                            "dnsType": {
                              "default": "PlatformDefault",
                              "enum": [
                                "ClusterHosted",
                                "PlatformDefault"
                              ],
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "dnsType is immutable",
                                  "rule": "oldSelf == '' || self == oldSelf"
                                }
                              ]
                            }
                          },
                          "type": "object",
                          "x-kubernetes-validations": [
                            {
                              "message": "clusterHosted is permitted only when dnsType is ClusterHosted",
                              "rule": "has(self.dnsType) && self.dnsType != 'ClusterHosted' ? !has(self.clusterHosted) : true"
                            }
                          ]
                        },
                        "projectID": {
                          "type": "string"
                        },
                        "region": {
                          "type": "string"
                        },
                        "resourceLabels": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "key": {
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-z][0-9a-z_-]{0,62}$",
                                "type": "string",
                                "x-kubernetes-validations": [
                                  {
                                    "message": "label keys must not start with either `openshift-io` or `kubernetes-io`",
                                    "rule": "!self.startsWith('openshift-io') && !self.startsWith('kubernetes-io')"
                                  }
                                ]
                              },
                              "value": {
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[0-9a-z_-]{1,63}$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "value"
                            ],
                            "type": "object"
                          },
                          "maxItems": 32,
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map",
                          "x-kubernetes-validations": [
                            {
                              "message": "resourceLabels are immutable and may only be configured during installation",
                              "rule": "self.all(x, x in oldSelf) && oldSelf.all(x, x in self)"
                            }
                          ]
                        },
                        "resourceTags": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "key": {
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9]([0-9A-Za-z_.-]{0,61}[a-zA-Z0-9])?$",
                                "type": "string"
                              },
                              "parentID": {
                                "maxLength": 32,
                                "minLength": 1,
                                "pattern": "(^[1-9][0-9]{0,31}$)|(^[a-z][a-z0-9-]{4,28}[a-z0-9]$)",
                                "type": "string"
                              },
                              "value": {
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z0-9]([0-9A-Za-z_.@%=+:,*#&()\\[\\]{}\\-\\s]{0,61}[a-zA-Z0-9])?$",
                                "type": "string"
                              }
                            },
                            "required": [
                              "key",
                              "parentID",
                              "value"
                            ],
                            "type": "object"
                          },
                          "maxItems": 50,
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "key"
                          ],
                          "x-kubernetes-list-type": "map",
                          "x-kubernetes-validations": [
                            {
                              "message": "resourceTags are immutable and may only be configured during installation",
                              "rule": "self.all(x, x in oldSelf) && oldSelf.all(x, x in self)"
                            }
                          ]
                        }
                      },
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "resourceLabels may only be configured during installation",
                          "rule": "!has(oldSelf.resourceLabels) && !has(self.resourceLabels) || has(oldSelf.resourceLabels) && has(self.resourceLabels)"
                        },
                        {
                          "message": "resourceTags may only be configured during installation",
                          "rule": "!has(oldSelf.resourceTags) && !has(self.resourceTags) || has(oldSelf.resourceTags) && has(self.resourceTags)"
                        }
                      ]
                    },
                    "ibmcloud": {
                      "additionalProperties": false,
                      "properties": {
                        "cisInstanceCRN": {
                          "type": "string"
                        },
                        "dnsInstanceCRN": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "providerType": {
                          "type": "string"
                        },
                        "resourceGroupName": {
                          "type": "string"
                        },
                        "serviceEndpoints": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "enum": [
                                  "CIS",
                                  "COS",
                                  "COSConfig",
                                  "DNSServices",
                                  "GlobalCatalog",
                                  "GlobalSearch",
                                  "GlobalTagging",
                                  "HyperProtect",
                                  "IAM",
                                  "KeyProtect",
                                  "ResourceController",
                                  "ResourceManager",
                                  "VPC"
                                ],
                                "type": "string"
                              },
                              "url": {
                                "type": "string",
                                "x-kubernetes-validations": [
                                  {
                                    "message": "url must be a valid absolute URL",
                                    "rule": "isURL(self)"
                                  }
                                ]
                              }
                            },
                            "required": [
                              "name",
                              "url"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "type": "object"
                    },
                    "kubevirt": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIP": {
                          "type": "string"
                        },
                        "ingressIP": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "nutanix": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIP": {
                          "type": "string"
                        },
                        "apiServerInternalIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "set",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "ingressIP": {
                          "type": "string"
                        },
                        "ingressIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "set",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "loadBalancer": {
                          "additionalProperties": false,
                          "default": {
                            "type": "OpenShiftManagedDefault"
                          },
                          "properties": {
                            "type": {
                              "default": "OpenShiftManagedDefault",
                              "enum": [
                                "OpenShiftManagedDefault",
                                "UserManaged"
                              ],
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "type is immutable once set",
                                  "rule": "oldSelf == '' || self == oldSelf"
                                }
                              ]
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "openstack": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIP": {
                          "type": "string"
                        },
                        "apiServerInternalIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "cloudName": {
                          "type": "string"
                        },
                        "ingressIP": {
                          "type": "string"
                        },
                        "ingressIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "loadBalancer": {
                          "additionalProperties": false,
                          "default": {
                            "type": "OpenShiftManagedDefault"
                          },
                          "properties": {
                            "type": {
                              "default": "OpenShiftManagedDefault",
                              "enum": [
                                "OpenShiftManagedDefault",
                                "UserManaged"
                              ],
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "type is immutable once set",
                                  "rule": "oldSelf == '' || self == oldSelf"
                                }
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "machineNetworks": {
                          "items": {
                            "maxLength": 43,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid CIDR network address",
                                "rule": "isCIDR(self)"
                              }
                            ]
                          },
                          "maxItems": 32,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.all(x, self.exists_one(y, x == y))"
                            }
                          ]
                        },
                        "nodeDNSIP": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "ovirt": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIP": {
                          "type": "string"
                        },
                        "apiServerInternalIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "set",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "ingressIP": {
                          "type": "string"
                        },
                        "ingressIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "set",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "loadBalancer": {
                          "additionalProperties": false,
                          "default": {
                            "type": "OpenShiftManagedDefault"
                          },
                          "properties": {
                            "type": {
                              "default": "OpenShiftManagedDefault",
                              "enum": [
                                "OpenShiftManagedDefault",
                                "UserManaged"
                              ],
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "type is immutable once set",
                                  "rule": "oldSelf == '' || self == oldSelf"
                                }
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "nodeDNSIP": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "powervs": {
                      "additionalProperties": false,
                      "properties": {
                        "cisInstanceCRN": {
                          "type": "string"
                        },
                        "dnsInstanceCRN": {
                          "type": "string"
                        },
                        "region": {
                          "type": "string"
                        },
                        "resourceGroup": {
                          "maxLength": 40,
                          "pattern": "^[a-zA-Z0-9-_ ]+$",
                          "type": "string",
                          "x-kubernetes-validations": [
                            {
                              "message": "resourceGroup is immutable once set",
                              "rule": "oldSelf == '' || self == oldSelf"
                            }
                          ]
                        },
                        "serviceEndpoints": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "pattern": "^[a-z0-9-]+$",
                                "type": "string"
                              },
                              "url": {
                                "format": "uri",
                                "pattern": "^https://",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "url"
                            ],
                            "type": "object"
                          },
                          "type": "array",
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "zone": {
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "x-kubernetes-validations": [
                        {
                          "message": "cannot unset resourceGroup once set",
                          "rule": "!has(oldSelf.resourceGroup) || has(self.resourceGroup)"
                        }
                      ]
                    },
                    "type": {
                      "enum": [
                        "",
                        "AWS",
                        "Azure",
                        "BareMetal",
                        "GCP",
                        "Libvirt",
                        "OpenStack",
                        "None",
                        "VSphere",
                        "oVirt",
                        "IBMCloud",
                        "KubeVirt",
                        "EquinixMetal",
                        "PowerVS",
                        "AlibabaCloud",
                        "Nutanix",
                        "External"
                      ],
                      "type": "string"
                    },
                    "vsphere": {
                      "additionalProperties": false,
                      "properties": {
                        "apiServerInternalIP": {
                          "type": "string"
                        },
                        "apiServerInternalIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "apiServerInternalIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "ingressIP": {
                          "type": "string"
                        },
                        "ingressIPs": {
                          "format": "ip",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 2,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "message": "ingressIPs must contain at most one IPv4 address and at most one IPv6 address",
                              "rule": "self == oldSelf || (size(self) == 2 && isIP(self[0]) && isIP(self[1]) ? ip(self[0]).family() != ip(self[1]).family() : true)"
                            }
                          ]
                        },
                        "loadBalancer": {
                          "additionalProperties": false,
                          "default": {
                            "type": "OpenShiftManagedDefault"
                          },
                          "properties": {
                            "type": {
                              "default": "OpenShiftManagedDefault",
                              "enum": [
                                "OpenShiftManagedDefault",
                                "UserManaged"
                              ],
                              "type": "string",
                              "x-kubernetes-validations": [
                                {
                                  "message": "type is immutable once set",
                                  "rule": "oldSelf == '' || self == oldSelf"
                                }
                              ]
                            }
                          },
                          "type": "object"
                        },
                        "machineNetworks": {
                          "items": {
                            "maxLength": 43,
                            "minLength": 1,
                            "type": "string",
                            "x-kubernetes-validations": [
                              {
                                "message": "value must be a valid CIDR network address",
                                "rule": "isCIDR(self)"
                              }
                            ]
                          },
                          "maxItems": 32,
                          "type": "array",
                          "x-kubernetes-list-type": "atomic",
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.all(x, self.exists_one(y, x == y))"
                            }
                          ]
                        },
                        "nodeDNSIP": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "spec"
          ],
          "type": "object",
          "x-kubernetes-embedded-resource": true
        },
        "internalRegistryPullSecret": {
          "format": "byte",
          "nullable": true,
          "type": "string"
        },
        "ipFamilies": {
          "type": "string"
        },
        "kubeAPIServerServingCAData": {
          "format": "byte",
          "type": "string"
        },
        "network": {
          "additionalProperties": false,
          "nullable": true,
          "properties": {
            "mtuMigration": {
              "additionalProperties": false,
              "nullable": true,
              "properties": {
                "machine": {
                  "additionalProperties": false,
                  "properties": {
                    "from": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "to": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "network": {
                  "additionalProperties": false,
                  "properties": {
                    "from": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "to": {
                      "format": "int32",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "mtuMigration"
          ],
          "type": "object"
        },
        "networkType": {
          "type": "string"
        },
        "osImageURL": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "proxy": {
          "additionalProperties": false,
          "nullable": true,
          "properties": {
            "httpProxy": {
              "type": "string"
            },
            "httpsProxy": {
              "type": "string"
            },
            "noProxy": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "pullSecret": {
          "additionalProperties": false,
          "properties": {
            "apiVersion": {
              "type": "string"
            },
            "fieldPath": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "resourceVersion": {
              "type": "string"
            },
            "uid": {
              "type": "string"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        },
        "releaseImage": {
          "type": "string"
        },
        "rootCAData": {
          "format": "byte",
          "type": "string"
        }
      },
      "required": [
        "additionalTrustBundle",
        "baseOSContainerImage",
        "cloudProviderCAData",
        "cloudProviderConfig",
        "clusterDNSIP",
        "dns",
        "images",
        "infra",
        "ipFamilies",
        "kubeAPIServerServingCAData",
        "network",
        "proxy",
        "releaseImage",
        "rootCAData"
      ],
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "nullable": true,
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "controllerCertificates": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "bundleFile": {
                "type": "string"
              },
              "notAfter": {
                "format": "date-time",
                "type": "string"
              },
              "notBefore": {
                "format": "date-time",
                "type": "string"
              },
              "signer": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              }
            },
            "required": [
              "bundleFile",
              "signer",
              "subject"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-type": "atomic"
        },
        "observedGeneration": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
