{
  "description": "StackSet is the Schema for the StackSets API. Manages a CloudFormation StackSet.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "StackSetSpec defines the desired state of StackSet",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "administrationRoleArn": {
              "description": "Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the SELF_MANAGED permission model.",
              "type": "string"
            },
            "administrationRoleArnRef": {
              "description": "Reference to a Role in iam to populate administrationRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "administrationRoleArnSelector": {
              "description": "Selector for a Role in iam to populate administrationRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "autoDeployment": {
              "description": "Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the SERVICE_MANAGED permission model.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Whether or not auto-deployment is enabled.",
                  "type": "boolean"
                },
                "retainStacksOnAccountRemoval": {
                  "description": "Whether or not to retain stacks when the account is removed.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "callAs": {
              "description": "Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account. Valid values: SELF (default), DELEGATED_ADMIN.",
              "type": "string"
            },
            "capabilities": {
              "description": "A list of capabilities. Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "description": {
              "description": "Description of the StackSet.",
              "type": "string"
            },
            "executionRoleName": {
              "description": "Name of the IAM Role in all target accounts for StackSet operations. Defaults to AWSCloudFormationStackSetExecutionRole when using the SELF_MANAGED permission model. This should not be defined when using the SERVICE_MANAGED permission model.",
              "type": "string"
            },
            "managedExecution": {
              "description": "Configuration block to allow StackSets to perform non-conflicting operations concurrently and queues conflicting operations.",
              "type": "object",
              "properties": {
                "active": {
                  "description": "When set to true, StackSets performs non-conflicting operations concurrently and queues conflicting operations. After conflicting operations finish, StackSets starts queued operations in request order. Default is false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "operationPreferences": {
              "description": "Preferences for how AWS CloudFormation performs a stack set update.",
              "type": "object",
              "properties": {
                "failureToleranceCount": {
                  "description": "The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.",
                  "type": "number"
                },
                "failureTolerancePercentage": {
                  "description": "The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.",
                  "type": "number"
                },
                "maxConcurrentCount": {
                  "description": "The maximum number of accounts in which to perform this operation at one time.",
                  "type": "number"
                },
                "maxConcurrentPercentage": {
                  "description": "The maximum percentage of accounts in which to perform this operation at one time.",
                  "type": "number"
                },
                "regionConcurrencyType": {
                  "description": "The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.",
                  "type": "string"
                },
                "regionOrder": {
                  "description": "The order of the Regions in where you want to perform the stack operation.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "parameters": {
              "description": "Key-value map of input parameters for the StackSet template. All template parameters, including those with a Default, must be configured or ignored with lifecycle configuration block ignore_changes argument. All NoEcho template parameters must be ignored with the lifecycle configuration block ignore_changes argument.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "permissionModel": {
              "description": "Describes how the IAM roles required for your StackSet are created. Valid values: SELF_MANAGED (default), SERVICE_MANAGED.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "templateBody": {
              "description": "String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with template_url.",
              "type": "string"
            },
            "templateUrl": {
              "description": "String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with template_body.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "administrationRoleArn": {
              "description": "Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the SELF_MANAGED permission model.",
              "type": "string"
            },
            "administrationRoleArnRef": {
              "description": "Reference to a Role in iam to populate administrationRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "administrationRoleArnSelector": {
              "description": "Selector for a Role in iam to populate administrationRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "autoDeployment": {
              "description": "Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the SERVICE_MANAGED permission model.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Whether or not auto-deployment is enabled.",
                  "type": "boolean"
                },
                "retainStacksOnAccountRemoval": {
                  "description": "Whether or not to retain stacks when the account is removed.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "callAs": {
              "description": "Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account. Valid values: SELF (default), DELEGATED_ADMIN.",
              "type": "string"
            },
            "capabilities": {
              "description": "A list of capabilities. Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "description": {
              "description": "Description of the StackSet.",
              "type": "string"
            },
            "executionRoleName": {
              "description": "Name of the IAM Role in all target accounts for StackSet operations. Defaults to AWSCloudFormationStackSetExecutionRole when using the SELF_MANAGED permission model. This should not be defined when using the SERVICE_MANAGED permission model.",
              "type": "string"
            },
            "managedExecution": {
              "description": "Configuration block to allow StackSets to perform non-conflicting operations concurrently and queues conflicting operations.",
              "type": "object",
              "properties": {
                "active": {
                  "description": "When set to true, StackSets performs non-conflicting operations concurrently and queues conflicting operations. After conflicting operations finish, StackSets starts queued operations in request order. Default is false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "operationPreferences": {
              "description": "Preferences for how AWS CloudFormation performs a stack set update.",
              "type": "object",
              "properties": {
                "failureToleranceCount": {
                  "description": "The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.",
                  "type": "number"
                },
                "failureTolerancePercentage": {
                  "description": "The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.",
                  "type": "number"
                },
                "maxConcurrentCount": {
                  "description": "The maximum number of accounts in which to perform this operation at one time.",
                  "type": "number"
                },
                "maxConcurrentPercentage": {
                  "description": "The maximum percentage of accounts in which to perform this operation at one time.",
                  "type": "number"
                },
                "regionConcurrencyType": {
                  "description": "The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.",
                  "type": "string"
                },
                "regionOrder": {
                  "description": "The order of the Regions in where you want to perform the stack operation.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "parameters": {
              "description": "Key-value map of input parameters for the StackSet template. All template parameters, including those with a Default, must be configured or ignored with lifecycle configuration block ignore_changes argument. All NoEcho template parameters must be ignored with the lifecycle configuration block ignore_changes argument.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "permissionModel": {
              "description": "Describes how the IAM roles required for your StackSet are created. Valid values: SELF_MANAGED (default), SERVICE_MANAGED.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "templateBody": {
              "description": "String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with template_url.",
              "type": "string"
            },
            "templateUrl": {
              "description": "String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with template_body.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "StackSetStatus defines the observed state of StackSet.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "administrationRoleArn": {
              "description": "Amazon Resource Number (ARN) of the IAM Role in the administrator account. This must be defined when using the SELF_MANAGED permission model.",
              "type": "string"
            },
            "arn": {
              "description": "Amazon Resource Name (ARN) of the StackSet.",
              "type": "string"
            },
            "autoDeployment": {
              "description": "Configuration block containing the auto-deployment model for your StackSet. This can only be defined when using the SERVICE_MANAGED permission model.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Whether or not auto-deployment is enabled.",
                  "type": "boolean"
                },
                "retainStacksOnAccountRemoval": {
                  "description": "Whether or not to retain stacks when the account is removed.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "callAs": {
              "description": "Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account. Valid values: SELF (default), DELEGATED_ADMIN.",
              "type": "string"
            },
            "capabilities": {
              "description": "A list of capabilities. Valid values: CAPABILITY_IAM, CAPABILITY_NAMED_IAM, CAPABILITY_AUTO_EXPAND.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "description": {
              "description": "Description of the StackSet.",
              "type": "string"
            },
            "executionRoleName": {
              "description": "Name of the IAM Role in all target accounts for StackSet operations. Defaults to AWSCloudFormationStackSetExecutionRole when using the SELF_MANAGED permission model. This should not be defined when using the SERVICE_MANAGED permission model.",
              "type": "string"
            },
            "id": {
              "description": "Name of the StackSet.",
              "type": "string"
            },
            "managedExecution": {
              "description": "Configuration block to allow StackSets to perform non-conflicting operations concurrently and queues conflicting operations.",
              "type": "object",
              "properties": {
                "active": {
                  "description": "When set to true, StackSets performs non-conflicting operations concurrently and queues conflicting operations. After conflicting operations finish, StackSets starts queued operations in request order. Default is false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "operationPreferences": {
              "description": "Preferences for how AWS CloudFormation performs a stack set update.",
              "type": "object",
              "properties": {
                "failureToleranceCount": {
                  "description": "The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.",
                  "type": "number"
                },
                "failureTolerancePercentage": {
                  "description": "The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.",
                  "type": "number"
                },
                "maxConcurrentCount": {
                  "description": "The maximum number of accounts in which to perform this operation at one time.",
                  "type": "number"
                },
                "maxConcurrentPercentage": {
                  "description": "The maximum percentage of accounts in which to perform this operation at one time.",
                  "type": "number"
                },
                "regionConcurrencyType": {
                  "description": "The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.",
                  "type": "string"
                },
                "regionOrder": {
                  "description": "The order of the Regions in where you want to perform the stack operation.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "parameters": {
              "description": "Key-value map of input parameters for the StackSet template. All template parameters, including those with a Default, must be configured or ignored with lifecycle configuration block ignore_changes argument. All NoEcho template parameters must be ignored with the lifecycle configuration block ignore_changes argument.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "permissionModel": {
              "description": "Describes how the IAM roles required for your StackSet are created. Valid values: SELF_MANAGED (default), SERVICE_MANAGED.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "stackSetId": {
              "description": "Unique identifier of the StackSet.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "templateBody": {
              "description": "String containing the CloudFormation template body. Maximum size: 51,200 bytes. Conflicts with template_url.",
              "type": "string"
            },
            "templateUrl": {
              "description": "String containing the location of a file containing the CloudFormation template body. The URL must point to a template that is located in an Amazon S3 bucket. Maximum location file size: 460,800 bytes. Conflicts with template_body.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
