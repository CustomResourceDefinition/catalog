{
  "description": "ModuleImagesConfig keeps the request for images' state for a KMM Module.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ModuleImagesConfigSpec describes the images of the Module whose status needs to be verified\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "object",
      "properties": {
        "imagePullPolicy": {
          "description": "ImagePullPolicy defines the pull policy used for verifying the presence of the image",
          "type": "string",
          "default": "IfNotPresent"
        },
        "imageRepoSecret": {
          "description": "ImageRepoSecret contains pull secret for the image's repo, if needed",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "images": {
          "type": "array",
          "items": {
            "description": "ModuleImageSpec describes the image whose state needs to be queried",
            "type": "object",
            "required": [
              "image",
              "kernelVersion"
            ],
            "properties": {
              "build": {
                "description": "Build contains build instructions, in case image needs building",
                "type": "object",
                "required": [
                  "dockerfileConfigMap"
                ],
                "properties": {
                  "baseImageRegistryTLS": {
                    "description": "BaseImageRegistryTLS contains settings determining how to access registries of the base images in the build-process' Dockerfile.",
                    "type": "object",
                    "properties": {
                      "insecure": {
                        "description": "If Insecure is true, the operator will be able to access a registry in an insecure (plain HTTP) protocol.",
                        "type": "boolean"
                      },
                      "insecureSkipTLSVerify": {
                        "description": "If InsecureSkipTLSVerify, the operator will accept any certificate provided by the registry.",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "buildArgs": {
                    "description": "BuildArgs is an array of build variables that are provided to the image building backend.",
                    "type": "array",
                    "items": {
                      "description": "BuildArg represents a build argument used when building a container image.",
                      "type": "object",
                      "required": [
                        "name",
                        "value"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "dockerfileConfigMap": {
                    "description": "ConfigMap that holds Dockerfile contents",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "kanikoParams": {
                    "description": "KanikoParams is used to customize the building process of the image.",
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "Kaniko image tag to use when creating the build Pod",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "secrets": {
                    "description": "Secrets is an optional list of secrets to be made available to the build system.\nThose secrets should be used for private resources such as a private Github repo.\nFor container registries auth use module.spec.imagePullSecret instead.",
                    "type": "array",
                    "items": {
                      "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "selector": {
                    "description": "Selector describes on which nodes will run the building process.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "image": {
                "description": "image",
                "type": "string"
              },
              "kernelVersion": {
                "description": "kernel version for which this image is targeted",
                "type": "string"
              },
              "registryTLS": {
                "description": "RegistryTLS set the TLS configs for accessing the registry of the image.",
                "type": "object",
                "properties": {
                  "insecure": {
                    "description": "If Insecure is true, the operator will be able to access a registry in an insecure (plain HTTP) protocol.",
                    "type": "boolean"
                  },
                  "insecureSkipTLSVerify": {
                    "description": "If InsecureSkipTLSVerify, the operator will accept any certificate provided by the registry.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "sign": {
                "description": "Sign contains sign instructions, in case image needs signing",
                "type": "object",
                "required": [
                  "certSecret",
                  "keySecret"
                ],
                "properties": {
                  "certSecret": {
                    "description": "a secret containing the public key used to sign kernel modules for secureboot",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "filesToSign": {
                    "description": "paths inside the image for the kernel modules to sign (if ommited all kmods are signed)",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "keySecret": {
                    "description": "a secret containing the private key used to sign kernel modules for secureboot",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "unsignedImage": {
                    "description": "Image to sign, ignored if a Build is present, required otherwise",
                    "type": "string"
                  },
                  "unsignedImageRegistryTLS": {
                    "description": "UnsignedImageRegistryTLS contains settings determining how to access registries of the unsigned image.",
                    "type": "object",
                    "properties": {
                      "insecure": {
                        "description": "If Insecure is true, the operator will be able to access a registry in an insecure (plain HTTP) protocol.",
                        "type": "boolean"
                      },
                      "insecureSkipTLSVerify": {
                        "description": "If InsecureSkipTLSVerify, the operator will accept any certificate provided by the registry.",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "skipWaitMissingImage": {
                "description": "SkipWaitMissingImage signals to MIC to stop waiting for image to be present\nin case Build andSign not define, and report the image as DoesNotExist",
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ModuleImagesConfigStatus describes the status of the images that need to be verified (defined in the spec)\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "object",
      "required": [
        "imagesStates"
      ],
      "properties": {
        "imagesStates": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "image",
              "status"
            ],
            "properties": {
              "image": {
                "description": "image",
                "type": "string"
              },
              "status": {
                "description": "status of the image\none of: Exists, notExists",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
