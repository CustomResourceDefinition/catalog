{
  "description": "BigtableBackup is the Schema for the BigtableBackup API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BigtableBackupSpec defines the desired state of BigtableBackup",
      "type": "object",
      "required": [
        "clusterRef"
      ],
      "properties": {
        "backupType": {
          "description": "Indicates the backup type of the backup.",
          "type": "string"
        },
        "clusterRef": {
          "description": "ClusterRef defines the resource reference to BigtableCluster, which \"External\" field holds the GCP identifier for the KRM object.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed BigtableCluster resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/clusters/{{clusterID}}\".",
              "type": "string"
            },
            "name": {
              "description": "The name of a BigtableCluster resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a BigtableCluster resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "expireTime": {
          "description": "Required. The expiration time of the backup.\n When creating a backup or updating its `expire_time`, the value must be\n greater than the backup creation time by:\n - At least 6 hours\n - At most 90 days\n\n Once the `expire_time` has passed, Cloud Bigtable will delete the backup.",
          "type": "string"
        },
        "hotToStandardTime": {
          "description": "The time at which the hot backup will be converted to a standard backup.\n Once the `hot_to_standard_time` has passed, Cloud Bigtable will convert the\n hot backup to a standard backup. This value must be greater than the backup\n creation time by:\n - At least 24 hours\n\n This field only applies for hot backups. When creating or updating a\n standard backup, attempting to set this field will fail the request.",
          "type": "string"
        },
        "resourceID": {
          "description": "The BigtableBackup name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "sourceTableRef": {
          "description": "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed BigtableTable resource.",
              "type": "string"
            },
            "name": {
              "description": "The name of a BigtableInstance resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a BigtableInstance resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "BigtableBackupStatus defines the config connector machine state of BigtableBackup",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the BigtableBackup resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "encryptionInfo": {
              "description": "Output only. The encryption information for the backup.",
              "type": "object",
              "properties": {
                "encryptionStatus": {
                  "description": "Output only. The status of encrypt/decrypt calls on underlying data for this resource. Regardless of status, the existing data is always encrypted at rest.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].",
                      "type": "integer",
                      "format": "int32"
                    },
                    "details": {
                      "description": "A list of messages that carry the error details.  There is a common set of message types for APIs to use.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "typeURL": {
                            "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Must be a valid serialized protocol buffer of the above specified type.",
                            "type": "string",
                            "format": "byte"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "message": {
                      "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "encryptionType": {
                  "description": "Output only. The type of encryption used to protect this resource.",
                  "type": "string"
                },
                "kmsKeyVersion": {
                  "description": "Output only. The version of the Cloud KMS key specified in the parent cluster that is in use for the data underlying this table.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "endTime": {
              "description": "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp.",
              "type": "string"
            },
            "sizeBytes": {
              "description": "Output only. Size of the backup in bytes.",
              "type": "integer",
              "format": "int64"
            },
            "sourceBackup": {
              "description": "Output only. Name of the backup from which this backup was copied. If a backup is not created by copying a backup, this field will be empty. Values are of the form: projects/\u003cproject\u003e/instances/\u003cinstance\u003e/clusters/\u003ccluster\u003e/backups/\u003cbackup\u003e",
              "type": "string"
            },
            "startTime": {
              "description": "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the [CreateBackup][google.bigtable.admin.v2.BigtableTableAdmin.CreateBackup] request is received).  The row data in this backup will be no older than this timestamp.",
              "type": "string"
            },
            "state": {
              "description": "Output only. The current state of the backup.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
