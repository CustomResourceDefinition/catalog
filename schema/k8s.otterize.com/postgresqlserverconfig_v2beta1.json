{
  "description": "PostgreSQLServerConfig is the Schema for the databaseserverconfig API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PostgreSQLServerConfigSpec defines the desired state of PostgreSQLServerConfig",
      "type": "object",
      "required": [
        "address",
        "credentials"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "credentials": {
          "description": "DatabaseCredentials defines the credentials to access the database",
          "type": "object",
          "properties": {
            "password": {
              "description": "Password is the plaintext password to access the database",
              "type": "string"
            },
            "secretRef": {
              "description": "SecretRef is a reference to a k8s secret storing the credentials",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name is the name of he k8s secret storing the credentials",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace is the namespace in which the secret is stored.\nIf not provided, the operator will look for the secret in the same namespace as the database ServerConfig.",
                  "type": "string"
                },
                "passwordKey": {
                  "description": "PasswordKey is the key in the secret that stores the password",
                  "type": "string",
                  "default": "password"
                },
                "usernameKey": {
                  "description": "UsernameKey is the key in the secret that stores the username",
                  "type": "string",
                  "default": "username"
                }
              },
              "additionalProperties": false
            },
            "username": {
              "description": "Username is the plaintext username to access the database",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PostgreSQLServerConfigStatus defines the observed state of PostgreSQLServerConfig",
      "type": "object"
    }
  }
}
