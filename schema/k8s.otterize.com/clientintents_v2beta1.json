{
  "description": "ClientIntents is the Schema for the intents API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IntentsSpec defines the desired state of ClientIntents",
      "type": "object",
      "required": [
        "targets",
        "workload"
      ],
      "properties": {
        "targets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "aws": {
                "type": "object",
                "properties": {
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "arn": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "azure": {
                "type": "object",
                "properties": {
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dataActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "keyVaultPolicy": {
                    "type": "object",
                    "properties": {
                      "certificatePermissions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "all",
                            "backup",
                            "create",
                            "delete",
                            "deleteissuers",
                            "get",
                            "getissuers",
                            "import",
                            "list",
                            "listissuers",
                            "managecontacts",
                            "manageissuers",
                            "purge",
                            "recover",
                            "restore",
                            "setissuers",
                            "update"
                          ]
                        }
                      },
                      "keyPermissions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "all",
                            "backup",
                            "create",
                            "decrypt",
                            "delete",
                            "encrypt",
                            "get",
                            "getrotationpolicy",
                            "import",
                            "list",
                            "purge",
                            "recover",
                            "release",
                            "restore",
                            "rotate",
                            "setrotationpolicy",
                            "sign",
                            "unwrapkey",
                            "update",
                            "verify",
                            "wrapkey"
                          ]
                        }
                      },
                      "secretPermissions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "all",
                            "backup",
                            "delete",
                            "get",
                            "list",
                            "purge",
                            "recover",
                            "restore",
                            "set"
                          ]
                        }
                      },
                      "storagePermissions": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "all",
                            "backup",
                            "delete",
                            "deletesas",
                            "get",
                            "getsas",
                            "list",
                            "listsas",
                            "purge",
                            "recover",
                            "regeneratekey",
                            "restore",
                            "set",
                            "setsas",
                            "update"
                          ]
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "scope": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "gcp": {
                "type": "object",
                "properties": {
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resource": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "internet": {
                "type": "object",
                "properties": {
                  "domains": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ips": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ports": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "additionalProperties": false
              },
              "kafka": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "topics": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "operations"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "operations": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "all",
                              "consume",
                              "produce",
                              "create",
                              "alter",
                              "delete",
                              "describe",
                              "ClusterAction",
                              "DescribeConfigs",
                              "AlterConfigs",
                              "IdempotentWrite"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "kubernetes": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "http": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "methods",
                        "path"
                      ],
                      "properties": {
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "OPTIONS",
                              "TRACE",
                              "PATCH",
                              "CONNECT"
                            ]
                          }
                        },
                        "path": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "service": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "http": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "methods",
                        "path"
                      ],
                      "properties": {
                        "methods": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "DELETE",
                              "OPTIONS",
                              "TRACE",
                              "PATCH",
                              "CONNECT"
                            ]
                          }
                        },
                        "path": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "sql": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "privileges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "databaseName"
                      ],
                      "properties": {
                        "databaseName": {
                          "type": "string"
                        },
                        "operations": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "ALL",
                              "SELECT",
                              "INSERT",
                              "UPDATE",
                              "DELETE"
                            ]
                          }
                        },
                        "table": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "workload": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "kind": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "IntentsStatus defines the observed state of ClientIntents",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "description": "The last generation of the intents that was successfully reconciled.",
          "type": "integer",
          "format": "int64"
        },
        "resolvedIPs": {
          "description": "ResolvedIPs stores resolved IPs for a domain name - the network mapper populates it when DNS internetTarget is used",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dns": {
                "type": "string"
              },
              "ips": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "upToDate": {
          "description": "upToDate field reflects whether the client intents have successfully been applied\nto the cluster to the state specified",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
