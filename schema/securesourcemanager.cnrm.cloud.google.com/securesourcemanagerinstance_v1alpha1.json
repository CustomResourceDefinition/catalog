{
  "description": "SecureSourceManagerInstance is the Schema for the SecureSourceManagerInstance API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecureSourceManagerInstanceSpec defines the desired state of SecureSourceManagerInstance",
      "type": "object",
      "required": [
        "location",
        "projectRef"
      ],
      "properties": {
        "kmsKeyRef": {
          "description": "Optional. Immutable. Customer-managed encryption key name.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed KMSCryptoKey. Should be in the format `projects/[kms_project_id]/locations/[region]/keyRings/[key_ring_id]/cryptoKeys/[key]`.",
              "type": "string"
            },
            "name": {
              "description": "The `name` of a `KMSCryptoKey` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` of a `KMSCryptoKey` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "labels": {
          "description": "Optional. Labels as key value pairs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Immutable. Location of the instance.",
          "type": "string"
        },
        "privateConfig": {
          "description": "Optional. PrivateConfig includes settings for private instance.",
          "type": "object",
          "properties": {
            "caPoolRef": {
              "description": "Required. Immutable. CA pool resource, resource must in the format of `projects/{project}/locations/{location}/caPools/{ca_pool}`.",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "A reference to an externally managed PrivateCACAPool. Should be in the format `projects/{project_id}/locations/{region}/caPools/{caPool}`.",
                  "type": "string"
                },
                "name": {
                  "description": "The `name` of a `PrivateCACAPool` resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `namespace` of a `PrivateCACAPool` resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "isPrivate": {
              "description": "Required. Immutable. Indicate if it's private instance.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "Immutable. The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SecureSourceManagerInstanceStatus defines the config connector machine state of SecureSourceManagerInstance",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the SecureSourceManagerInstance resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "createTime": {
              "description": "Output only. Create timestamp.",
              "type": "string"
            },
            "hostConfig": {
              "description": "Output only. A list of hostnames for this instance.",
              "type": "object",
              "properties": {
                "api": {
                  "description": "Output only. API hostname. This is the hostname to use for **Host: Data Plane** endpoints.",
                  "type": "string"
                },
                "gitHTTP": {
                  "description": "Output only. Git HTTP hostname.",
                  "type": "string"
                },
                "gitSSH": {
                  "description": "Output only. Git SSH hostname.",
                  "type": "string"
                },
                "html": {
                  "description": "Output only. HTML hostname.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "privateConfig": {
              "description": "Optional. PrivateConfig includes settings for private instance.",
              "type": "object",
              "properties": {
                "httpServiceAttachment": {
                  "description": "Output only. Service Attachment for HTTP, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.",
                  "type": "string"
                },
                "sshServiceAttachment": {
                  "description": "Output only. Service Attachment for SSH, resource is in the format of `projects/{project}/regions/{region}/serviceAttachments/{service_attachment}`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "state": {
              "description": "Output only. Current state of the instance.",
              "type": "string"
            },
            "stateNote": {
              "description": "Output only. An optional field providing information about the current instance state.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. Update timestamp.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
