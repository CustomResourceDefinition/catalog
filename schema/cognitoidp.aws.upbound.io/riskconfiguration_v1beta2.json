{
  "description": "RiskConfiguration is the Schema for the RiskConfigurations API. Provides a Cognito Risk Configuration resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "RiskConfigurationSpec defines the desired state of RiskConfiguration",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "accountTakeoverRiskConfiguration": {
              "description": "The account takeover risk configuration. See details below.",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "Account takeover risk configuration actions. See details below.",
                  "type": "object",
                  "properties": {
                    "highAction": {
                      "description": "Action to take for a high risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "lowAction": {
                      "description": "Action to take for a low risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "mediumAction": {
                      "description": "Action to take for a medium risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "notifyConfiguration": {
                  "description": "The notify configuration used to construct email notifications. See details below.",
                  "type": "object",
                  "properties": {
                    "blockEmail": {
                      "description": "Email template used when a detected risk event is blocked. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "from": {
                      "description": "The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.",
                      "type": "string"
                    },
                    "mfaEmail": {
                      "description": "The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "noActionEmail": {
                      "description": "The email template used when a detected risk event is allowed. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "replyTo": {
                      "description": "The destination to which the receiver of an email should reply to.",
                      "type": "string"
                    },
                    "sourceArn": {
                      "description": "The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "clientId": {
              "description": "The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.",
              "type": "string"
            },
            "compromisedCredentialsRiskConfiguration": {
              "description": "The compromised credentials risk configuration. See details below.",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "The compromised credentials risk configuration actions. See details below.",
                  "type": "object",
                  "properties": {
                    "eventAction": {
                      "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "eventFilter": {
                  "description": "Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "riskExceptionConfiguration": {
              "description": "The configuration to override the risk decision. See details below.",
              "type": "object",
              "properties": {
                "blockedIpRangeList": {
                  "description": "Overrides the risk decision to always block the pre-authentication requests.\nThe IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.\nCan contain a maximum of 200 items.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "skippedIpRangeList": {
                  "description": "Risk detection isn't performed on the IP addresses in this range list.\nThe IP range is in CIDR notation.\nCan contain a maximum of 200 items.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "userPoolId": {
              "description": "The user pool ID.",
              "type": "string"
            },
            "userPoolIdRef": {
              "description": "Reference to a UserPool in cognitoidp to populate userPoolId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "userPoolIdSelector": {
              "description": "Selector for a UserPool in cognitoidp to populate userPoolId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "accountTakeoverRiskConfiguration": {
              "description": "The account takeover risk configuration. See details below.",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "Account takeover risk configuration actions. See details below.",
                  "type": "object",
                  "properties": {
                    "highAction": {
                      "description": "Action to take for a high risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "lowAction": {
                      "description": "Action to take for a low risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "mediumAction": {
                      "description": "Action to take for a medium risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "notifyConfiguration": {
                  "description": "The notify configuration used to construct email notifications. See details below.",
                  "type": "object",
                  "properties": {
                    "blockEmail": {
                      "description": "Email template used when a detected risk event is blocked. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "from": {
                      "description": "The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.",
                      "type": "string"
                    },
                    "mfaEmail": {
                      "description": "The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "noActionEmail": {
                      "description": "The email template used when a detected risk event is allowed. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "replyTo": {
                      "description": "The destination to which the receiver of an email should reply to.",
                      "type": "string"
                    },
                    "sourceArn": {
                      "description": "The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "clientId": {
              "description": "The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.",
              "type": "string"
            },
            "compromisedCredentialsRiskConfiguration": {
              "description": "The compromised credentials risk configuration. See details below.",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "The compromised credentials risk configuration actions. See details below.",
                  "type": "object",
                  "properties": {
                    "eventAction": {
                      "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "eventFilter": {
                  "description": "Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "riskExceptionConfiguration": {
              "description": "The configuration to override the risk decision. See details below.",
              "type": "object",
              "properties": {
                "blockedIpRangeList": {
                  "description": "Overrides the risk decision to always block the pre-authentication requests.\nThe IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.\nCan contain a maximum of 200 items.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "skippedIpRangeList": {
                  "description": "Risk detection isn't performed on the IP addresses in this range list.\nThe IP range is in CIDR notation.\nCan contain a maximum of 200 items.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "userPoolId": {
              "description": "The user pool ID.",
              "type": "string"
            },
            "userPoolIdRef": {
              "description": "Reference to a UserPool in cognitoidp to populate userPoolId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "userPoolIdSelector": {
              "description": "Selector for a UserPool in cognitoidp to populate userPoolId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "RiskConfigurationStatus defines the observed state of RiskConfiguration.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accountTakeoverRiskConfiguration": {
              "description": "The account takeover risk configuration. See details below.",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "Account takeover risk configuration actions. See details below.",
                  "type": "object",
                  "properties": {
                    "highAction": {
                      "description": "Action to take for a high risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "lowAction": {
                      "description": "Action to take for a low risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "mediumAction": {
                      "description": "Action to take for a medium risk. See action block below.",
                      "type": "object",
                      "properties": {
                        "eventAction": {
                          "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                          "type": "string"
                        },
                        "notify": {
                          "description": "Whether to send a notification.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "notifyConfiguration": {
                  "description": "The notify configuration used to construct email notifications. See details below.",
                  "type": "object",
                  "properties": {
                    "blockEmail": {
                      "description": "Email template used when a detected risk event is blocked. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "from": {
                      "description": "The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.",
                      "type": "string"
                    },
                    "mfaEmail": {
                      "description": "The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "noActionEmail": {
                      "description": "The email template used when a detected risk event is allowed. See notify email type below.",
                      "type": "object",
                      "properties": {
                        "htmlBody": {
                          "description": "The email HTML body.",
                          "type": "string"
                        },
                        "subject": {
                          "description": "The email subject.",
                          "type": "string"
                        },
                        "textBody": {
                          "description": "The email text body.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "replyTo": {
                      "description": "The destination to which the receiver of an email should reply to.",
                      "type": "string"
                    },
                    "sourceArn": {
                      "description": "The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "clientId": {
              "description": "The app client ID. When the client ID is not provided, the same risk configuration is applied to all the clients in the User Pool.",
              "type": "string"
            },
            "compromisedCredentialsRiskConfiguration": {
              "description": "The compromised credentials risk configuration. See details below.",
              "type": "object",
              "properties": {
                "actions": {
                  "description": "The compromised credentials risk configuration actions. See details below.",
                  "type": "object",
                  "properties": {
                    "eventAction": {
                      "description": "The action to take in response to the account takeover action. Valid values are BLOCK, MFA_IF_CONFIGURED, MFA_REQUIRED and NO_ACTION.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "eventFilter": {
                  "description": "Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are SIGN_IN, PASSWORD_CHANGE, and SIGN_UP.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "The user pool ID or the user pool ID and Client Id separated by a : if the configuration is client specific.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "riskExceptionConfiguration": {
              "description": "The configuration to override the risk decision. See details below.",
              "type": "object",
              "properties": {
                "blockedIpRangeList": {
                  "description": "Overrides the risk decision to always block the pre-authentication requests.\nThe IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.\nCan contain a maximum of 200 items.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "skippedIpRangeList": {
                  "description": "Risk detection isn't performed on the IP addresses in this range list.\nThe IP range is in CIDR notation.\nCan contain a maximum of 200 items.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "userPoolId": {
              "description": "The user pool ID.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
