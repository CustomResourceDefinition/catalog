{
  "description": "Composable represents a composable resource that can wrap any resource (native kubernetes or CRDs) to allow it to be dynamically configurable",
  "type": "object",
  "required": [
    "metadata",
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ComposableSpec defines the desired state of Composable",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "template": {
          "description": "Template defines the underlying object",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ComposableStatus defines the observed state of Composable",
      "type": "object",
      "properties": {
        "message": {
          "description": "Message - provides human readable explanation of the Composable status",
          "type": "string"
        },
        "state": {
          "description": "State shows the composable object state",
          "type": "string",
          "enum": [
            "Failed",
            "Pending",
            "Online"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
