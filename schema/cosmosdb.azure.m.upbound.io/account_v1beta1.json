{
  "description": "Account is the Schema for the Accounts API. Manages a CosmosDB (formally DocumentDB) Account.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AccountSpec defines the desired state of Account",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "accessKeyMetadataWritesEnabled": {
              "description": "Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to true.",
              "type": "boolean"
            },
            "analyticalStorage": {
              "description": "An analytical_storage block as defined below.",
              "type": "object",
              "properties": {
                "schemaType": {
                  "description": "The schema type of the Analytical Storage for this Cosmos DB account. Possible values are FullFidelity and WellDefined.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "analyticalStorageEnabled": {
              "description": "Enable Analytical Storage option for this Cosmos DB account. Defaults to false. Enabling and then disabling analytical storage forces a new resource to be created.",
              "type": "boolean"
            },
            "automaticFailoverEnabled": {
              "description": "Enable automatic failover for this Cosmos DB account.",
              "type": "boolean"
            },
            "backup": {
              "description": "A backup block as defined below.",
              "type": "object",
              "properties": {
                "intervalInMinutes": {
                  "description": "The interval in minutes between two backups. Possible values are between 60 and 1440. Defaults to 240.",
                  "type": "number"
                },
                "retentionInHours": {
                  "description": "The time in hours that each backup is retained. Possible values are between 8 and 720. Defaults to 8.",
                  "type": "number"
                },
                "storageRedundancy": {
                  "description": "The storage redundancy is used to indicate the type of backup residency. Possible values are Geo, Local and Zone. Defaults to Geo.",
                  "type": "string"
                },
                "tier": {
                  "description": "The continuous backup tier. Possible values are Continuous7Days and Continuous30Days.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the backup. Possible values are Continuous and Periodic.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "burstCapacityEnabled": {
              "description": "Enable burst capacity for this Cosmos DB account. Defaults to false.",
              "type": "boolean"
            },
            "capabilities": {
              "description": "The capabilities which should be enabled for this Cosmos DB account. Value is a capabilities block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The capability to enable - Possible values are AllowSelfServeUpgradeToMongo36, DeleteAllItemsByPartitionKey, DisableRateLimitingResponses, EnableAggregationPipeline, EnableCassandra, EnableGremlin, EnableMongo, EnableMongo16MBDocumentSupport, EnableMongoRetryableWrites, EnableMongoRoleBasedAccessControl, EnableNoSQLVectorSearch, EnableNoSQLFullTextSearch, EnablePartialUniqueIndex,  EnableServerless, EnableTable, EnableTtlOnCustomPath, EnableUniqueCompoundNestedDocs, MongoDBv3.4 and mongoEnableDocLevelTTL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "capacity": {
              "description": "A capacity block as defined below.",
              "type": "object",
              "properties": {
                "totalThroughputLimit": {
                  "description": "The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least -1. -1 means no limit.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "consistencyPolicy": {
              "description": "Specifies one consistency_policy block as defined below, used to define the consistency policy for this CosmosDB account.",
              "type": "object",
              "properties": {
                "consistencyLevel": {
                  "description": "The Consistency Level to use for this CosmosDB Account - can be either BoundedStaleness, Eventual, Session, Strong or ConsistentPrefix.",
                  "type": "string"
                },
                "maxIntervalInSeconds": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.",
                  "type": "number"
                },
                "maxStalenessPrefix": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is 10 â€“ 2147483647. Defaults to 100. Required when consistency_level is set to BoundedStaleness.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "corsRule": {
              "description": "A cors_rule block as defined below.",
              "type": "object",
              "properties": {
                "allowedHeaders": {
                  "description": "A list of headers that are allowed to be a part of the cross-origin request.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedMethods": {
                  "description": "A list of HTTP headers that are allowed to be executed by the origin. Valid options are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedOrigins": {
                  "description": "A list of origin domains that will be allowed by CORS.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exposedHeaders": {
                  "description": "A list of response headers that are exposed to CORS clients.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "maxAgeInSeconds": {
                  "description": "The number of seconds the client should cache a preflight response. Possible values are between 1 and 2147483647.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "createMode": {
              "description": "The creation mode for the CosmosDB Account. Possible values are Default and Restore. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "defaultIdentityType": {
              "description": "The default identity for accessing Key Vault. Possible values are FirstPartyIdentity, SystemAssignedIdentity or UserAssignedIdentity. Defaults to FirstPartyIdentity.",
              "type": "string"
            },
            "freeTierEnabled": {
              "description": "Enable the Free Tier pricing option for this Cosmos DB account. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "geoLocation": {
              "description": "Specifies a geo_location resource, used to define where data should be replicated with the failover_priority 0 specifying the primary location. Value is a geo_location block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority 0.",
                    "type": "number"
                  },
                  "location": {
                    "description": "The name of the Azure region to host replicated data.",
                    "type": "string"
                  },
                  "zoneRedundant": {
                    "description": "Should zone redundancy be enabled for this region? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "identityIdsRefs": {
                  "description": "References to UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "array",
                  "items": {
                    "description": "A NamespacedReference to a named object.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "identityIdsSelector": {
                  "description": "Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "description": "The Type of Managed Identity assigned to this Cosmos account. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ipRangeFilter": {
              "description": "A set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. For example [\"55.0.1.0/24\", \"55.0.2.0/24\"].",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "isVirtualNetworkFilterEnabled": {
              "description": "Enables virtual network filtering for this Cosmos DB account.",
              "type": "boolean"
            },
            "keyVaultKeyId": {
              "description": "A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "kind": {
              "description": "Specifies the Kind of CosmosDB to create - possible values are GlobalDocumentDB, MongoDB and Parse. Defaults to GlobalDocumentDB. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "localAuthenticationDisabled": {
              "description": "Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to false. Can be set only when using the SQL API.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "managedHsmKeyId": {
              "description": "A versionless Managed HSM Key ID for CMK encryption. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "minimalTlsVersion": {
              "description": "Specifies the minimal TLS version for the CosmosDB account. Possible values are: Tls, Tls11, and Tls12. Defaults to Tls12.",
              "type": "string"
            },
            "mongoServerVersion": {
              "description": "The Server Version of a MongoDB account. Possible values are 7.0, 6.0, 5.0, 4.2, 4.0, 3.6, and 3.2.",
              "type": "string"
            },
            "multipleWriteLocationsEnabled": {
              "description": "Enable multiple write locations for this Cosmos DB account.",
              "type": "boolean"
            },
            "networkAclBypassForAzureServices": {
              "description": "If Azure services can bypass ACLs. Defaults to false.",
              "type": "boolean"
            },
            "networkAclBypassIds": {
              "description": "The list of resource Ids for Network Acl Bypass for this Cosmos DB account.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "offerType": {
              "description": "Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to Standard.",
              "type": "string"
            },
            "partitionMergeEnabled": {
              "description": "Is partition merge on the Cosmos DB account enabled? Defaults to false.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether or not public network access is allowed for this CosmosDB account. Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "restore": {
              "description": "A restore block as defined below.",
              "type": "object",
              "properties": {
                "database": {
                  "description": "A database block as defined below. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collectionNames": {
                        "description": "A list of the collection names for the restore request. Changing this forces a new resource to be created.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "name": {
                        "description": "Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "gremlinDatabase": {
                  "description": "One or more gremlin_database blocks as defined below. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "graphNames": {
                        "description": "A list of the Graph names for the restore request. Changing this forces a new resource to be created.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "restoreTimestampInUtc": {
                  "description": "The creation time of the database or the collection (Datetime Format RFC 3339). Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sourceCosmosdbAccountId": {
                  "description": "The resource ID of the restorable database account from which the restore has to be initiated. The example is /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sourceCosmosdbAccountIdRef": {
                  "description": "Reference to a Account in cosmosdb to populate sourceCosmosdbAccountId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sourceCosmosdbAccountIdSelector": {
                  "description": "Selector for a Account in cosmosdb to populate sourceCosmosdbAccountId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "tablesToRestore": {
                  "description": "A list of specific tables available for restore. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkRule": {
              "description": "Specifies a virtual_network_rule block as defined below, used to define which subnets are allowed to access this CosmosDB account.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the virtual network subnet.",
                    "type": "string"
                  },
                  "ignoreMissingVnetServiceEndpoint": {
                    "description": "If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "accessKeyMetadataWritesEnabled": {
              "description": "Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to true.",
              "type": "boolean"
            },
            "analyticalStorage": {
              "description": "An analytical_storage block as defined below.",
              "type": "object",
              "properties": {
                "schemaType": {
                  "description": "The schema type of the Analytical Storage for this Cosmos DB account. Possible values are FullFidelity and WellDefined.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "analyticalStorageEnabled": {
              "description": "Enable Analytical Storage option for this Cosmos DB account. Defaults to false. Enabling and then disabling analytical storage forces a new resource to be created.",
              "type": "boolean"
            },
            "automaticFailoverEnabled": {
              "description": "Enable automatic failover for this Cosmos DB account.",
              "type": "boolean"
            },
            "backup": {
              "description": "A backup block as defined below.",
              "type": "object",
              "properties": {
                "intervalInMinutes": {
                  "description": "The interval in minutes between two backups. Possible values are between 60 and 1440. Defaults to 240.",
                  "type": "number"
                },
                "retentionInHours": {
                  "description": "The time in hours that each backup is retained. Possible values are between 8 and 720. Defaults to 8.",
                  "type": "number"
                },
                "storageRedundancy": {
                  "description": "The storage redundancy is used to indicate the type of backup residency. Possible values are Geo, Local and Zone. Defaults to Geo.",
                  "type": "string"
                },
                "tier": {
                  "description": "The continuous backup tier. Possible values are Continuous7Days and Continuous30Days.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the backup. Possible values are Continuous and Periodic.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "burstCapacityEnabled": {
              "description": "Enable burst capacity for this Cosmos DB account. Defaults to false.",
              "type": "boolean"
            },
            "capabilities": {
              "description": "The capabilities which should be enabled for this Cosmos DB account. Value is a capabilities block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The capability to enable - Possible values are AllowSelfServeUpgradeToMongo36, DeleteAllItemsByPartitionKey, DisableRateLimitingResponses, EnableAggregationPipeline, EnableCassandra, EnableGremlin, EnableMongo, EnableMongo16MBDocumentSupport, EnableMongoRetryableWrites, EnableMongoRoleBasedAccessControl, EnableNoSQLVectorSearch, EnableNoSQLFullTextSearch, EnablePartialUniqueIndex,  EnableServerless, EnableTable, EnableTtlOnCustomPath, EnableUniqueCompoundNestedDocs, MongoDBv3.4 and mongoEnableDocLevelTTL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "capacity": {
              "description": "A capacity block as defined below.",
              "type": "object",
              "properties": {
                "totalThroughputLimit": {
                  "description": "The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least -1. -1 means no limit.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "consistencyPolicy": {
              "description": "Specifies one consistency_policy block as defined below, used to define the consistency policy for this CosmosDB account.",
              "type": "object",
              "properties": {
                "consistencyLevel": {
                  "description": "The Consistency Level to use for this CosmosDB Account - can be either BoundedStaleness, Eventual, Session, Strong or ConsistentPrefix.",
                  "type": "string"
                },
                "maxIntervalInSeconds": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.",
                  "type": "number"
                },
                "maxStalenessPrefix": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is 10 â€“ 2147483647. Defaults to 100. Required when consistency_level is set to BoundedStaleness.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "corsRule": {
              "description": "A cors_rule block as defined below.",
              "type": "object",
              "properties": {
                "allowedHeaders": {
                  "description": "A list of headers that are allowed to be a part of the cross-origin request.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedMethods": {
                  "description": "A list of HTTP headers that are allowed to be executed by the origin. Valid options are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedOrigins": {
                  "description": "A list of origin domains that will be allowed by CORS.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exposedHeaders": {
                  "description": "A list of response headers that are exposed to CORS clients.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "maxAgeInSeconds": {
                  "description": "The number of seconds the client should cache a preflight response. Possible values are between 1 and 2147483647.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "createMode": {
              "description": "The creation mode for the CosmosDB Account. Possible values are Default and Restore. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "defaultIdentityType": {
              "description": "The default identity for accessing Key Vault. Possible values are FirstPartyIdentity, SystemAssignedIdentity or UserAssignedIdentity. Defaults to FirstPartyIdentity.",
              "type": "string"
            },
            "freeTierEnabled": {
              "description": "Enable the Free Tier pricing option for this Cosmos DB account. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "geoLocation": {
              "description": "Specifies a geo_location resource, used to define where data should be replicated with the failover_priority 0 specifying the primary location. Value is a geo_location block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority 0.",
                    "type": "number"
                  },
                  "location": {
                    "description": "The name of the Azure region to host replicated data.",
                    "type": "string"
                  },
                  "zoneRedundant": {
                    "description": "Should zone redundancy be enabled for this region? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "identityIdsRefs": {
                  "description": "References to UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "array",
                  "items": {
                    "description": "A NamespacedReference to a named object.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "identityIdsSelector": {
                  "description": "Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "description": "The Type of Managed Identity assigned to this Cosmos account. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ipRangeFilter": {
              "description": "A set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. For example [\"55.0.1.0/24\", \"55.0.2.0/24\"].",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "isVirtualNetworkFilterEnabled": {
              "description": "Enables virtual network filtering for this Cosmos DB account.",
              "type": "boolean"
            },
            "keyVaultKeyId": {
              "description": "A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "kind": {
              "description": "Specifies the Kind of CosmosDB to create - possible values are GlobalDocumentDB, MongoDB and Parse. Defaults to GlobalDocumentDB. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "localAuthenticationDisabled": {
              "description": "Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to false. Can be set only when using the SQL API.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "managedHsmKeyId": {
              "description": "A versionless Managed HSM Key ID for CMK encryption. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "minimalTlsVersion": {
              "description": "Specifies the minimal TLS version for the CosmosDB account. Possible values are: Tls, Tls11, and Tls12. Defaults to Tls12.",
              "type": "string"
            },
            "mongoServerVersion": {
              "description": "The Server Version of a MongoDB account. Possible values are 7.0, 6.0, 5.0, 4.2, 4.0, 3.6, and 3.2.",
              "type": "string"
            },
            "multipleWriteLocationsEnabled": {
              "description": "Enable multiple write locations for this Cosmos DB account.",
              "type": "boolean"
            },
            "networkAclBypassForAzureServices": {
              "description": "If Azure services can bypass ACLs. Defaults to false.",
              "type": "boolean"
            },
            "networkAclBypassIds": {
              "description": "The list of resource Ids for Network Acl Bypass for this Cosmos DB account.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "offerType": {
              "description": "Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to Standard.",
              "type": "string"
            },
            "partitionMergeEnabled": {
              "description": "Is partition merge on the Cosmos DB account enabled? Defaults to false.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether or not public network access is allowed for this CosmosDB account. Defaults to true.",
              "type": "boolean"
            },
            "restore": {
              "description": "A restore block as defined below.",
              "type": "object",
              "properties": {
                "database": {
                  "description": "A database block as defined below. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collectionNames": {
                        "description": "A list of the collection names for the restore request. Changing this forces a new resource to be created.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "name": {
                        "description": "Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "gremlinDatabase": {
                  "description": "One or more gremlin_database blocks as defined below. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "graphNames": {
                        "description": "A list of the Graph names for the restore request. Changing this forces a new resource to be created.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "restoreTimestampInUtc": {
                  "description": "The creation time of the database or the collection (Datetime Format RFC 3339). Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sourceCosmosdbAccountId": {
                  "description": "The resource ID of the restorable database account from which the restore has to be initiated. The example is /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sourceCosmosdbAccountIdRef": {
                  "description": "Reference to a Account in cosmosdb to populate sourceCosmosdbAccountId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sourceCosmosdbAccountIdSelector": {
                  "description": "Selector for a Account in cosmosdb to populate sourceCosmosdbAccountId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "tablesToRestore": {
                  "description": "A list of specific tables available for restore. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkRule": {
              "description": "Specifies a virtual_network_rule block as defined below, used to define which subnets are allowed to access this CosmosDB account.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the virtual network subnet.",
                    "type": "string"
                  },
                  "ignoreMissingVnetServiceEndpoint": {
                    "description": "If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.consistencyPolicy) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.consistencyPolicy))",
          "message": "spec.forProvider.consistencyPolicy is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.geoLocation) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.geoLocation))",
          "message": "spec.forProvider.geoLocation is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.offerType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.offerType))",
          "message": "spec.forProvider.offerType is a required parameter"
        }
      ]
    },
    "status": {
      "description": "AccountStatus defines the observed state of Account.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accessKeyMetadataWritesEnabled": {
              "description": "Is write operations on metadata resources (databases, containers, throughput) via account keys enabled? Defaults to true.",
              "type": "boolean"
            },
            "analyticalStorage": {
              "description": "An analytical_storage block as defined below.",
              "type": "object",
              "properties": {
                "schemaType": {
                  "description": "The schema type of the Analytical Storage for this Cosmos DB account. Possible values are FullFidelity and WellDefined.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "analyticalStorageEnabled": {
              "description": "Enable Analytical Storage option for this Cosmos DB account. Defaults to false. Enabling and then disabling analytical storage forces a new resource to be created.",
              "type": "boolean"
            },
            "automaticFailoverEnabled": {
              "description": "Enable automatic failover for this Cosmos DB account.",
              "type": "boolean"
            },
            "backup": {
              "description": "A backup block as defined below.",
              "type": "object",
              "properties": {
                "intervalInMinutes": {
                  "description": "The interval in minutes between two backups. Possible values are between 60 and 1440. Defaults to 240.",
                  "type": "number"
                },
                "retentionInHours": {
                  "description": "The time in hours that each backup is retained. Possible values are between 8 and 720. Defaults to 8.",
                  "type": "number"
                },
                "storageRedundancy": {
                  "description": "The storage redundancy is used to indicate the type of backup residency. Possible values are Geo, Local and Zone. Defaults to Geo.",
                  "type": "string"
                },
                "tier": {
                  "description": "The continuous backup tier. Possible values are Continuous7Days and Continuous30Days.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the backup. Possible values are Continuous and Periodic.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "burstCapacityEnabled": {
              "description": "Enable burst capacity for this Cosmos DB account. Defaults to false.",
              "type": "boolean"
            },
            "capabilities": {
              "description": "The capabilities which should be enabled for this Cosmos DB account. Value is a capabilities block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The capability to enable - Possible values are AllowSelfServeUpgradeToMongo36, DeleteAllItemsByPartitionKey, DisableRateLimitingResponses, EnableAggregationPipeline, EnableCassandra, EnableGremlin, EnableMongo, EnableMongo16MBDocumentSupport, EnableMongoRetryableWrites, EnableMongoRoleBasedAccessControl, EnableNoSQLVectorSearch, EnableNoSQLFullTextSearch, EnablePartialUniqueIndex,  EnableServerless, EnableTable, EnableTtlOnCustomPath, EnableUniqueCompoundNestedDocs, MongoDBv3.4 and mongoEnableDocLevelTTL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "capacity": {
              "description": "A capacity block as defined below.",
              "type": "object",
              "properties": {
                "totalThroughputLimit": {
                  "description": "The total throughput limit imposed on this Cosmos DB account (RU/s). Possible values are at least -1. -1 means no limit.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "consistencyPolicy": {
              "description": "Specifies one consistency_policy block as defined below, used to define the consistency policy for this CosmosDB account.",
              "type": "object",
              "properties": {
                "consistencyLevel": {
                  "description": "The Consistency Level to use for this CosmosDB Account - can be either BoundedStaleness, Eventual, Session, Strong or ConsistentPrefix.",
                  "type": "string"
                },
                "maxIntervalInSeconds": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is 5 - 86400 (1 day). Defaults to 5. Required when consistency_level is set to BoundedStaleness.",
                  "type": "number"
                },
                "maxStalenessPrefix": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is 10 â€“ 2147483647. Defaults to 100. Required when consistency_level is set to BoundedStaleness.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "corsRule": {
              "description": "A cors_rule block as defined below.",
              "type": "object",
              "properties": {
                "allowedHeaders": {
                  "description": "A list of headers that are allowed to be a part of the cross-origin request.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedMethods": {
                  "description": "A list of HTTP headers that are allowed to be executed by the origin. Valid options are DELETE, GET, HEAD, MERGE, POST, OPTIONS, PUT or PATCH.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedOrigins": {
                  "description": "A list of origin domains that will be allowed by CORS.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exposedHeaders": {
                  "description": "A list of response headers that are exposed to CORS clients.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "maxAgeInSeconds": {
                  "description": "The number of seconds the client should cache a preflight response. Possible values are between 1 and 2147483647.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "createMode": {
              "description": "The creation mode for the CosmosDB Account. Possible values are Default and Restore. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "defaultIdentityType": {
              "description": "The default identity for accessing Key Vault. Possible values are FirstPartyIdentity, SystemAssignedIdentity or UserAssignedIdentity. Defaults to FirstPartyIdentity.",
              "type": "string"
            },
            "endpoint": {
              "description": "The endpoint used to connect to the CosmosDB account.",
              "type": "string"
            },
            "freeTierEnabled": {
              "description": "Enable the Free Tier pricing option for this Cosmos DB account. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "geoLocation": {
              "description": "Specifies a geo_location resource, used to define where data should be replicated with the failover_priority 0 specifying the primary location. Value is a geo_location block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority 0.",
                    "type": "number"
                  },
                  "id": {
                    "description": "The ID of the virtual network subnet.",
                    "type": "string"
                  },
                  "location": {
                    "description": "The name of the Azure region to host replicated data.",
                    "type": "string"
                  },
                  "zoneRedundant": {
                    "description": "Should zone redundancy be enabled for this region? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "The CosmosDB Account ID.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Cosmos Account.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "principalId": {
                  "description": "The Principal ID associated with this Managed Service Identity.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The Tenant ID associated with this Managed Service Identity.",
                  "type": "string"
                },
                "type": {
                  "description": "The Type of Managed Identity assigned to this Cosmos account. Possible values are SystemAssigned, UserAssigned and SystemAssigned, UserAssigned.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ipRangeFilter": {
              "description": "A set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. For example [\"55.0.1.0/24\", \"55.0.2.0/24\"].",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "isVirtualNetworkFilterEnabled": {
              "description": "Enables virtual network filtering for this Cosmos DB account.",
              "type": "boolean"
            },
            "keyVaultKeyId": {
              "description": "A versionless Key Vault Key ID for CMK encryption. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "kind": {
              "description": "Specifies the Kind of CosmosDB to create - possible values are GlobalDocumentDB, MongoDB and Parse. Defaults to GlobalDocumentDB. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "localAuthenticationDisabled": {
              "description": "Disable local authentication and ensure only MSI and AAD can be used exclusively for authentication. Defaults to false. Can be set only when using the SQL API.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "managedHsmKeyId": {
              "description": "A versionless Managed HSM Key ID for CMK encryption. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "minimalTlsVersion": {
              "description": "Specifies the minimal TLS version for the CosmosDB account. Possible values are: Tls, Tls11, and Tls12. Defaults to Tls12.",
              "type": "string"
            },
            "mongoServerVersion": {
              "description": "The Server Version of a MongoDB account. Possible values are 7.0, 6.0, 5.0, 4.2, 4.0, 3.6, and 3.2.",
              "type": "string"
            },
            "multipleWriteLocationsEnabled": {
              "description": "Enable multiple write locations for this Cosmos DB account.",
              "type": "boolean"
            },
            "networkAclBypassForAzureServices": {
              "description": "If Azure services can bypass ACLs. Defaults to false.",
              "type": "boolean"
            },
            "networkAclBypassIds": {
              "description": "The list of resource Ids for Network Acl Bypass for this Cosmos DB account.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "offerType": {
              "description": "Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to Standard.",
              "type": "string"
            },
            "partitionMergeEnabled": {
              "description": "Is partition merge on the Cosmos DB account enabled? Defaults to false.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether or not public network access is allowed for this CosmosDB account. Defaults to true.",
              "type": "boolean"
            },
            "readEndpoints": {
              "description": "A list of read endpoints available for this CosmosDB account.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "restore": {
              "description": "A restore block as defined below.",
              "type": "object",
              "properties": {
                "database": {
                  "description": "A database block as defined below. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "collectionNames": {
                        "description": "A list of the collection names for the restore request. Changing this forces a new resource to be created.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "name": {
                        "description": "Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "gremlinDatabase": {
                  "description": "One or more gremlin_database blocks as defined below. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "graphNames": {
                        "description": "A list of the Graph names for the restore request. Changing this forces a new resource to be created.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "name": {
                        "description": "Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "restoreTimestampInUtc": {
                  "description": "The creation time of the database or the collection (Datetime Format RFC 3339). Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sourceCosmosdbAccountId": {
                  "description": "The resource ID of the restorable database account from which the restore has to be initiated. The example is /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "tablesToRestore": {
                  "description": "A list of specific tables available for restore. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkRule": {
              "description": "Specifies a virtual_network_rule block as defined below, used to define which subnets are allowed to access this CosmosDB account.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the virtual network subnet.",
                    "type": "string"
                  },
                  "ignoreMissingVnetServiceEndpoint": {
                    "description": "If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "writeEndpoints": {
              "description": "A list of write endpoints available for this CosmosDB account.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
