{
  "description": "DomainName is the Schema for the DomainNames API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DomainNameSpec defines the desired state of DomainName.\n\nRepresents a domain name.",
      "type": "object",
      "required": [
        "domainName"
      ],
      "properties": {
        "domainName": {
          "description": "The domain name.",
          "type": "string"
        },
        "domainNameConfigurations": {
          "description": "The domain name configurations.",
          "type": "array",
          "items": {
            "description": "The domain name configuration.",
            "type": "object",
            "properties": {
              "certificateARN": {
                "description": "Represents an Amazon Resource Name (ARN).",
                "type": "string"
              },
              "certificateName": {
                "description": "A string with a length between [1-128].",
                "type": "string"
              },
              "endpointType": {
                "description": "Represents an endpoint type.",
                "type": "string"
              },
              "ownershipVerificationCertificateARN": {
                "description": "Represents an Amazon Resource Name (ARN).",
                "type": "string"
              },
              "securityPolicy": {
                "description": "The Transport Layer Security (TLS) version of the security policy for this\ndomain name. The valid values are TLS_1_0 and TLS_1_2.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "mutualTLSAuthentication": {
          "description": "The mutual TLS authentication configuration for a custom domain name.",
          "type": "object",
          "properties": {
            "truststoreURI": {
              "description": "A string representation of a URI with a length between [1-2048].",
              "type": "string"
            },
            "truststoreVersion": {
              "description": "A string with a length between [1-64].",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "tags": {
          "description": "The collection of tags associated with a domain name.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DomainNameStatus defines the observed state of DomainName",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "apiMappingSelectionExpression": {
          "description": "The API mapping selection expression.",
          "type": "string"
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
