{
  "description": "Configuration is the Schema for the configurations API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ConfigurationSpec defines the desired state of Configuration",
      "type": "object",
      "properties": {
        "JSON": {
          "description": "JSON is the Terraform JSON syntax configuration. Deprecated: after v0.3.1, use HCL instead.",
          "type": "string"
        },
        "backend": {
          "description": "Backend stores the state in a Kubernetes secret with locking done using a Lease resource. TODO(zzxwill) If a backend exists in HCL/JSON, this can be optional. Currently, if Backend is not set by users, it still will set by the controller, ignoring the settings in HCL/JSON backend",
          "type": "object",
          "properties": {
            "inClusterConfig": {
              "description": "InClusterConfig Used to authenticate to the cluster from inside a pod. Only `true` is allowed",
              "type": "boolean"
            },
            "secretSuffix": {
              "description": "SecretSuffix used when creating secrets. Secrets will be named in the format: tfstate-{workspace}-{secretSuffix}",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "deleteResource": {
          "description": "DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted",
          "type": "boolean",
          "default": true
        },
        "gitCredentialsSecretReference": {
          "description": "GitCredentialsSecretReference specifies the reference to the secret containing the git credentials",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "hcl": {
          "description": "HCL is the Terraform HCL type configuration",
          "type": "string"
        },
        "path": {
          "description": "Path is the sub-directory of remote git repository.",
          "type": "string"
        },
        "providerRef": {
          "description": "ProviderReference specifies the reference to Provider",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referenced object.",
              "type": "string",
              "default": "default"
            }
          },
          "additionalProperties": false
        },
        "region": {
          "description": "Region is cloud provider's region. It will override the region in the region field of ProviderReference",
          "type": "string"
        },
        "remote": {
          "description": "Remote is a git repo which contains hcl files. Currently, only public git repos are supported.",
          "type": "string"
        },
        "terraformCredentialsHelperConfigMapReference": {
          "description": "TerraformCredentialsHelperConfigMapReference specifies the reference to a configmap containing the terraform registry credentials helper",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "terraformCredentialsSecretReference": {
          "description": "TerraformCredentialsSecretReference specifies the reference to the secret containing the terraform credentials",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "terraformRCConfigMapReference": {
          "description": "TerraformRCConfigMapReference specifies the reference to a config map containing the terraform registry configuration",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "variable": {
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ConfigurationStatus defines the observed state of Configuration",
      "type": "object",
      "properties": {
        "apply": {
          "description": "ConfigurationApplyStatus is the status for Configuration apply",
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            },
            "outputs": {
              "type": "object",
              "additionalProperties": {
                "description": "Property is the property for an output",
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            "state": {
              "description": "A ConfigurationState represents the status of a resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "destroy": {
          "description": "ConfigurationDestroyStatus is the status for Configuration destroy",
          "type": "object",
          "properties": {
            "message": {
              "type": "string"
            },
            "state": {
              "description": "A ConfigurationState represents the status of a resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this Configuration. It corresponds to the Configuration's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
