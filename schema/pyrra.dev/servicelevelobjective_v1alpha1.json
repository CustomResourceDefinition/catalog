{
  "description": "ServiceLevelObjective is the Schema for the ServiceLevelObjectives API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ServiceLevelObjectiveSpec defines the desired state of ServiceLevelObjective.",
      "type": "object",
      "required": [
        "indicator",
        "target",
        "window"
      ],
      "properties": {
        "alerting": {
          "description": "Alerting customizes the alerting rules generated by Pyrra.",
          "type": "object",
          "properties": {
            "absent": {
              "type": "boolean",
              "default": true
            },
            "absentName": {
              "description": "AbsentName is used as the name of the absent alert generated by Pyrra. Defaults to \"SLOMetricAbsent\".",
              "type": "string"
            },
            "burnrates": {
              "type": "boolean",
              "default": true
            },
            "disabled": {
              "description": "Disabled is used to disable the generation of alerts. Recording rules are still generated.",
              "type": "boolean"
            },
            "name": {
              "description": "Name is used as the name of the alert generated by Pyrra. Defaults to \"ErrorBudgetBurn\".",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "description": {
          "description": "Description describes the ServiceLevelObjective in more detail and\ngives extra context for engineers that might not directly work on the service.",
          "type": "string"
        },
        "indicator": {
          "description": "ServiceLevelIndicator is the underlying data source that indicates how the service is doing.\nThis will be a Prometheus metric with specific selectors for your service.",
          "type": "object",
          "properties": {
            "bool_gauge": {
              "description": "BoolGauge is the indicator that measures whether a boolean gauge is\nsuccessful.",
              "type": "object",
              "required": [
                "metric"
              ],
              "properties": {
                "grouping": {
                  "description": "Total is the metric that returns how many requests there are in total.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "metric": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "latency": {
              "description": "Latency is the indicator that measures a certain percentage to be faster than the expected latency.",
              "type": "object",
              "required": [
                "success",
                "total"
              ],
              "properties": {
                "grouping": {
                  "description": "Grouping allows an SLO to be defined for many SLI at once, like HTTP handlers for example.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "success": {
                  "description": "Success is the metric that returns how many errors there are.",
                  "type": "object",
                  "required": [
                    "metric"
                  ],
                  "properties": {
                    "metric": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "total": {
                  "description": "Total is the metric that returns how many requests there are in total.",
                  "type": "object",
                  "required": [
                    "metric"
                  ],
                  "properties": {
                    "metric": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "latencyNative": {
              "description": "LatencyNative is the indicator that measures a certain percentage to be faster than the expected latency.\nThis uses the new native histograms in Prometheus.",
              "type": "object",
              "required": [
                "latency",
                "total"
              ],
              "properties": {
                "grouping": {
                  "description": "Grouping allows an SLO to be defined for many SLI at once, like HTTP handlers for example.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "latency": {
                  "description": "Latency the requests should be faster than.",
                  "type": "string"
                },
                "total": {
                  "description": "Total is the metric that returns how many requests there are in total.",
                  "type": "object",
                  "required": [
                    "metric"
                  ],
                  "properties": {
                    "metric": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "ratio": {
              "description": "Ratio is the indicator that measures against errors / total events.",
              "type": "object",
              "required": [
                "errors",
                "total"
              ],
              "properties": {
                "errors": {
                  "description": "Errors is the metric that returns how many errors there are.",
                  "type": "object",
                  "required": [
                    "metric"
                  ],
                  "properties": {
                    "metric": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "grouping": {
                  "description": "Grouping allows an SLO to be defined for many SLI at once, like HTTP handlers for example.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "total": {
                  "description": "Total is the metric that returns how many requests there are in total.",
                  "type": "object",
                  "required": [
                    "metric"
                  ],
                  "properties": {
                    "metric": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "target": {
          "description": "Target is a string that's casted to a float64 between 0 - 100.\nIt represents the desired availability of the service in the given window.\nfloat64 are not supported: https://github.com/kubernetes-sigs/controller-tools/issues/245",
          "type": "string"
        },
        "window": {
          "description": "Window within which the Target is supposed to be kept. Usually something like 1d, 7d or 28d.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ServiceLevelObjectiveStatus defines the observed state of ServiceLevelObjective.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type is the generated resource type, like PrometheusRule or ConfigMap",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
