{
  "description": "MetastoreService is the Schema for the MetastoreService API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MetastoreServiceSpec defines the desired state of MetastoreService",
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "databaseType": {
          "description": "Immutable. The database type that the Metastore service stores its data.",
          "type": "string",
          "enum": [
            "MYSQL",
            "SPANNER"
          ]
        },
        "encryptionConfig": {
          "description": "Immutable. Information used to configure the Dataproc Metastore service to encrypt customer data at rest. Cannot be updated.",
          "type": "object",
          "properties": {
            "kmsKeyRef": {
              "description": "The fully qualified customer provided Cloud KMS key name to use for customer data encryption",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "A reference to an externally managed KMSCryptoKey. Should be in the format `projects/[kms_project_id]/locations/[region]/keyRings/[key_ring_id]/cryptoKeys/[key]`.",
                  "type": "string"
                },
                "name": {
                  "description": "The `name` of a `KMSCryptoKey` resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `namespace` of a `KMSCryptoKey` resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "hiveMetastoreConfig": {
          "description": "Configuration information specific to running Hive metastore software as the metastore service.",
          "type": "object",
          "properties": {
            "configOverrides": {
              "description": "A mapping of Hive metastore configuration key-value pairs to apply to the Hive metastore (configured in `hive-site.xml`). The mappings override system defaults (some keys cannot be overridden). These overrides are also applied to auxiliary versions and can be further customized in the auxiliary version's `AuxiliaryVersionConfig`.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "endpointProtocol": {
              "description": "The protocol to use for the metastore service endpoint. If unspecified, defaults to `THRIFT`.",
              "type": "string"
            },
            "kerberosConfig": {
              "description": "Information used to configure the Hive metastore service as a service principal in a Kerberos realm. To disable Kerberos, use the `UpdateService` method and specify this field's path (`hive_metastore_config.kerberos_config`) in the request's `update_mask` while omitting this field from the request's `service`.",
              "type": "object",
              "properties": {
                "keytab": {
                  "description": "A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "description": "The relative resource name of a Secret Manager secret version",
                      "type": "object",
                      "oneOf": [
                        {
                          "required": [
                            "name"
                          ],
                          "not": {
                            "required": [
                              "external"
                            ]
                          }
                        },
                        {
                          "required": [
                            "external"
                          ],
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "name"
                                ]
                              },
                              {
                                "required": [
                                  "namespace"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "properties": {
                        "external": {
                          "description": "A reference to an externally managed SecretManagerSecret resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/secrets/{{secretID}}\".",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of a SecretManagerSecret resource.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "The namespace of a SecretManagerSecret resource.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "krb5ConfigGCSURI": {
                  "description": "A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form `gs://{bucket_name}/path/to/krb5.conf`, although the file does not need to be named krb5.conf explicitly.",
                  "type": "string"
                },
                "principal": {
                  "description": "A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form `primary/instance@REALM`, but there is no exact format.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "version": {
              "description": "Immutable. The Hive metastore schema version.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "labels": {
          "description": "User-defined labels for the metastore service.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "maintenanceWindow": {
          "description": "The one hour maintenance window of the metastore service. This specifies when the service can be restarted for maintenance purposes in UTC time. Maintenance window is not needed for services with the SPANNER database type.",
          "type": "object",
          "properties": {
            "dayOfWeek": {
              "description": "The day of week, when the window starts.",
              "type": "string"
            },
            "hourOfDay": {
              "description": "The hour of day (0-23) when the window starts.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The int32 value.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "networkConfig": {
          "description": "The configuration specifying the network settings for the Dataproc Metastore service.",
          "type": "object",
          "properties": {
            "consumers": {
              "description": "Immutable. The consumer-side network configuration for the Dataproc Metastore instance.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "subnetworkRef": {
                    "description": "Immutable. The subnetwork of the customer project from which an IP address is reserved and used as the Dataproc Metastore service's endpoint. It is accessible to hosts in the subnet and to all hosts in a subnet in the same region and same network. There must be at least one IP address available in the subnet's primary range.",
                    "type": "object",
                    "oneOf": [
                      {
                        "required": [
                          "name"
                        ],
                        "not": {
                          "required": [
                            "external"
                          ]
                        }
                      },
                      {
                        "required": [
                          "external"
                        ],
                        "not": {
                          "anyOf": [
                            {
                              "required": [
                                "name"
                              ]
                            },
                            {
                              "required": [
                                "namespace"
                              ]
                            }
                          ]
                        }
                      }
                    ],
                    "properties": {
                      "external": {
                        "description": "The ComputeSubnetwork selflink of form \"projects/{{project}}/regions/{{region}}/subnetworks/{{name}}\", when not managed by Config Connector.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The `name` field of a `ComputeSubnetwork` resource.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "The `namespace` field of a `ComputeSubnetwork` resource.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "networkRef": {
          "description": "Immutable. The relative resource name of the VPC network on which the instance can be accessed.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed Compute Network resource. Should be in the format `projects/{{projectID}}/global/networks/{{network}}`.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `ComputeNetwork` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `ComputeNetwork` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "port": {
          "description": "The TCP port at which the metastore service is reached. Default: 9083.",
          "type": "integer",
          "format": "int32"
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "releaseChannel": {
          "description": "Immutable. The release channel of the service. If unspecified, defaults to `STABLE`.",
          "type": "string",
          "enum": [
            "STABLE",
            "CANARY"
          ]
        },
        "resourceID": {
          "description": "The MetastoreService name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "scalingConfig": {
          "description": "Scaling configuration of the metastore service.",
          "type": "object",
          "properties": {
            "instanceSize": {
              "description": "An enum of readable instance sizes, with each instance size mapping to a float value (e.g. InstanceSize.EXTRA_SMALL = scaling_factor(0.1))",
              "type": "string"
            },
            "scalingFactor": {
              "description": "Scaling factor, increments of 0.1 for values less than 1.0, and increments of 1.0 for values greater than 1.0.",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "telemetryConfig": {
          "description": "The configuration specifying telemetry settings for the Dataproc Metastore service. If unspecified defaults to `JSON`.",
          "type": "object",
          "properties": {
            "logFormat": {
              "description": "The output format of the Dataproc Metastore service's logs.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "tier": {
          "description": "The tier of the service.",
          "type": "string",
          "enum": [
            "DEVELOPER",
            "ENTERPRISE"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "MetastoreServiceStatus defines the config connector machine state of MetastoreService",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the MetastoreService resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "artifactGCSURI": {
              "description": "Output only. A Cloud Storage URI (starting with `gs://`) that specifies where artifacts related to the metastore service are stored.",
              "type": "string"
            },
            "createTime": {
              "description": "Output only. The time when the metastore service was created.",
              "type": "string"
            },
            "endpointURI": {
              "description": "Output only. The URI of the endpoint used to access the metastore service.",
              "type": "string"
            },
            "metadataManagementActivity": {
              "description": "Output only. The metadata management activities of the metastore service.",
              "type": "object",
              "properties": {
                "metadataExports": {
                  "description": "Output only. The latest metadata exports of the metastore service.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "databaseDumpType": {
                        "description": "Output only. The type of the database dump.",
                        "type": "string"
                      },
                      "destinationGCSURI": {
                        "description": "Output only. A Cloud Storage URI of a folder that metadata are exported to, in the form of `gs://\u003cbucket_name\u003e/\u003cpath_inside_bucket\u003e/\u003cexport_folder\u003e`, where `\u003cexport_folder\u003e` is automatically generated.",
                        "type": "string"
                      },
                      "endTime": {
                        "description": "Output only. The time when the export ended.",
                        "type": "string"
                      },
                      "startTime": {
                        "description": "Output only. The time when the export started.",
                        "type": "string"
                      },
                      "state": {
                        "description": "Output only. The current state of the export.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "restores": {
                  "description": "Output only. The latest restores of the metastore service.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "backup": {
                        "description": "Output only. The relative resource name of the metastore service backup to\n restore from, in the following form:\n\n `projects/{project_id}/locations/{location_id}/services/{service_id}/backups/{backup_id}`.",
                        "type": "string"
                      },
                      "details": {
                        "description": "Output only. The restore details containing the revision of the service to be restored to, in format of JSON.",
                        "type": "string"
                      },
                      "endTime": {
                        "description": "Output only. The time when the restore ended.",
                        "type": "string"
                      },
                      "startTime": {
                        "description": "Output only. The time when the restore started.",
                        "type": "string"
                      },
                      "state": {
                        "description": "Output only. The current state of the restore.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Output only. The type of restore.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "networkConfig": {
              "description": "The configuration specifying the network settings for the Dataproc Metastore service.",
              "type": "object",
              "properties": {
                "consumers": {
                  "description": "Immutable. The consumer-side network configuration for the Dataproc Metastore instance.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "endpointLocation": {
                        "description": "Output only. The location of the endpoint URI. Format: `projects/{project}/locations/{location}`.",
                        "type": "string"
                      },
                      "endpointURI": {
                        "description": "Output only. The URI of the endpoint used to access the metastore service.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "state": {
              "description": "Output only. The current state of the metastore service.",
              "type": "string"
            },
            "stateMessage": {
              "description": "Output only. Additional information about the current state of the metastore service, if available.",
              "type": "string"
            },
            "uid": {
              "description": "Output only. The globally unique resource identifier of the metastore service.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. The time when the metastore service was last updated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
