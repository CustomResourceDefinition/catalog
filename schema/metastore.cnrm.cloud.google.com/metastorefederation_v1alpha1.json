{
  "description": "MetastoreFederation is the Schema for the MetastoreFederation API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MetastoreFederationSpec defines the desired state of MetastoreFederation",
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "backendMetastores": {
          "description": "map type with key int32 as string and value as BackendMetastore",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "metastoreType": {
                "description": "The type of the backend metastore.",
                "type": "string",
                "enum": [
                  "BIGQUERY",
                  "DATAPROC_METASTORE"
                ]
              },
              "serviceRef": {
                "description": "The relative resource name of the metastore that is being federated.\n The formats of the relative resource names for the currently supported\n metastores are listed below:\n\n * BigQuery\n     * `projects/{project_id}`\n * Dataproc Metastore\n     * `projects/{project_id}/locations/{location}/services/{service_id}`",
                "type": "object",
                "properties": {
                  "external": {
                    "description": "A reference to an externally managed MetastoreService resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/services/{{serviceID}}\".",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of a MetastoreService resource.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "The namespace of a MetastoreService resource.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "labels": {
          "description": "User-defined labels for the metastore federation.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The MetastoreFederation name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "version": {
          "description": "Immutable. The Apache Hive metastore version of the federation. All backend metastore versions must be compatible with the federation version.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "MetastoreFederationStatus defines the config connector machine state of MetastoreFederation",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the MetastoreFederation resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "createTime": {
              "description": "Output only. The time when the metastore federation was created.",
              "type": "string"
            },
            "endpointURI": {
              "description": "Output only. The federation endpoint.",
              "type": "string"
            },
            "state": {
              "description": "Output only. The current state of the federation.",
              "type": "string"
            },
            "stateMessage": {
              "description": "Output only. Additional information about the current state of the metastore federation, if available.",
              "type": "string"
            },
            "uid": {
              "description": "Output only. The globally unique resource identifier of the metastore federation.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. The time when the metastore federation was last updated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
