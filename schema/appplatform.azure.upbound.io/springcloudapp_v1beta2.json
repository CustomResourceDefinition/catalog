{
  "description": "SpringCloudApp is the Schema for the SpringCloudApps API. Manage an Azure Spring Cloud Application.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SpringCloudAppSpec defines the desired state of SpringCloudApp",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "addonJson": {
              "description": "A JSON object that contains the addon configurations of the Spring Cloud Service.",
              "type": "string"
            },
            "customPersistentDisk": {
              "description": "A custom_persistent_disk block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "mountOptions": {
                    "description": "These are the mount options for a persistent disk.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "mountPath": {
                    "description": "The mount path of the persistent disk.",
                    "type": "string"
                  },
                  "readOnlyEnabled": {
                    "description": "Indicates whether the persistent disk is a readOnly one.",
                    "type": "boolean"
                  },
                  "shareName": {
                    "description": "The share name of the Azure File share.",
                    "type": "string"
                  },
                  "storageName": {
                    "description": "The name of the Spring Cloud Storage.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "httpsOnly": {
              "description": "Is only HTTPS allowed? Defaults to false.",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "A list of User Assigned Managed Identity IDs to be assigned to this Spring Cloud Application.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Spring Cloud Application. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ingressSettings": {
              "description": "An ingress_settings block as defined below.",
              "type": "object",
              "properties": {
                "backendProtocol": {
                  "description": "Specifies how ingress should communicate with this app backend service. Allowed values are GRPC and Default. Defaults to Default.",
                  "type": "string"
                },
                "readTimeoutInSeconds": {
                  "description": "Specifies the ingress read time out in seconds. Defaults to 300.",
                  "type": "number"
                },
                "sendTimeoutInSeconds": {
                  "description": "Specifies the ingress send time out in seconds. Defaults to 60.",
                  "type": "number"
                },
                "sessionAffinity": {
                  "description": "Specifies the type of the affinity, set this to Cookie to enable session affinity. Allowed values are Cookie and None. Defaults to None.",
                  "type": "string"
                },
                "sessionCookieMaxAge": {
                  "description": "Specifies the time in seconds until the cookie expires.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "isPublic": {
              "description": "Does the Spring Cloud Application have public endpoint? Defaults to false.",
              "type": "boolean"
            },
            "persistentDisk": {
              "description": "An persistent_disk block as defined below.",
              "type": "object",
              "properties": {
                "mountPath": {
                  "description": "Specifies the mount path of the persistent disk. Defaults to /persistent.",
                  "type": "string"
                },
                "sizeInGb": {
                  "description": "Specifies the size of the persistent disk in GB. Possible values are between 0 and 50.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "publicEndpointEnabled": {
              "description": "Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceName": {
              "description": "Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "serviceNameRef": {
              "description": "Reference to a SpringCloudService in appplatform to populate serviceName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceNameSelector": {
              "description": "Selector for a SpringCloudService in appplatform to populate serviceName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tlsEnabled": {
              "description": "Is End to End TLS Enabled? Defaults to false.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "addonJson": {
              "description": "A JSON object that contains the addon configurations of the Spring Cloud Service.",
              "type": "string"
            },
            "customPersistentDisk": {
              "description": "A custom_persistent_disk block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "mountOptions": {
                    "description": "These are the mount options for a persistent disk.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "mountPath": {
                    "description": "The mount path of the persistent disk.",
                    "type": "string"
                  },
                  "readOnlyEnabled": {
                    "description": "Indicates whether the persistent disk is a readOnly one.",
                    "type": "boolean"
                  },
                  "shareName": {
                    "description": "The share name of the Azure File share.",
                    "type": "string"
                  },
                  "storageName": {
                    "description": "The name of the Spring Cloud Storage.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "httpsOnly": {
              "description": "Is only HTTPS allowed? Defaults to false.",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "A list of User Assigned Managed Identity IDs to be assigned to this Spring Cloud Application.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Spring Cloud Application. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ingressSettings": {
              "description": "An ingress_settings block as defined below.",
              "type": "object",
              "properties": {
                "backendProtocol": {
                  "description": "Specifies how ingress should communicate with this app backend service. Allowed values are GRPC and Default. Defaults to Default.",
                  "type": "string"
                },
                "readTimeoutInSeconds": {
                  "description": "Specifies the ingress read time out in seconds. Defaults to 300.",
                  "type": "number"
                },
                "sendTimeoutInSeconds": {
                  "description": "Specifies the ingress send time out in seconds. Defaults to 60.",
                  "type": "number"
                },
                "sessionAffinity": {
                  "description": "Specifies the type of the affinity, set this to Cookie to enable session affinity. Allowed values are Cookie and None. Defaults to None.",
                  "type": "string"
                },
                "sessionCookieMaxAge": {
                  "description": "Specifies the time in seconds until the cookie expires.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "isPublic": {
              "description": "Does the Spring Cloud Application have public endpoint? Defaults to false.",
              "type": "boolean"
            },
            "persistentDisk": {
              "description": "An persistent_disk block as defined below.",
              "type": "object",
              "properties": {
                "mountPath": {
                  "description": "Specifies the mount path of the persistent disk. Defaults to /persistent.",
                  "type": "string"
                },
                "sizeInGb": {
                  "description": "Specifies the size of the persistent disk in GB. Possible values are between 0 and 50.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "publicEndpointEnabled": {
              "description": "Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?",
              "type": "boolean"
            },
            "tlsEnabled": {
              "description": "Is End to End TLS Enabled? Defaults to false.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SpringCloudAppStatus defines the observed state of SpringCloudApp.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "addonJson": {
              "description": "A JSON object that contains the addon configurations of the Spring Cloud Service.",
              "type": "string"
            },
            "customPersistentDisk": {
              "description": "A custom_persistent_disk block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "mountOptions": {
                    "description": "These are the mount options for a persistent disk.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "mountPath": {
                    "description": "The mount path of the persistent disk.",
                    "type": "string"
                  },
                  "readOnlyEnabled": {
                    "description": "Indicates whether the persistent disk is a readOnly one.",
                    "type": "boolean"
                  },
                  "shareName": {
                    "description": "The share name of the Azure File share.",
                    "type": "string"
                  },
                  "storageName": {
                    "description": "The name of the Spring Cloud Storage.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "fqdn": {
              "description": "The Fully Qualified DNS Name of the Spring Application in the service.",
              "type": "string"
            },
            "httpsOnly": {
              "description": "Is only HTTPS allowed? Defaults to false.",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the Spring Cloud Application.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "A list of User Assigned Managed Identity IDs to be assigned to this Spring Cloud Application.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "principalId": {
                  "description": "The Principal ID for the Service Principal associated with the Managed Service Identity of this Spring Cloud Application.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The Tenant ID for the Service Principal associated with the Managed Service Identity of this Spring Cloud Application.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Spring Cloud Application. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ingressSettings": {
              "description": "An ingress_settings block as defined below.",
              "type": "object",
              "properties": {
                "backendProtocol": {
                  "description": "Specifies how ingress should communicate with this app backend service. Allowed values are GRPC and Default. Defaults to Default.",
                  "type": "string"
                },
                "readTimeoutInSeconds": {
                  "description": "Specifies the ingress read time out in seconds. Defaults to 300.",
                  "type": "number"
                },
                "sendTimeoutInSeconds": {
                  "description": "Specifies the ingress send time out in seconds. Defaults to 60.",
                  "type": "number"
                },
                "sessionAffinity": {
                  "description": "Specifies the type of the affinity, set this to Cookie to enable session affinity. Allowed values are Cookie and None. Defaults to None.",
                  "type": "string"
                },
                "sessionCookieMaxAge": {
                  "description": "Specifies the time in seconds until the cookie expires.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "isPublic": {
              "description": "Does the Spring Cloud Application have public endpoint? Defaults to false.",
              "type": "boolean"
            },
            "persistentDisk": {
              "description": "An persistent_disk block as defined below.",
              "type": "object",
              "properties": {
                "mountPath": {
                  "description": "Specifies the mount path of the persistent disk. Defaults to /persistent.",
                  "type": "string"
                },
                "sizeInGb": {
                  "description": "Specifies the size of the persistent disk in GB. Possible values are between 0 and 50.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "publicEndpointEnabled": {
              "description": "Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "serviceName": {
              "description": "Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tlsEnabled": {
              "description": "Is End to End TLS Enabled? Defaults to false.",
              "type": "boolean"
            },
            "url": {
              "description": "The public endpoint of the Spring Cloud Application.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
