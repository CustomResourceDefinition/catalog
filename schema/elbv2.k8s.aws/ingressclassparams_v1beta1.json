{
  "description": "IngressClassParams is the Schema for the IngressClassParams API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IngressClassParamsSpec defines the desired state of IngressClassParams",
      "type": "object",
      "properties": {
        "PrefixListsIDs": {
          "description": "PrefixListsIDs defines the security group prefix lists for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "certificateArn": {
          "description": "CertificateArn specifies the ARN of the certificates for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "group": {
          "description": "Group defines the IngressGroup for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of IngressGroup.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "inboundCIDRs": {
          "description": "InboundCIDRs specifies the CIDRs that are allowed to access the Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ipAddressType": {
          "description": "IPAddressType defines the ip address type for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "string",
          "enum": [
            "ipv4",
            "dualstack",
            "dualstack-without-public-ipv4"
          ]
        },
        "ipamConfiguration": {
          "description": "IPAMConfiguration defines the IPAM settings for a Load Balancer.",
          "type": "object",
          "properties": {
            "ipv4IPAMPoolId": {
              "description": "IPv4IPAMPoolId defines the IPAM pool ID used for IPv4 Addresses on the ALB.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "listeners": {
          "description": "Listeners define a list of listeners with their protocol, port and attributes.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "listenerAttributes": {
                "description": "The attributes of the listener",
                "type": "array",
                "items": {
                  "description": "Attributes defines custom attributes on resources.",
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the attribute.",
                      "type": "string"
                    },
                    "value": {
                      "description": "The value of the attribute.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "port": {
                "description": "The port of the listener",
                "type": "integer",
                "format": "int32"
              },
              "protocol": {
                "description": "The protocol of the listener",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "loadBalancerAttributes": {
          "description": "LoadBalancerAttributes define the custom attributes to LoadBalancers for all Ingress that that belong to IngressClass with this IngressClassParams.",
          "type": "array",
          "items": {
            "description": "Attributes defines custom attributes on resources.",
            "type": "object",
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "description": "The key of the attribute.",
                "type": "string"
              },
              "value": {
                "description": "The value of the attribute.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "minimumLoadBalancerCapacity": {
          "description": "MinimumLoadBalancerCapacity define the capacity reservation for LoadBalancers for all Ingress that belong to IngressClass with this IngressClassParams.",
          "type": "object",
          "required": [
            "capacityUnits"
          ],
          "properties": {
            "capacityUnits": {
              "description": "The Capacity Units Value.",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "namespaceSelector": {
          "description": "NamespaceSelector restrict the namespaces of Ingresses that are allowed to specify the IngressClass with this IngressClassParams.\n* if absent or present but empty, it selects all namespaces.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "scheme": {
          "description": "Scheme defines the scheme for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "string",
          "enum": [
            "internal",
            "internet-facing"
          ]
        },
        "sslPolicy": {
          "description": "SSLPolicy specifies the SSL Policy for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "string"
        },
        "subnets": {
          "description": "Subnets defines the subnets for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "object",
          "properties": {
            "ids": {
              "description": "IDs specify the resource IDs of subnets. Exactly one of this or `tags` must be specified.",
              "type": "array",
              "minItems": 1,
              "items": {
                "description": "SubnetID specifies a subnet ID.",
                "type": "string",
                "pattern": "subnet-[0-9a-f]+"
              }
            },
            "tags": {
              "description": "Tags specifies subnets in the load balancer's VPC where each\ntag specified in the map key contains one of the values in the corresponding\nvalue list.\nExactly one of this or `ids` must be specified.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        "tags": {
          "description": "Tags defines list of Tags on AWS resources provisioned for Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "array",
          "items": {
            "description": "Tag defines a AWS Tag on resources.",
            "type": "object",
            "required": [
              "key",
              "value"
            ],
            "properties": {
              "key": {
                "description": "The key of the tag.",
                "type": "string"
              },
              "value": {
                "description": "The value of the tag.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "targetType": {
          "description": "TargetType defines the target type of target groups for all Ingresses that belong to IngressClass with this IngressClassParams.",
          "type": "string",
          "enum": [
            "instance",
            "ip"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
