{
  "description": "DatastreamConnectionProfile is the Schema for the DatastreamConnectionProfile API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DatastreamConnectionProfileSpec defines the desired state of DatastreamConnectionProfile",
      "type": "object",
      "required": [
        "displayName",
        "location",
        "projectRef"
      ],
      "properties": {
        "bigQueryProfile": {
          "description": "BigQuery Connection Profile configuration.",
          "type": "object"
        },
        "displayName": {
          "description": "Required. Display name.",
          "type": "string"
        },
        "forwardSSHConnectivity": {
          "description": "Forward SSH tunnel connectivity.",
          "type": "object",
          "required": [
            "hostname",
            "secretRef"
          ],
          "properties": {
            "hostname": {
              "description": "Required. Hostname for the SSH tunnel.",
              "type": "string"
            },
            "port": {
              "description": "Port for the SSH tunnel, default value is 22.",
              "type": "integer",
              "format": "int32"
            },
            "privateKey": {
              "description": "Input only. SSH private key.",
              "type": "string"
            },
            "secretRef": {
              "description": "The Kubernetes Secret object that stores the \"username\" and \"password\" information for the SSH tunnel. The Secret type has to be `kubernetes.io/basic-auth`.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The `metadata.name` field of a Kubernetes `Secret`",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `metadata.namespace` field of a Kubernetes `Secret`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "gcsProfile": {
          "description": "Cloud Storage ConnectionProfile configuration.",
          "type": "object",
          "required": [
            "bucket"
          ],
          "properties": {
            "bucket": {
              "description": "Required. The Cloud Storage bucket name.",
              "type": "string"
            },
            "rootPath": {
              "description": "The root path inside the Cloud Storage bucket.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "labels": {
          "description": "Labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Immutable.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Location field is immutable"
            }
          ]
        },
        "mySQLProfile": {
          "description": "MySQL ConnectionProfile configuration.",
          "type": "object",
          "required": [
            "hostname",
            "secretRef"
          ],
          "properties": {
            "hostname": {
              "description": "Required. Hostname for the MySQL connection.",
              "type": "string"
            },
            "port": {
              "description": "Port for the MySQL connection, default value is 3306.",
              "type": "integer",
              "format": "int32"
            },
            "secretRef": {
              "description": "The Kubernetes Secret object that stores the \"username\" and \"password\" information for the MySQL connection. The Secret type has to be `kubernetes.io/basic-auth`.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The `metadata.name` field of a Kubernetes `Secret`",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `metadata.namespace` field of a Kubernetes `Secret`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "sslConfig": {
              "description": "SSL configuration for the MySQL connection.",
              "type": "object",
              "properties": {
                "caCertificate": {
                  "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
                  "type": "string"
                },
                "clientCertificate": {
                  "description": "Input only. PEM-encoded certificate that will be used by the replica to authenticate against the source database server. If this field is used then the 'client_key' and the 'ca_certificate' fields are mandatory.",
                  "type": "string"
                },
                "clientKey": {
                  "description": "Input only. PEM-encoded private key associated with the Client Certificate. If this field is used then the 'client_certificate' and the 'ca_certificate' fields are mandatory.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "oracleProfile": {
          "description": "Oracle ConnectionProfile configuration.",
          "type": "object",
          "required": [
            "databaseService",
            "hostname",
            "secretRef"
          ],
          "properties": {
            "connectionAttributes": {
              "description": "Connection string attributes",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "databaseService": {
              "description": "Required. Database for the Oracle connection.",
              "type": "string"
            },
            "hostname": {
              "description": "Required. Hostname for the Oracle connection.",
              "type": "string"
            },
            "oracleASMConfig": {
              "description": "Optional. Configuration for Oracle ASM connection.",
              "type": "object",
              "required": [
                "asmService",
                "hostname",
                "port",
                "secretRef"
              ],
              "properties": {
                "asmService": {
                  "description": "Required. ASM service name for the Oracle ASM connection.",
                  "type": "string"
                },
                "connectionAttributes": {
                  "description": "Optional. Connection string attributes",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "hostname": {
                  "description": "Required. Hostname for the Oracle ASM connection.",
                  "type": "string"
                },
                "oracleSSLConfig": {
                  "description": "Optional. SSL configuration for the Oracle connection.",
                  "type": "object",
                  "properties": {
                    "caCertificate": {
                      "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "port": {
                  "description": "Required. Port for the Oracle ASM connection.",
                  "type": "integer",
                  "format": "int32"
                },
                "secretRef": {
                  "description": "The Kubernetes Secret object that stores the \"username\" and \"password\" information for the Oracle ASM connection. The Secret type has to be `kubernetes.io/basic-auth`.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "The `metadata.name` field of a Kubernetes `Secret`",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `metadata.namespace` field of a Kubernetes `Secret`.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "oracleSSLConfig": {
              "description": "Optional. SSL configuration for the Oracle connection.",
              "type": "object",
              "properties": {
                "caCertificate": {
                  "description": "Input only. PEM-encoded certificate of the CA that signed the source database server's certificate.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "port": {
              "description": "Port for the Oracle connection, default value is 1521.",
              "type": "integer",
              "format": "int32"
            },
            "secretManagerSecretRef": {
              "description": "Optional. A reference to a Secret Manager resource name storing the Oracle connection password. Mutually exclusive with the `secretRef` field.",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": " If provided must be in the format `projects/*/secrets/*`.",
                  "type": "string"
                },
                "name": {
                  "description": "The `name` field of a `SecretManagerSecret` resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `metadata.namespace` field of a `SecretManagerSecret` resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "secretRef": {
              "description": "The Kubernetes Secret object that stores the \"username\" and \"password\" information for the Oracle connection. The Secret type has to be `kubernetes.io/basic-auth`.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The `metadata.name` field of a Kubernetes `Secret`",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `metadata.namespace` field of a Kubernetes `Secret`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "privateConnectivity": {
          "description": "Private connectivity.",
          "type": "object",
          "required": [
            "privateConnectionRef"
          ],
          "properties": {
            "privateConnectionRef": {
              "description": "Required. A reference to a private connection resource.",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "A reference to an externally managed DatastreamPrivateConnection resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/privateConnections/{{privateconnectionID}}\".",
                  "type": "string"
                },
                "name": {
                  "description": "The name of a DatastreamPrivateConnection resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The namespace of a DatastreamPrivateConnection resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The DatastreamConnectionProfile name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "sqlServerProfile": {
          "description": "SQLServer Connection Profile configuration.",
          "type": "object",
          "required": [
            "database",
            "hostname",
            "secretRef"
          ],
          "properties": {
            "database": {
              "description": "Required. Database for the SQLServer connection.",
              "type": "string"
            },
            "hostname": {
              "description": "Required. Hostname for the SQLServer connection.",
              "type": "string"
            },
            "port": {
              "description": "Port for the SQLServer connection, default value is 1433.",
              "type": "integer",
              "format": "int32"
            },
            "secretRef": {
              "description": "The Kubernetes Secret object that stores the \"username\" and \"password\" information for the SQLServer connection. The Secret type has to be `kubernetes.io/basic-auth`.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The `metadata.name` field of a Kubernetes `Secret`",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `metadata.namespace` field of a Kubernetes `Secret`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "staticServiceIPConnectivity": {
          "description": "Static Service IP connectivity.",
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DatastreamConnectionProfileStatus defines the config connector machine state of DatastreamConnectionProfile",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DatastreamConnectionProfile resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "createTime": {
              "description": "Output only. The create time of the resource.",
              "type": "string"
            },
            "mySQLProfile": {
              "description": "MySQL ConnectionProfile configuration.",
              "type": "object",
              "properties": {
                "sslConfig": {
                  "description": "SSL configuration for the MySQL connection.",
                  "type": "object",
                  "properties": {
                    "caCertificateSet": {
                      "description": "Output only. Indicates whether the ca_certificate field is set.",
                      "type": "boolean"
                    },
                    "clientCertificateSet": {
                      "description": "Output only. Indicates whether the client_certificate field is set.",
                      "type": "boolean"
                    },
                    "clientKeySet": {
                      "description": "Output only. Indicates whether the client_key field is set.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "oracleProfile": {
              "description": "Oracle ConnectionProfile configuration.",
              "type": "object",
              "properties": {
                "oracleSSLConfig": {
                  "description": "Optional. SSL configuration for the Oracle connection.",
                  "type": "object",
                  "properties": {
                    "caCertificateSet": {
                      "description": "Output only. Indicates whether the ca_certificate field has been set for this Connection-Profile.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "updateTime": {
              "description": "Output only. The update time of the resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
