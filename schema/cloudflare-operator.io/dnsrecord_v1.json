{
  "description": "DNSRecord is the Schema for the dnsrecords API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DNSRecordSpec defines the desired state of DNSRecord",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "comment": {
          "description": "Comments or notes about the DNS record. This field has no effect on DNS responses.",
          "type": "string",
          "maxLength": 100
        },
        "content": {
          "description": "DNS record content (e.g. 127.0.0.1)",
          "type": "string"
        },
        "data": {
          "description": "Data holds arbitrary key-value pairs used to further configure the DNS record",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "interval": {
          "description": "Interval to check DNSRecord",
          "type": "string",
          "default": "5m"
        },
        "ipRef": {
          "description": "Reference to an IP object",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the IP object",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "DNS record name (e.g. example.com)",
          "type": "string",
          "maxLength": 255
        },
        "priority": {
          "description": "Required for MX, SRV and URI records; unused by other record types. Records with lower priorities are preferred.",
          "type": "integer",
          "maximum": 65535,
          "minimum": 0
        },
        "proxied": {
          "description": "Whether the record is receiving the performance and security benefits of Cloudflare",
          "type": "boolean",
          "default": true
        },
        "ttl": {
          "description": "Time to live, in seconds, of the DNS record. Must be between 60 and 86400, or 1 for \"automatic\" (e.g. 3600)",
          "type": "integer",
          "default": 1,
          "maximum": 86400,
          "minimum": 1
        },
        "type": {
          "description": "DNS record type",
          "type": "string",
          "default": "A"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DNSRecordStatus defines the observed state of DNSRecord",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions contains the different condition statuses for the DNSRecord object.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "recordID": {
          "description": "Cloudflare DNS record ID",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
