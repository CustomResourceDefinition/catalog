{
  "description": "ExpressRoutePort is the Schema for the ExpressRoutePorts API. Manages a Express Route Port.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ExpressRoutePortSpec defines the desired state of ExpressRoutePort",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "bandwidthInGbps": {
              "description": "Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.",
              "type": "number"
            },
            "billingType": {
              "description": "The billing type of the Express Route Port. Possible values are MeteredData and UnlimitedData. Defaults to MeteredData.",
              "type": "string"
            },
            "encapsulation": {
              "description": "The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: Dot1Q, QinQ.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is UserAssigned.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "link1": {
              "description": "A list of link blocks as defined below.",
              "type": "object",
              "properties": {
                "adminEnabled": {
                  "description": "Whether enable administration state on the Express Route Port Link? Defaults to false.",
                  "type": "boolean"
                },
                "macsecCakKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecCipher": {
                  "description": "The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.",
                  "type": "string"
                },
                "macsecCknKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecSciEnabled": {
                  "description": "Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "link2": {
              "description": "A list of link blocks as defined below.",
              "type": "object",
              "properties": {
                "adminEnabled": {
                  "description": "Whether enable administration state on the Express Route Port Link? Defaults to false.",
                  "type": "boolean"
                },
                "macsecCakKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecCipher": {
                  "description": "The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.",
                  "type": "string"
                },
                "macsecCknKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecSciEnabled": {
                  "description": "Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "peeringLocation": {
              "description": "The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Express Route Port.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "bandwidthInGbps": {
              "description": "Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.",
              "type": "number"
            },
            "billingType": {
              "description": "The billing type of the Express Route Port. Possible values are MeteredData and UnlimitedData. Defaults to MeteredData.",
              "type": "string"
            },
            "encapsulation": {
              "description": "The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: Dot1Q, QinQ.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is UserAssigned.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "link1": {
              "description": "A list of link blocks as defined below.",
              "type": "object",
              "properties": {
                "adminEnabled": {
                  "description": "Whether enable administration state on the Express Route Port Link? Defaults to false.",
                  "type": "boolean"
                },
                "macsecCakKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecCipher": {
                  "description": "The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.",
                  "type": "string"
                },
                "macsecCknKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecSciEnabled": {
                  "description": "Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "link2": {
              "description": "A list of link blocks as defined below.",
              "type": "object",
              "properties": {
                "adminEnabled": {
                  "description": "Whether enable administration state on the Express Route Port Link? Defaults to false.",
                  "type": "boolean"
                },
                "macsecCakKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecCipher": {
                  "description": "The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.",
                  "type": "string"
                },
                "macsecCknKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecSciEnabled": {
                  "description": "Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "peeringLocation": {
              "description": "The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Express Route Port.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.bandwidthInGbps) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.bandwidthInGbps))",
          "message": "spec.forProvider.bandwidthInGbps is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.encapsulation) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.encapsulation))",
          "message": "spec.forProvider.encapsulation is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.peeringLocation) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.peeringLocation))",
          "message": "spec.forProvider.peeringLocation is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ExpressRoutePortStatus defines the observed state of ExpressRoutePort.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "bandwidthInGbps": {
              "description": "Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.",
              "type": "number"
            },
            "billingType": {
              "description": "The billing type of the Express Route Port. Possible values are MeteredData and UnlimitedData. Defaults to MeteredData.",
              "type": "string"
            },
            "encapsulation": {
              "description": "The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: Dot1Q, QinQ.",
              "type": "string"
            },
            "ethertype": {
              "description": "The EtherType of the Express Route Port.",
              "type": "string"
            },
            "guid": {
              "description": "The resource GUID of the Express Route Port.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Express Route Port.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Express Route Port.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "principalId": {
                  "description": "The ID of the Express Route Port.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The ID of the Express Route Port.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Express Route Port. Only possible value is UserAssigned.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "link1": {
              "description": "A list of link blocks as defined below.",
              "type": "object",
              "properties": {
                "adminEnabled": {
                  "description": "Whether enable administration state on the Express Route Port Link? Defaults to false.",
                  "type": "boolean"
                },
                "connectorType": {
                  "description": "The connector type of the Express Route Port Link.",
                  "type": "string"
                },
                "id": {
                  "description": "The ID of this Express Route Port Link.",
                  "type": "string"
                },
                "interfaceName": {
                  "description": "The interface name of the Azure router associated with the Express Route Port Link.",
                  "type": "string"
                },
                "macsecCakKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecCipher": {
                  "description": "The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.",
                  "type": "string"
                },
                "macsecCknKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecSciEnabled": {
                  "description": "Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.",
                  "type": "boolean"
                },
                "patchPanelId": {
                  "description": "The ID that maps from the Express Route Port Link to the patch panel port.",
                  "type": "string"
                },
                "rackId": {
                  "description": "The ID that maps from the patch panel port to the rack.",
                  "type": "string"
                },
                "routerName": {
                  "description": "The name of the Azure router associated with the Express Route Port Link.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "link2": {
              "description": "A list of link blocks as defined below.",
              "type": "object",
              "properties": {
                "adminEnabled": {
                  "description": "Whether enable administration state on the Express Route Port Link? Defaults to false.",
                  "type": "boolean"
                },
                "connectorType": {
                  "description": "The connector type of the Express Route Port Link.",
                  "type": "string"
                },
                "id": {
                  "description": "The ID of this Express Route Port Link.",
                  "type": "string"
                },
                "interfaceName": {
                  "description": "The interface name of the Azure router associated with the Express Route Port Link.",
                  "type": "string"
                },
                "macsecCakKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecCipher": {
                  "description": "The MACSec cipher used for this Express Route Port Link. Possible values are GcmAes128 and GcmAes256. Defaults to GcmAes128.",
                  "type": "string"
                },
                "macsecCknKeyvaultSecretId": {
                  "description": "The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.",
                  "type": "string"
                },
                "macsecSciEnabled": {
                  "description": "Should Secure Channel Identifier on the Express Route Port Link be enabled? Defaults to false.",
                  "type": "boolean"
                },
                "patchPanelId": {
                  "description": "The ID that maps from the Express Route Port Link to the patch panel port.",
                  "type": "string"
                },
                "rackId": {
                  "description": "The ID that maps from the patch panel port to the rack.",
                  "type": "string"
                },
                "routerName": {
                  "description": "The name of the Azure router associated with the Express Route Port Link.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "mtu": {
              "description": "The maximum transmission unit of the Express Route Port.",
              "type": "string"
            },
            "peeringLocation": {
              "description": "The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Express Route Port.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
