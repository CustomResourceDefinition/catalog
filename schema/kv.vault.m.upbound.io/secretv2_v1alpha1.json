{
  "description": "SecretV2 is the Schema for the SecretV2s API. Writes a KV-V2 secret to a given path in Vault",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecretV2Spec defines the desired state of SecretV2",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "cas": {
              "description": "This flag is required if cas_required is set to true\non either the secret or the engine's config. In order for a\nwrite operation to be successful, cas must be set to the current version\nof the secret.\nThis flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write to be successful, cas must be set to the current version of the secret.",
              "type": "number"
            },
            "customMetadata": {
              "description": "A nested block that allows configuring metadata for the\nKV secret. Refer to the\nConfiguration Options for more info.\nCustom metadata to be set for the secret.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "casRequired": {
                    "description": "If true, all keys will require the cas\nparameter to be set on all write requests.\nIf true, all keys will require the cas parameter to be set on all write requests.",
                    "type": "boolean"
                  },
                  "data": {
                    "description": "A string to string map describing the secret.\nA map of arbitrary string to string valued user-provided metadata meant to describe the secret.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "deleteVersionAfter": {
                    "description": "If set, specifies the length of time before\na version is deleted. Accepts duration in integer seconds.\nIf set, specifies the length of time before a version is deleted.",
                    "type": "number"
                  },
                  "maxVersions": {
                    "description": "The number of versions to keep per key.\nThe number of versions to keep per key.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "dataJsonSecretRef": {
              "description": "JSON-encoded string that will be\nwritten as the secret data at the given path.\nJSON-encoded secret data to write.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataJsonWo": {
              "description": "JSON-encoded secret data to write to Vault. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-Only JSON-encoded secret data to write.",
              "type": "string"
            },
            "dataJsonWoVersion": {
              "description": "The version of the data_json_wo. For more info see updating write-only attributes.\nVersion counter for write-only secret data.",
              "type": "number"
            },
            "deleteAllVersions": {
              "description": "If set to true, permanently deletes all\nversions for the specified key.\nIf set to true, permanently deletes all versions for the specified key.",
              "type": "boolean"
            },
            "disableRead": {
              "description": "If set to true, disables reading secret from Vault;\nnote: drift won't be detected.\nIf set to true, disables reading secret from Vault; note: drift won't be detected.",
              "type": "boolean"
            },
            "mount": {
              "description": "Path where KV-V2 engine is mounted.\nPath where KV-V2 engine is mounted.",
              "type": "string"
            },
            "mountRef": {
              "description": "Reference to a Mount in vault to populate mount.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "mountSelector": {
              "description": "Selector for a Mount in vault to populate mount.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Full name of the secret. For a nested secret\nthe name is the nested path excluding the mount and data\nprefix. For example, for a secret at kvv2/data/foo/bar/baz\nthe name is foo/bar/baz.\nFull name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "An object that holds option settings.\nAn object that holds option settings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "cas": {
              "description": "This flag is required if cas_required is set to true\non either the secret or the engine's config. In order for a\nwrite operation to be successful, cas must be set to the current version\nof the secret.\nThis flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write to be successful, cas must be set to the current version of the secret.",
              "type": "number"
            },
            "customMetadata": {
              "description": "A nested block that allows configuring metadata for the\nKV secret. Refer to the\nConfiguration Options for more info.\nCustom metadata to be set for the secret.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "casRequired": {
                    "description": "If true, all keys will require the cas\nparameter to be set on all write requests.\nIf true, all keys will require the cas parameter to be set on all write requests.",
                    "type": "boolean"
                  },
                  "data": {
                    "description": "A string to string map describing the secret.\nA map of arbitrary string to string valued user-provided metadata meant to describe the secret.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "deleteVersionAfter": {
                    "description": "If set, specifies the length of time before\na version is deleted. Accepts duration in integer seconds.\nIf set, specifies the length of time before a version is deleted.",
                    "type": "number"
                  },
                  "maxVersions": {
                    "description": "The number of versions to keep per key.\nThe number of versions to keep per key.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "dataJsonSecretRef": {
              "description": "JSON-encoded string that will be\nwritten as the secret data at the given path.\nJSON-encoded secret data to write.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataJsonWo": {
              "description": "JSON-encoded secret data to write to Vault. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-Only JSON-encoded secret data to write.",
              "type": "string"
            },
            "dataJsonWoVersion": {
              "description": "The version of the data_json_wo. For more info see updating write-only attributes.\nVersion counter for write-only secret data.",
              "type": "number"
            },
            "deleteAllVersions": {
              "description": "If set to true, permanently deletes all\nversions for the specified key.\nIf set to true, permanently deletes all versions for the specified key.",
              "type": "boolean"
            },
            "disableRead": {
              "description": "If set to true, disables reading secret from Vault;\nnote: drift won't be detected.\nIf set to true, disables reading secret from Vault; note: drift won't be detected.",
              "type": "boolean"
            },
            "mount": {
              "description": "Path where KV-V2 engine is mounted.\nPath where KV-V2 engine is mounted.",
              "type": "string"
            },
            "mountRef": {
              "description": "Reference to a Mount in vault to populate mount.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "mountSelector": {
              "description": "Selector for a Mount in vault to populate mount.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Full name of the secret. For a nested secret\nthe name is the nested path excluding the mount and data\nprefix. For example, for a secret at kvv2/data/foo/bar/baz\nthe name is foo/bar/baz.\nFull name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "An object that holds option settings.\nAn object that holds option settings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SecretV2Status defines the observed state of SecretV2.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "cas": {
              "description": "This flag is required if cas_required is set to true\non either the secret or the engine's config. In order for a\nwrite operation to be successful, cas must be set to the current version\nof the secret.\nThis flag is required if cas_required is set to true on either the secret or the engine's config. In order for a write to be successful, cas must be set to the current version of the secret.",
              "type": "number"
            },
            "customMetadata": {
              "description": "A nested block that allows configuring metadata for the\nKV secret. Refer to the\nConfiguration Options for more info.\nCustom metadata to be set for the secret.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "casRequired": {
                    "description": "If true, all keys will require the cas\nparameter to be set on all write requests.\nIf true, all keys will require the cas parameter to be set on all write requests.",
                    "type": "boolean"
                  },
                  "data": {
                    "description": "A string to string map describing the secret.\nA map of arbitrary string to string valued user-provided metadata meant to describe the secret.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "deleteVersionAfter": {
                    "description": "If set, specifies the length of time before\na version is deleted. Accepts duration in integer seconds.\nIf set, specifies the length of time before a version is deleted.",
                    "type": "number"
                  },
                  "maxVersions": {
                    "description": "The number of versions to keep per key.\nThe number of versions to keep per key.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "dataJsonWo": {
              "description": "JSON-encoded secret data to write to Vault. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-Only JSON-encoded secret data to write.",
              "type": "string"
            },
            "dataJsonWoVersion": {
              "description": "The version of the data_json_wo. For more info see updating write-only attributes.\nVersion counter for write-only secret data.",
              "type": "number"
            },
            "deleteAllVersions": {
              "description": "If set to true, permanently deletes all\nversions for the specified key.\nIf set to true, permanently deletes all versions for the specified key.",
              "type": "boolean"
            },
            "disableRead": {
              "description": "If set to true, disables reading secret from Vault;\nnote: drift won't be detected.\nIf set to true, disables reading secret from Vault; note: drift won't be detected.",
              "type": "boolean"
            },
            "id": {
              "type": "string"
            },
            "metadata": {
              "description": "Metadata associated with this secret read from Vault.\nMetadata associated with this secret read from Vault.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "mount": {
              "description": "Path where KV-V2 engine is mounted.\nPath where KV-V2 engine is mounted.",
              "type": "string"
            },
            "name": {
              "description": "Full name of the secret. For a nested secret\nthe name is the nested path excluding the mount and data\nprefix. For example, for a secret at kvv2/data/foo/bar/baz\nthe name is foo/bar/baz.\nFull name of the secret. For a nested secret, the name is the nested path excluding the mount and data prefix. For example, for a secret at 'kvv2/data/foo/bar/baz', the name is 'foo/bar/baz'",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "An object that holds option settings.\nAn object that holds option settings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "path": {
              "description": "Full path where the KV-V2 secret will be written.\nFull path where the KV-V2 secret will be written.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
