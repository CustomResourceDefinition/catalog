{
  "description": "BackupPolicyTemplate should be provided by addon developers.\nIt is responsible for generating BackupPolicies for the addon that requires backup operations,\nalso determining the suitable backup methods and strategies.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Defines the desired state of the BackupPolicyTemplate.",
      "type": "object",
      "required": [
        "backupMethods"
      ],
      "properties": {
        "backoffLimit": {
          "description": "Specifies the maximum number of retry attempts for a backup before it is considered a failure.",
          "type": "integer",
          "format": "int32",
          "default": 2,
          "maximum": 10,
          "minimum": 0
        },
        "backupMethods": {
          "description": "Defines an array of BackupMethods to be used.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "actionSetName": {
                "description": "Refers to the ActionSet object that defines the backup actions.\nFor volume snapshot backup, the actionSet is not required, the controller\nwill use the CSI volume snapshotter to create the snapshot.",
                "type": "string"
              },
              "compatibleMethod": {
                "description": "The name of the compatible full backup method, used by incremental backups.",
                "type": "string",
                "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
              },
              "env": {
                "description": "Specifies the environment variables for the backup workload.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Specifies the environment variable key.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Specifies the environment variable value.",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "Specifies the source used to determine the value of the environment variable.\nCannot be used if value is not empty.",
                      "type": "object",
                      "properties": {
                        "versionMapping": {
                          "description": "Determine the appropriate version of the backup tool image from service version.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "mappedValue",
                              "serviceVersions"
                            ],
                            "properties": {
                              "mappedValue": {
                                "description": "Specifies a mapping value based on service version.\nTypically used to set up the tools image required for backup operations.",
                                "type": "string"
                              },
                              "serviceVersions": {
                                "description": "Represents an array of the service version that can be mapped to the appropriate value.\nEach name in the list can represent an exact name, a name prefix, or a regular expression pattern.\n\n\nFor example:\n\n\n- \"8.0.33\": Matches the exact name \"8.0.33\"\n- \"8.0\": Matches all names starting with \"8.0\"\n- \"^8.0.\\d{1,2}$\": Matches all names starting with \"8.0.\" followed by one or two digits.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "The name of backup method.",
                "type": "string",
                "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
              },
              "runtimeSettings": {
                "description": "Specifies runtime settings for the backup workload container.",
                "type": "object",
                "properties": {
                  "resources": {
                    "description": "Specifies the resource required by container.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                    "type": "object",
                    "properties": {
                      "claims": {
                        "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\n\nThis field is immutable. It can only be set for containers.",
                        "type": "array",
                        "items": {
                          "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "name"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "limits": {
                        "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                        "type": "object",
                        "additionalProperties": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                        "type": "object",
                        "additionalProperties": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "snapshotVolumes": {
                "description": "Specifies whether to take snapshots of persistent volumes. If true,\nthe ActionSetName is not required, the controller will use the CSI volume\nsnapshotter to create the snapshot.",
                "type": "boolean",
                "default": false
              },
              "target": {
                "description": "If set, specifies the method for selecting the replica to be backed up using the criteria defined here.\nIf this field is not set, the selection method specified in `backupPolicy.target` is used.\n\n\nThis field provides a way to override the global `backupPolicy.target` setting for specific BackupMethod.",
                "type": "object",
                "required": [
                  "role"
                ],
                "properties": {
                  "account": {
                    "description": "If `backupPolicy.componentDefs` is set, this field is required to specify the system account name.\nThis account must match one listed in `componentDefinition.spec.systemAccounts[*].name`.\nThe corresponding secret created by this account is used to connect to the database.",
                    "type": "string"
                  },
                  "containerPort": {
                    "description": "Specifies the container port in the target pod.\nIf not specified, the first container and its first port will be used.",
                    "type": "object",
                    "properties": {
                      "containerName": {
                        "description": "Specifies the name of container with the port.",
                        "type": "string"
                      },
                      "portName": {
                        "description": "Specifies the port name.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "fallbackRole": {
                    "description": "Specifies the fallback role to select one replica for backup, this only takes effect when the\n`strategy` field below is set to `Any`.",
                    "type": "string"
                  },
                  "role": {
                    "description": "Specifies the role to select one or more replicas for backup.\n\n\n- If no replica with the specified role exists, the backup task will fail.\n  Special case: If there is only one replica in the cluster, it will be used for backup,\n  even if its role differs from the specified one.\n  For example, if you specify backing up on a secondary replica, but the cluster is single-node\n  with only one primary replica, the primary will be used for backup.\n  Future versions will address this special case using role priorities.\n- If multiple replicas satisfy the specified role, the choice (`Any` or `All`) will be made according to\n  the `strategy` field below.",
                    "type": "string"
                  },
                  "strategy": {
                    "description": "Specifies the PodSelectionStrategy to use when multiple pods are\nselected for the backup target.\nValid values are:\n\n\n- Any: Selects any one pod that matches the labelsSelector.\n- All: Selects all pods that match the labelsSelector.",
                    "type": "string",
                    "enum": [
                      "Any",
                      "All"
                    ]
                  },
                  "useParentSelectedPods": {
                    "description": "UseParentSelectedPods indicates whether to use the pods selected by the parent for backup.\nIf set to true, the backup will use the same pods selected by the parent.\nAnd only takes effect when the 'strategy' is set to 'Any'.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "targetVolumes": {
                "description": "Specifies which volumes from the target should be mounted in the backup workload.",
                "type": "object",
                "properties": {
                  "volumeMounts": {
                    "description": "Specifies the mount for the volumes specified in `volumes` section.",
                    "type": "array",
                    "items": {
                      "description": "VolumeMount describes a mounting of a Volume within a container.",
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                          "type": "string"
                        },
                        "mountPropagation": {
                          "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.",
                          "type": "string"
                        },
                        "name": {
                          "description": "This must match the Name of a Volume.",
                          "type": "string"
                        },
                        "readOnly": {
                          "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                          "type": "boolean"
                        },
                        "subPath": {
                          "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                          "type": "string"
                        },
                        "subPathExpr": {
                          "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "volumes": {
                    "description": "Specifies the list of volumes of targeted application that should be mounted\non the backup workload.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "compDefs": {
          "description": "CompDefs specifies names for the component definitions associated with this BackupPolicyTemplate.\nEach name in the list can represent an exact name, a name prefix, or a regular expression pattern.\n\n\nFor example:\n\n\n- \"mysql-8.0.30-v1alpha1\": Matches the exact name \"mysql-8.0.30-v1alpha1\"\n- \"mysql-8.0.30\": Matches all names starting with \"mysql-8.0.30\"\n- \"^mysql-8.0.\\d{1,2}$\": Matches all names starting with \"mysql-8.0.\" followed by one or two digits.",
          "type": "array",
          "maxItems": 128,
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "retentionPolicy": {
          "description": "Defines the backup retention policy to be used.",
          "type": "string",
          "enum": [
            "retainLatestBackup",
            "none"
          ]
        },
        "schedules": {
          "description": "Defines the execution plans for backup tasks, specifying when and how backups should occur,\nand the retention period of backup files.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "backupMethod",
              "cronExpression"
            ],
            "properties": {
              "backupMethod": {
                "description": "Specifies the backup method name that is defined in backupPolicy.",
                "type": "string"
              },
              "cronExpression": {
                "description": "Specifies the cron expression for the schedule. The timezone is in UTC.\nsee https://en.wikipedia.org/wiki/Cron.",
                "type": "string"
              },
              "enabled": {
                "description": "Specifies whether the backup schedule is enabled or not.",
                "type": "boolean"
              },
              "name": {
                "description": "Specifies the name of the schedule. Names cannot be duplicated.\nIf the name is empty, it will be considered the same as the value of the backupMethod below.",
                "type": "string"
              },
              "parameters": {
                "description": "Specifies a list of name-value pairs representing parameters and their corresponding values.\nParameters match the schema specified in the `actionset.spec.parametersSchema`",
                "type": "array",
                "maxItems": 128,
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "description": "Represents the name of the parameter.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Represents the parameter values.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "retentionPeriod": {
                "description": "Determines the duration for which the backup should be kept.\nKubeBlocks will remove all backups that are older than the RetentionPeriod.\nFor example, RetentionPeriod of `30d` will keep only the backups of last 30 days.\nSample duration format:\n\n\n- years: \t2y\n- months: \t6mo\n- days: \t\t30d\n- hours: \t12h\n- minutes: \t30m\n\n\nYou can also combine the above durations. For example: 30d12h30m",
                "type": "string",
                "default": "7d"
              }
            },
            "additionalProperties": false
          }
        },
        "serviceKind": {
          "description": "Defines the type of well-known service protocol that the BackupPolicyTemplate provides, and it is optional.\nSome examples of well-known service protocols include:\n\n\n- \"MySQL\": Indicates that the Component provides a MySQL database service.\n- \"PostgreSQL\": Indicates that the Component offers a PostgreSQL database service.\n- \"Redis\": Signifies that the Component functions as a Redis key-value store.\n- \"ETCD\": Denotes that the Component serves as an ETCD distributed key-value store",
          "type": "string",
          "maxLength": 32
        },
        "target": {
          "description": "Defines the selection criteria of instance to be backed up, and the connection credential to be used\nduring the backup process.",
          "type": "object",
          "required": [
            "role"
          ],
          "properties": {
            "account": {
              "description": "If `backupPolicy.componentDefs` is set, this field is required to specify the system account name.\nThis account must match one listed in `componentDefinition.spec.systemAccounts[*].name`.\nThe corresponding secret created by this account is used to connect to the database.",
              "type": "string"
            },
            "containerPort": {
              "description": "Specifies the container port in the target pod.\nIf not specified, the first container and its first port will be used.",
              "type": "object",
              "properties": {
                "containerName": {
                  "description": "Specifies the name of container with the port.",
                  "type": "string"
                },
                "portName": {
                  "description": "Specifies the port name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "fallbackRole": {
              "description": "Specifies the fallback role to select one replica for backup, this only takes effect when the\n`strategy` field below is set to `Any`.",
              "type": "string"
            },
            "role": {
              "description": "Specifies the role to select one or more replicas for backup.\n\n\n- If no replica with the specified role exists, the backup task will fail.\n  Special case: If there is only one replica in the cluster, it will be used for backup,\n  even if its role differs from the specified one.\n  For example, if you specify backing up on a secondary replica, but the cluster is single-node\n  with only one primary replica, the primary will be used for backup.\n  Future versions will address this special case using role priorities.\n- If multiple replicas satisfy the specified role, the choice (`Any` or `All`) will be made according to\n  the `strategy` field below.",
              "type": "string"
            },
            "strategy": {
              "description": "Specifies the PodSelectionStrategy to use when multiple pods are\nselected for the backup target.\nValid values are:\n\n\n- Any: Selects any one pod that matches the labelsSelector.\n- All: Selects all pods that match the labelsSelector.",
              "type": "string",
              "enum": [
                "Any",
                "All"
              ]
            },
            "useParentSelectedPods": {
              "description": "UseParentSelectedPods indicates whether to use the pods selected by the parent for backup.\nIf set to true, the backup will use the same pods selected by the parent.\nAnd only takes effect when the 'strategy' is set to 'Any'.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Populated by the system, it represents the current information about the BackupPolicyTemplate.",
      "type": "object",
      "properties": {
        "message": {
          "description": "Provides additional information about the current phase.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "Represents the most recent generation observed for this BackupPolicyTemplate.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the current phase of the BackupPolicyTemplate. Valid values are `empty`, `Available`, `Unavailable`.\nWhen `Available`, the BackupPolicyTemplate is ready and can be referenced by related objects.",
          "type": "string",
          "enum": [
            "Available",
            "Unavailable"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
