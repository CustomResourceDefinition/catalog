{
  "description": "Policy is the Schema for the Policys API. Provides an Application AutoScaling Policy resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PolicySpec defines the desired state of Policy",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "policyType": {
              "description": "Policy type. Valid values are StepScaling, TargetTrackingScaling, and PredictiveScaling. Defaults to StepScaling. Certain services only support only one policy type. For more information see the Target Tracking Scaling Policies, Step Scaling Policies, and Predictive Scaling documentation.",
              "type": "string"
            },
            "predictiveScalingPolicyConfiguration": {
              "description": "Predictive scaling policy configuration, requires policy_type = \"PredictiveScaling\". See supported fields below.",
              "type": "object",
              "properties": {
                "maxCapacityBreachBehavior": {
                  "description": "The behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Valid values are HonorMaxCapacity and IncreaseMaxCapacity.",
                  "type": "string"
                },
                "maxCapacityBuffer": {
                  "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. Required if the max_capacity_breach_behavior argument is set to IncreaseMaxCapacity, and cannot be used otherwise.",
                  "type": "number"
                },
                "metricSpecification": {
                  "description": "Metrics and target utilization to use for predictive scaling. See supported fields below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customizedCapacityMetricSpecification": {
                        "description": "Customized capacity metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "customizedLoadMetricSpecification": {
                        "description": "Customized load metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "customizedScalingMetricSpecification": {
                        "description": "Customized scaling metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedLoadMetricSpecification": {
                        "description": "Predefined load metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedMetricPairSpecification": {
                        "description": "Predefined metric pair specification that determines the appropriate scaling metric and load metric to use. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedScalingMetricSpecification": {
                        "description": "Predefined scaling metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "targetValue": {
                        "description": "Target value for the metric.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "mode": {
                  "description": "Predictive scaling mode. Valid values are ForecastOnly and ForecastAndScale.",
                  "type": "string"
                },
                "schedulingBufferTime": {
                  "description": "Amount of time, in seconds, that the start time can be advanced.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "resourceId": {
              "description": "Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference",
              "type": "string"
            },
            "resourceIdRef": {
              "description": "Reference to a Target in appautoscaling to populate resourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceIdSelector": {
              "description": "Selector for a Target in appautoscaling to populate resourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "scalableDimension": {
              "description": "Scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference",
              "type": "string"
            },
            "scalableDimensionRef": {
              "description": "Reference to a Target in appautoscaling to populate scalableDimension.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "scalableDimensionSelector": {
              "description": "Selector for a Target in appautoscaling to populate scalableDimension.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceNamespace": {
              "description": "AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference",
              "type": "string"
            },
            "serviceNamespaceRef": {
              "description": "Reference to a Target in appautoscaling to populate serviceNamespace.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceNamespaceSelector": {
              "description": "Selector for a Target in appautoscaling to populate serviceNamespace.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "stepScalingPolicyConfiguration": {
              "description": "Step scaling policy configuration, requires policy_type = \"StepScaling\" (default). See supported fields below.",
              "type": "object",
              "properties": {
                "adjustmentType": {
                  "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
                  "type": "string"
                },
                "cooldown": {
                  "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
                  "type": "number"
                },
                "metricAggregationType": {
                  "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
                  "type": "string"
                },
                "minAdjustmentMagnitude": {
                  "description": "Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.",
                  "type": "number"
                },
                "stepAdjustment": {
                  "description": "Set of adjustments that manage scaling. These have the following structure:",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "metricIntervalLowerBound": {
                        "description": "Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.",
                        "type": "string"
                      },
                      "metricIntervalUpperBound": {
                        "description": "Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.",
                        "type": "string"
                      },
                      "scalingAdjustment": {
                        "description": "Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "targetTrackingScalingPolicyConfiguration": {
              "description": "Target tracking policy configuration, requires policy_type = \"TargetTrackingScaling\". See supported fields below.",
              "type": "object",
              "properties": {
                "customizedMetricSpecification": {
                  "description": "Custom CloudWatch metric. Documentation can be found  at: AWS Customized Metric Specification. See supported fields below.",
                  "type": "object",
                  "properties": {
                    "dimensions": {
                      "description": "Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the dimension.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value of the dimension.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "metricName": {
                      "description": "Name of the metric.",
                      "type": "string"
                    },
                    "metrics": {
                      "description": "Metrics to include, as a metric data query.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Short name for the metric used in target tracking scaling policy.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Human-readable label for this metric or expression.",
                            "type": "string"
                          },
                          "metricStat": {
                            "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                            "type": "object",
                            "properties": {
                              "metric": {
                                "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                "type": "object",
                                "properties": {
                                  "dimensions": {
                                    "description": "Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the dimension.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the dimension.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "metricName": {
                                    "description": "Name of the metric.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the metric.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "stat": {
                                "description": "Statistic of the metrics to return.",
                                "type": "string"
                              },
                              "unit": {
                                "description": "Unit of the metric.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "returnData": {
                            "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "namespace": {
                      "description": "Namespace of the metric.",
                      "type": "string"
                    },
                    "statistic": {
                      "description": "Statistic of the metric. Valid values: Average, Minimum, Maximum, SampleCount, and Sum.",
                      "type": "string"
                    },
                    "unit": {
                      "description": "Unit of the metric.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "disableScaleIn": {
                  "description": "Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.",
                  "type": "boolean"
                },
                "predefinedMetricSpecification": {
                  "description": "Predefined metric. See supported fields below.",
                  "type": "object",
                  "properties": {
                    "predefinedMetricType": {
                      "description": "Metric type.",
                      "type": "string"
                    },
                    "resourceLabel": {
                      "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "scaleInCooldown": {
                  "description": "Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.",
                  "type": "number"
                },
                "scaleOutCooldown": {
                  "description": "Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.",
                  "type": "number"
                },
                "targetValue": {
                  "description": "Target value for the metric.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "policyType": {
              "description": "Policy type. Valid values are StepScaling, TargetTrackingScaling, and PredictiveScaling. Defaults to StepScaling. Certain services only support only one policy type. For more information see the Target Tracking Scaling Policies, Step Scaling Policies, and Predictive Scaling documentation.",
              "type": "string"
            },
            "predictiveScalingPolicyConfiguration": {
              "description": "Predictive scaling policy configuration, requires policy_type = \"PredictiveScaling\". See supported fields below.",
              "type": "object",
              "properties": {
                "maxCapacityBreachBehavior": {
                  "description": "The behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Valid values are HonorMaxCapacity and IncreaseMaxCapacity.",
                  "type": "string"
                },
                "maxCapacityBuffer": {
                  "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. Required if the max_capacity_breach_behavior argument is set to IncreaseMaxCapacity, and cannot be used otherwise.",
                  "type": "number"
                },
                "metricSpecification": {
                  "description": "Metrics and target utilization to use for predictive scaling. See supported fields below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customizedCapacityMetricSpecification": {
                        "description": "Customized capacity metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "customizedLoadMetricSpecification": {
                        "description": "Customized load metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "customizedScalingMetricSpecification": {
                        "description": "Customized scaling metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedLoadMetricSpecification": {
                        "description": "Predefined load metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedMetricPairSpecification": {
                        "description": "Predefined metric pair specification that determines the appropriate scaling metric and load metric to use. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedScalingMetricSpecification": {
                        "description": "Predefined scaling metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "targetValue": {
                        "description": "Target value for the metric.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "mode": {
                  "description": "Predictive scaling mode. Valid values are ForecastOnly and ForecastAndScale.",
                  "type": "string"
                },
                "schedulingBufferTime": {
                  "description": "Amount of time, in seconds, that the start time can be advanced.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "stepScalingPolicyConfiguration": {
              "description": "Step scaling policy configuration, requires policy_type = \"StepScaling\" (default). See supported fields below.",
              "type": "object",
              "properties": {
                "adjustmentType": {
                  "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
                  "type": "string"
                },
                "cooldown": {
                  "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
                  "type": "number"
                },
                "metricAggregationType": {
                  "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
                  "type": "string"
                },
                "minAdjustmentMagnitude": {
                  "description": "Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.",
                  "type": "number"
                },
                "stepAdjustment": {
                  "description": "Set of adjustments that manage scaling. These have the following structure:",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "metricIntervalLowerBound": {
                        "description": "Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.",
                        "type": "string"
                      },
                      "metricIntervalUpperBound": {
                        "description": "Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.",
                        "type": "string"
                      },
                      "scalingAdjustment": {
                        "description": "Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "targetTrackingScalingPolicyConfiguration": {
              "description": "Target tracking policy configuration, requires policy_type = \"TargetTrackingScaling\". See supported fields below.",
              "type": "object",
              "properties": {
                "customizedMetricSpecification": {
                  "description": "Custom CloudWatch metric. Documentation can be found  at: AWS Customized Metric Specification. See supported fields below.",
                  "type": "object",
                  "properties": {
                    "dimensions": {
                      "description": "Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the dimension.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value of the dimension.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "metricName": {
                      "description": "Name of the metric.",
                      "type": "string"
                    },
                    "metrics": {
                      "description": "Metrics to include, as a metric data query.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Short name for the metric used in target tracking scaling policy.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Human-readable label for this metric or expression.",
                            "type": "string"
                          },
                          "metricStat": {
                            "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                            "type": "object",
                            "properties": {
                              "metric": {
                                "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                "type": "object",
                                "properties": {
                                  "dimensions": {
                                    "description": "Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the dimension.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the dimension.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "metricName": {
                                    "description": "Name of the metric.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the metric.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "stat": {
                                "description": "Statistic of the metrics to return.",
                                "type": "string"
                              },
                              "unit": {
                                "description": "Unit of the metric.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "returnData": {
                            "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "namespace": {
                      "description": "Namespace of the metric.",
                      "type": "string"
                    },
                    "statistic": {
                      "description": "Statistic of the metric. Valid values: Average, Minimum, Maximum, SampleCount, and Sum.",
                      "type": "string"
                    },
                    "unit": {
                      "description": "Unit of the metric.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "disableScaleIn": {
                  "description": "Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.",
                  "type": "boolean"
                },
                "predefinedMetricSpecification": {
                  "description": "Predefined metric. See supported fields below.",
                  "type": "object",
                  "properties": {
                    "predefinedMetricType": {
                      "description": "Metric type.",
                      "type": "string"
                    },
                    "resourceLabel": {
                      "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "scaleInCooldown": {
                  "description": "Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.",
                  "type": "number"
                },
                "scaleOutCooldown": {
                  "description": "Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.",
                  "type": "number"
                },
                "targetValue": {
                  "description": "Target value for the metric.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PolicyStatus defines the observed state of Policy.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "alarmArns": {
              "description": "List of CloudWatch alarm ARNs associated with the scaling policy.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "arn": {
              "description": "ARN assigned by AWS to the scaling policy.",
              "type": "string"
            },
            "id": {
              "description": "Short name for the metric used in target tracking scaling policy.",
              "type": "string"
            },
            "policyType": {
              "description": "Policy type. Valid values are StepScaling, TargetTrackingScaling, and PredictiveScaling. Defaults to StepScaling. Certain services only support only one policy type. For more information see the Target Tracking Scaling Policies, Step Scaling Policies, and Predictive Scaling documentation.",
              "type": "string"
            },
            "predictiveScalingPolicyConfiguration": {
              "description": "Predictive scaling policy configuration, requires policy_type = \"PredictiveScaling\". See supported fields below.",
              "type": "object",
              "properties": {
                "maxCapacityBreachBehavior": {
                  "description": "The behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity. Valid values are HonorMaxCapacity and IncreaseMaxCapacity.",
                  "type": "string"
                },
                "maxCapacityBuffer": {
                  "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. The value is specified as a percentage relative to the forecast capacity. Required if the max_capacity_breach_behavior argument is set to IncreaseMaxCapacity, and cannot be used otherwise.",
                  "type": "number"
                },
                "metricSpecification": {
                  "description": "Metrics and target utilization to use for predictive scaling. See supported fields below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customizedCapacityMetricSpecification": {
                        "description": "Customized capacity metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "customizedLoadMetricSpecification": {
                        "description": "Customized load metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "customizedScalingMetricSpecification": {
                        "description": "Customized scaling metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "metricDataQuery": {
                            "description": "One or more metric data queries to provide data points for a metric specification. See supported fields below.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "expression": {
                                  "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Short name for the metric used in target tracking scaling policy.",
                                  "type": "string"
                                },
                                "label": {
                                  "description": "Human-readable label for this metric or expression.",
                                  "type": "string"
                                },
                                "metricStat": {
                                  "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "object",
                                      "properties": {
                                        "dimension": {
                                          "description": "Dimensions of the metric. See supported fields below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Name of the dimension.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the dimension.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "metricName": {
                                          "description": "Name of the metric.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the metric.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "returnData": {
                                  "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedLoadMetricSpecification": {
                        "description": "Predefined load metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedMetricPairSpecification": {
                        "description": "Predefined metric pair specification that determines the appropriate scaling metric and load metric to use. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "predefinedScalingMetricSpecification": {
                        "description": "Predefined scaling metric specification. See supported fields below.",
                        "type": "object",
                        "properties": {
                          "predefinedMetricType": {
                            "description": "Metric type.",
                            "type": "string"
                          },
                          "resourceLabel": {
                            "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "targetValue": {
                        "description": "Target value for the metric.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "mode": {
                  "description": "Predictive scaling mode. Valid values are ForecastOnly and ForecastAndScale.",
                  "type": "string"
                },
                "schedulingBufferTime": {
                  "description": "Amount of time, in seconds, that the start time can be advanced.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "resourceId": {
              "description": "Resource type and unique identifier string for the resource associated with the scaling policy. Documentation can be found in the ResourceId parameter at: AWS Application Auto Scaling API Reference",
              "type": "string"
            },
            "scalableDimension": {
              "description": "Scalable dimension of the scalable target. Documentation can be found in the ScalableDimension parameter at: AWS Application Auto Scaling API Reference",
              "type": "string"
            },
            "serviceNamespace": {
              "description": "AWS service namespace of the scalable target. Documentation can be found in the ServiceNamespace parameter at: AWS Application Auto Scaling API Reference",
              "type": "string"
            },
            "stepScalingPolicyConfiguration": {
              "description": "Step scaling policy configuration, requires policy_type = \"StepScaling\" (default). See supported fields below.",
              "type": "object",
              "properties": {
                "adjustmentType": {
                  "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
                  "type": "string"
                },
                "cooldown": {
                  "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
                  "type": "number"
                },
                "metricAggregationType": {
                  "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
                  "type": "string"
                },
                "minAdjustmentMagnitude": {
                  "description": "Minimum number to adjust your scalable dimension as a result of a scaling activity. If the adjustment type is PercentChangeInCapacity, the scaling policy changes the scalable dimension of the scalable target by this amount.",
                  "type": "number"
                },
                "stepAdjustment": {
                  "description": "Set of adjustments that manage scaling. These have the following structure:",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "metricIntervalLowerBound": {
                        "description": "Lower bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as negative infinity.",
                        "type": "string"
                      },
                      "metricIntervalUpperBound": {
                        "description": "Upper bound for the difference between the alarm threshold and the CloudWatch metric. Without a value, AWS will treat this bound as infinity. The upper bound must be greater than the lower bound.",
                        "type": "string"
                      },
                      "scalingAdjustment": {
                        "description": "Number of members by which to scale, when the adjustment bounds are breached. A positive value scales up. A negative value scales down.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "targetTrackingScalingPolicyConfiguration": {
              "description": "Target tracking policy configuration, requires policy_type = \"TargetTrackingScaling\". See supported fields below.",
              "type": "object",
              "properties": {
                "customizedMetricSpecification": {
                  "description": "Custom CloudWatch metric. Documentation can be found  at: AWS Customized Metric Specification. See supported fields below.",
                  "type": "object",
                  "properties": {
                    "dimensions": {
                      "description": "Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the dimension.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value of the dimension.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "metricName": {
                      "description": "Name of the metric.",
                      "type": "string"
                    },
                    "metrics": {
                      "description": "Metrics to include, as a metric data query.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Short name for the metric used in target tracking scaling policy.",
                            "type": "string"
                          },
                          "label": {
                            "description": "Human-readable label for this metric or expression.",
                            "type": "string"
                          },
                          "metricStat": {
                            "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                            "type": "object",
                            "properties": {
                              "metric": {
                                "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                "type": "object",
                                "properties": {
                                  "dimensions": {
                                    "description": "Configuration block(s) with the dimensions of the metric if the metric was published with dimensions. Detailed below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the dimension.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the dimension.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "metricName": {
                                    "description": "Name of the metric.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the metric.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "stat": {
                                "description": "Statistic of the metrics to return.",
                                "type": "string"
                              },
                              "unit": {
                                "description": "Unit of the metric.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "returnData": {
                            "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "namespace": {
                      "description": "Namespace of the metric.",
                      "type": "string"
                    },
                    "statistic": {
                      "description": "Statistic of the metric. Valid values: Average, Minimum, Maximum, SampleCount, and Sum.",
                      "type": "string"
                    },
                    "unit": {
                      "description": "Unit of the metric.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "disableScaleIn": {
                  "description": "Whether scale in by the target tracking policy is disabled. If the value is true, scale in is disabled and the target tracking policy won't remove capacity from the scalable resource. Otherwise, scale in is enabled and the target tracking policy can remove capacity from the scalable resource. The default value is false.",
                  "type": "boolean"
                },
                "predefinedMetricSpecification": {
                  "description": "Predefined metric. See supported fields below.",
                  "type": "object",
                  "properties": {
                    "predefinedMetricType": {
                      "description": "Metric type.",
                      "type": "string"
                    },
                    "resourceLabel": {
                      "description": "Reserved for future use if the predefined_metric_type is not ALBRequestCountPerTarget. If the predefined_metric_type is ALBRequestCountPerTarget, you must specify this argument. Documentation can be found at: AWS Predefined Scaling Metric Specification. Must be less than or equal to 1023 characters in length.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "scaleInCooldown": {
                  "description": "Amount of time, in seconds, after a scale in activity completes before another scale in activity can start.",
                  "type": "number"
                },
                "scaleOutCooldown": {
                  "description": "Amount of time, in seconds, after a scale out activity completes before another scale out activity can start.",
                  "type": "number"
                },
                "targetValue": {
                  "description": "Target value for the metric.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
