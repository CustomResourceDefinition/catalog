{
  "description": "GatewayProxy is the Schema for the gatewayproxies API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "GatewayProxySpec defines the desired state and configuration of a GatewayProxy,\nincluding networking settings, global plugins, and plugin metadata.",
      "type": "object",
      "properties": {
        "pluginMetadata": {
          "description": "PluginMetadata configures common configurations shared by all plugin instances of the same name.",
          "type": "object",
          "additionalProperties": {
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "plugins": {
          "description": "Plugins configure global plugins.",
          "type": "array",
          "items": {
            "description": "GatewayProxyPlugin contains plugin configurations.",
            "type": "object",
            "properties": {
              "config": {
                "description": "Config defines the plugin's configuration details.",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "enabled": {
                "description": "Enabled defines whether the plugin is enabled.",
                "type": "boolean"
              },
              "name": {
                "description": "Name is the name of the plugin.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "provider": {
          "description": "Provider configures the provider details.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "controlPlane": {
              "description": "ControlPlane specifies the configuration for control plane provider.",
              "type": "object",
              "required": [
                "auth"
              ],
              "properties": {
                "auth": {
                  "description": "Auth specifies the authentication configurations.",
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "adminKey": {
                      "description": "AdminKey specifies the admin key authentication configuration.",
                      "type": "object",
                      "properties": {
                        "value": {
                          "description": "Value sets the admin key value explicitly (not recommended for production).",
                          "type": "string"
                        },
                        "valueFrom": {
                          "description": "ValueFrom specifies the source of the admin key.",
                          "type": "object",
                          "properties": {
                            "secretKeyRef": {
                              "description": "SecretKeyRef references a key in a Secret.",
                              "type": "object",
                              "required": [
                                "key",
                                "name"
                              ],
                              "properties": {
                                "key": {
                                  "description": "Key is the key in the secret to retrieve the secret from.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "Type specifies the type of authentication.\nCan only be `AdminKey`.",
                      "type": "string",
                      "enum": [
                        "AdminKey"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "endpoints": {
                  "description": "Endpoints specifies the list of control plane endpoints.",
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string"
                  }
                },
                "service": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "maximum": 65535,
                      "minimum": 1
                    }
                  },
                  "additionalProperties": false
                },
                "tlsVerify": {
                  "description": "TlsVerify specifies whether to verify the TLS certificate of the control plane.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-validations": [
                {
                  "rule": "has(self.endpoints) != has(self.service)"
                }
              ]
            },
            "type": {
              "description": "Type specifies the type of provider. Can only be `ControlPlane`.",
              "type": "string",
              "enum": [
                "ControlPlane"
              ]
            }
          },
          "additionalProperties": false,
          "x-kubernetes-validations": [
            {
              "rule": "self.type == 'ControlPlane' ? has(self.controlPlane) : true",
              "message": "controlPlane must be specified when type is ControlPlane"
            }
          ]
        },
        "publishService": {
          "description": "PublishService specifies the LoadBalancer-type Service whose external address the controller uses to\nupdate the status of Ingress resources.",
          "type": "string"
        },
        "statusAddress": {
          "description": "StatusAddress specifies the external IP addresses that the controller uses to populate the status field\nof GatewayProxy or Ingress resources for developers to access.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  }
}
