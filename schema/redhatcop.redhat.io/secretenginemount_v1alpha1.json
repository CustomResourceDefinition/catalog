{
  "description": "SecretEngineMount is the Schema for the secretenginemounts API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecretEngineMountSpec defines the desired state of SecretEngineMount",
      "type": "object",
      "properties": {
        "authentication": {
          "description": "Authentication is the kube auth configuration to be used to execute this request",
          "type": "object",
          "properties": {
            "namespace": {
              "description": "Namespace is the Vault namespace to be used in all the operations withing this connection/authentication. Only available in Vault Enterprise.",
              "type": "string"
            },
            "path": {
              "description": "Path is the path of the role used for this kube auth authentication. The operator will try to authenticate at {[namespace/]}auth/{spec.path}",
              "type": "string",
              "default": "kubernetes",
              "pattern": "^(?:/?[\\w;:@\u0026=\\$-\\.\\+]*)+/?"
            },
            "role": {
              "description": "Role the role to be used during authentication",
              "type": "string"
            },
            "serviceAccount": {
              "description": "ServiceAccount is the service account used for the kube auth authentication",
              "type": "object",
              "default": {
                "name": "default"
              },
              "properties": {
                "name": {
                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            }
          },
          "additionalProperties": false
        },
        "config": {
          "description": "Specifies configuration options for this mount; if set on a specific mount, values will override any global defaults (e.g. the system TTL/Max TTL)",
          "type": "object",
          "properties": {
            "allowedResponseHeaders": {
              "description": "AllowedResponseHeaders list of headers to whitelist, allowing a plugin to include them in the response.\nkubebuilder:validation:UniqueItems=true",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "auditNonHMACRequestKeys": {
              "description": "AuditNonHMACRequestKeys list of keys that will not be HMAC'd by audit devices in the request data object.\nkubebuilder:validation:UniqueItems=true",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "auditNonHMACResponseKeys": {
              "description": "AuditNonHMACResponseKeys list of keys that will not be HMAC'd by audit devices in the response data object.\nkubebuilder:validation:UniqueItems=true",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "defaultLeaseTTL": {
              "description": "DefaultLeaseTTL  The default lease duration, specified as a string duration like \"5s\" or \"30m\".",
              "type": "string"
            },
            "forceNoCache": {
              "description": "ForceNoCache Disable caching.",
              "type": "boolean",
              "default": false
            },
            "listingVisibility": {
              "description": "ListingVisibility Specifies whether to show this mount in the UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\". If not set, behaves like \"hidden\"",
              "type": "string",
              "default": "hidden",
              "enum": [
                "unauth",
                "hidden"
              ]
            },
            "maxLeaseTTL": {
              "description": "MaxLeaseTTL The maximum lease duration, specified as a string duration like \"5s\" or \"30m\".",
              "type": "string"
            },
            "passthroughRequestHeaders": {
              "description": "PassthroughRequestHeaders list of headers to whitelist and pass from the request to the plugin.\nkubebuilder:validation:UniqueItems=true",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            }
          },
          "additionalProperties": false
        },
        "connection": {
          "description": "Connection represents the information needed to connect to Vault. This operator uses the standard Vault environment variables to connect to Vault. If you need to override those settings and for example connect to a different Vault instance, you can do with this section of the CR.",
          "type": "object",
          "properties": {
            "address": {
              "description": "Address Address of the Vault server expressed as a URL and port, for example: https://127.0.0.1:8200/",
              "type": "string"
            },
            "maxRetries": {
              "description": "MaxRetries Maximum number of retries when certain error codes are encountered. The default is 2, for three total attempts. Set this to 0 or less to disable retrying. Error codes that are retried are 412 (client consistency requirement not satisfied) and all 5xx except for 501 (not implemented).",
              "type": "integer"
            },
            "tLSConfig": {
              "type": "object",
              "properties": {
                "cacert": {
                  "description": "Cacert Path to a PEM-encoded CA certificate file on the local disk. This file is used to verify the Vault server's SSL certificate. This environment variable takes precedence over a cert passed via the secret.",
                  "type": "string"
                },
                "skipVerify": {
                  "description": "SkipVerify Do not verify Vault's presented certificate before communicating with it. Setting this variable is not recommended and voids Vault's security model.",
                  "type": "boolean"
                },
                "tlsSecret": {
                  "description": "TLSSecret namespace-local secret containing the tls material for the connection. the expected keys for the secret are: ca bundle -\u003e \"ca.crt\", certificate -\u003e \"tls.crt\", key -\u003e \"tls.key\"",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "tlsServerName": {
                  "description": "TLSServerName Name to use as the SNI host when connecting via TLS.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "timeOut": {
              "description": "Timeout Timeout variable. The default value is 60s.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "description": {
          "description": "Description Specifies the human-friendly description of the mount.",
          "type": "string"
        },
        "externalEntropyAccess": {
          "description": "ExternalEntropyAccess Enable the secrets engine to access Vault's external entropy source.",
          "type": "boolean",
          "default": false
        },
        "local": {
          "description": "Local Specifies if the secrets engine is a local mount only. Local mounts are not replicated nor (if a secondary) removed by replication.",
          "type": "boolean",
          "default": false
        },
        "name": {
          "description": "The name of the obejct created in Vault. If this is specified it takes precedence over {metatada.name}",
          "type": "string",
          "pattern": "[a-z0-9]([-a-z0-9]*[a-z0-9])?"
        },
        "options": {
          "description": "Options Specifies mount type specific options that are passed to the backend.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-kubernetes-map-type": "granular"
        },
        "path": {
          "description": "Path at which this secret engine will be available\nThe final path in Vault will be {[spec.authentication.namespace]}/{spec.path}/{metadata.name}.\nThe authentication role must have the following capabilities = [ \"create\", \"read\", \"update\", \"delete\"] on that path /sys/mounts/{[spec.authentication.namespace]}/{spec.path}/{metadata.name}.",
          "type": "string",
          "pattern": "^(?:/?[\\w;:@\u0026=\\$-\\.\\+]*)+/?"
        },
        "sealWrap": {
          "description": "SealWrap Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability.",
          "type": "boolean",
          "default": false
        },
        "type": {
          "description": "Type Specifies the type of the backend, such as \"aws\".",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SecretEngineMountStatus defines the observed state of SecretEngineMount",
      "type": "object",
      "properties": {
        "accessor": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "additionalProperties": false
    }
  }
}
