{
  "description": "Certificate is the Schema for the Certificates API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CertificateSpec defines the desired state of Certificate.",
      "type": "object",
      "properties": {
        "certificate": {
          "description": "The Certificate to import into AWS Certificate Manager (ACM) to use with services that are integrated with ACM.\nThis field is only valid when importing an existing certificate into ACM.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "description": "Key is the key within the secret",
              "type": "string"
            },
            "name": {
              "description": "name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "certificateARN": {
          "description": "The Amazon Resource Name (ARN) of an imported certificate to replace. This field is only valid when importing\nan existing certificate into ACM.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "certificateAuthorityARN": {
          "description": "The Amazon Resource Name (ARN) of the private certificate authority (CA)\nthat will be used to issue the certificate. If you do not provide an ARN\nand you are trying to request a private certificate, ACM will attempt to\nissue a public certificate. For more information about private CAs, see the\nAmazon Web Services Private Certificate Authority (https://docs.aws.amazon.com/privateca/latest/userguide/PcaWelcome.html)\nuser guide. The ARN must have the following form:\n\narn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012\n\nRegex Pattern: `^arn:[\\w+=/,.@-]+:acm-pca:[\\w+=/,.@-]*:[0-9]+:[\\w+=,.@-]+(/[\\w+=,.@-]+)*$`",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "certificateAuthorityRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api",
          "type": "object",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "certificateChain": {
          "description": "SecretKeyReference combines a k8s corev1.SecretReference with a\nspecific key within the referred-to Secret",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "description": "Key is the key within the secret",
              "type": "string"
            },
            "name": {
              "description": "name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "domainName": {
          "description": "Fully qualified domain name (FQDN), such as www.example.com, that you want\nto secure with an ACM certificate. Use an asterisk (*) to create a wildcard\ncertificate that protects several sites in the same domain. For example,\n*.example.com protects www.example.com, site.example.com, and images.example.com.\n\nIn compliance with RFC 5280 (https://datatracker.ietf.org/doc/html/rfc5280),\nthe length of the domain name (technically, the Common Name) that you provide\ncannot exceed 64 octets (characters), including periods. To add a longer\ndomain name, specify it in the Subject Alternative Name field, which supports\nnames up to 253 octets in length.\n\nRegex Pattern: `^(\\*\\.)?(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])$`",
          "type": "string"
        },
        "domainValidationOptions": {
          "description": "The domain name that you want ACM to use to send you emails so that you can\nvalidate domain ownership.",
          "type": "array",
          "items": {
            "description": "Contains information about the domain names that you want ACM to use to send\nyou emails that enable you to validate domain ownership.",
            "type": "object",
            "properties": {
              "domainName": {
                "type": "string"
              },
              "validationDomain": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "keyAlgorithm": {
          "description": "Specifies the algorithm of the public and private key pair that your certificate\nuses to encrypt data. RSA is the default key algorithm for ACM certificates.\nElliptic Curve Digital Signature Algorithm (ECDSA) keys are smaller, offering\nsecurity comparable to RSA keys but with greater computing efficiency. However,\nECDSA is not supported by all network clients. Some Amazon Web Services services\nmay require RSA keys, or only support ECDSA keys of a particular size, while\nothers allow the use of either RSA and ECDSA keys to ensure that compatibility\nis not broken. Check the requirements for the Amazon Web Services service\nwhere you plan to deploy your certificate. For more information about selecting\nan algorithm, see Key algorithms (https://docs.aws.amazon.com/acm/latest/userguide/acm-certificate.html#algorithms).\n\nAlgorithms supported for an ACM certificate request include:\n\n   * RSA_2048\n\n   * EC_prime256v1\n\n   * EC_secp384r1\n\nOther listed algorithms are for imported certificates only.\n\nWhen you request a private PKI certificate signed by a CA from Amazon Web\nServices Private CA, the specified signing algorithm family (RSA or ECDSA)\nmust match the algorithm family of the CA's secret key.\n\nDefault: RSA_2048",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "options": {
          "description": "Currently, you can use this parameter to specify whether to add the certificate\nto a certificate transparency log. Certificate transparency makes it possible\nto detect SSL/TLS certificates that have been mistakenly or maliciously issued.\nCertificates that have not been logged typically produce an error message\nin a browser. For more information, see Opting Out of Certificate Transparency\nLogging (https://docs.aws.amazon.com/acm/latest/userguide/acm-bestpractices.html#best-practices-transparency).",
          "type": "object",
          "properties": {
            "certificateTransparencyLoggingPreference": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "privateKey": {
          "description": "The private key that matches the public key in the certificate. This field is only valid when importing\nan existing certificate into ACM.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "description": "Key is the key within the secret",
              "type": "string"
            },
            "name": {
              "description": "name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "subjectAlternativeNames": {
          "description": "Additional FQDNs to be included in the Subject Alternative Name extension\nof the ACM certificate. For example, add the name www.example.net to a certificate\nfor which the DomainName field is www.example.com if users can reach your\nsite by using either name. The maximum number of domain names that you can\nadd to an ACM certificate is 100. However, the initial quota is 10 domain\nnames. If you need more than 10 names, you must request a quota increase.\nFor more information, see Quotas (https://docs.aws.amazon.com/acm/latest/userguide/acm-limits.html).\n\nThe maximum length of a SAN DNS name is 253 octets. The name is made up of\nmultiple labels separated by periods. No label can be longer than 63 octets.\nConsider the following examples:\n\n   * (63 octets).(63 octets).(63 octets).(61 octets) is legal because the\n   total length is 253 octets (63+1+63+1+63+1+61) and no label exceeds 63\n   octets.\n\n   * (64 octets).(63 octets).(63 octets).(61 octets) is not legal because\n   the total length exceeds 253 octets (64+1+63+1+63+1+61) and the first\n   label exceeds 63 octets.\n\n   * (63 octets).(63 octets).(63 octets).(62 octets) is not legal because\n   the total length of the DNS name (63+1+63+1+63+1+62) exceeds 253 octets.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "description": "One or more resource tags to associate with the certificate.",
          "type": "array",
          "items": {
            "description": "A key-value pair that identifies or specifies metadata about an ACM resource.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CertificateStatus defines the observed state of Certificate",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "createdAt": {
          "description": "The time at which the certificate was requested.",
          "type": "string",
          "format": "date-time"
        },
        "domainValidations": {
          "description": "Contains information about the initial validation of each domain name that\noccurs as a result of the RequestCertificate request. This field exists only\nwhen the certificate type is AMAZON_ISSUED.",
          "type": "array",
          "items": {
            "description": "Contains information about the validation of each domain name in the certificate.",
            "type": "object",
            "properties": {
              "domainName": {
                "type": "string"
              },
              "resourceRecord": {
                "description": "Contains a DNS record value that you can use to validate ownership or control\nof a domain. This is used by the DescribeCertificate action.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type_": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "validationDomain": {
                "type": "string"
              },
              "validationEmails": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "validationMethod": {
                "type": "string"
              },
              "validationStatus": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "extendedKeyUsages": {
          "description": "Contains a list of Extended Key Usage X.509 v3 extension objects. Each object\nspecifies a purpose for which the certificate public key can be used and\nconsists of a name and an object identifier (OID).",
          "type": "array",
          "items": {
            "description": "The Extended Key Usage X.509 v3 extension defines one or more purposes for\nwhich the public key can be used. This is in addition to or in place of the\nbasic purposes specified by the Key Usage extension.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "oid": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "failureReason": {
          "description": "The reason the certificate request failed. This value exists only when the\ncertificate status is FAILED. For more information, see Certificate Request\nFailed (https://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed)\nin the Certificate Manager User Guide.",
          "type": "string"
        },
        "importedAt": {
          "description": "The date and time when the certificate was imported. This value exists only\nwhen the certificate type is IMPORTED.",
          "type": "string",
          "format": "date-time"
        },
        "inUseBy": {
          "description": "A list of ARNs for the Amazon Web Services resources that are using the certificate.\nA certificate can be used by multiple Amazon Web Services resources.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issuedAt": {
          "description": "The time at which the certificate was issued. This value exists only when\nthe certificate type is AMAZON_ISSUED.",
          "type": "string",
          "format": "date-time"
        },
        "issuer": {
          "description": "The name of the certificate authority that issued and signed the certificate.",
          "type": "string"
        },
        "keyUsages": {
          "description": "A list of Key Usage X.509 v3 extension objects. Each object is a string value\nthat identifies the purpose of the public key contained in the certificate.\nPossible extension values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION,\nand more.",
          "type": "array",
          "items": {
            "description": "The Key Usage X.509 v3 extension defines the purpose of the public key contained\nin the certificate.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "notAfter": {
          "description": "The time after which the certificate is not valid.",
          "type": "string",
          "format": "date-time"
        },
        "notBefore": {
          "description": "The time before which the certificate is not valid.",
          "type": "string",
          "format": "date-time"
        },
        "renewalEligibility": {
          "description": "Specifies whether the certificate is eligible for renewal. At this time,\nonly exported private certificates can be renewed with the RenewCertificate\ncommand.",
          "type": "string"
        },
        "renewalSummary": {
          "description": "Contains information about the status of ACM's managed renewal (https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html)\nfor the certificate. This field exists only when the certificate type is\nAMAZON_ISSUED.",
          "type": "object",
          "properties": {
            "domainValidationOptions": {
              "type": "array",
              "items": {
                "description": "Contains information about the validation of each domain name in the certificate.",
                "type": "object",
                "properties": {
                  "domainName": {
                    "type": "string"
                  },
                  "resourceRecord": {
                    "description": "Contains a DNS record value that you can use to validate ownership or control\nof a domain. This is used by the DescribeCertificate action.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type_": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "validationDomain": {
                    "type": "string"
                  },
                  "validationEmails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "validationMethod": {
                    "type": "string"
                  },
                  "validationStatus": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "renewalStatus": {
              "type": "string"
            },
            "renewalStatusReason": {
              "type": "string"
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "revocationReason": {
          "description": "The reason the certificate was revoked. This value exists only when the certificate\nstatus is REVOKED.",
          "type": "string"
        },
        "revokedAt": {
          "description": "The time at which the certificate was revoked. This value exists only when\nthe certificate status is REVOKED.",
          "type": "string",
          "format": "date-time"
        },
        "serial": {
          "description": "The serial number of the certificate.",
          "type": "string"
        },
        "signatureAlgorithm": {
          "description": "The algorithm that was used to sign the certificate.",
          "type": "string"
        },
        "status": {
          "description": "The status of the certificate.\n\nA certificate enters status PENDING_VALIDATION upon being requested, unless\nit fails for any of the reasons given in the troubleshooting topic Certificate\nrequest fails (https://docs.aws.amazon.com/acm/latest/userguide/troubleshooting-failed.html).\nACM makes repeated attempts to validate a certificate for 72 hours and then\ntimes out. If a certificate shows status FAILED or VALIDATION_TIMED_OUT,\ndelete the request, correct the issue with DNS validation (https://docs.aws.amazon.com/acm/latest/userguide/dns-validation.html)\nor Email validation (https://docs.aws.amazon.com/acm/latest/userguide/email-validation.html),\nand try again. If validation succeeds, the certificate enters status ISSUED.",
          "type": "string"
        },
        "subject": {
          "description": "The name of the entity that is associated with the public key contained in\nthe certificate.",
          "type": "string"
        },
        "type_": {
          "description": "The source of the certificate. For certificates provided by ACM, this value\nis AMAZON_ISSUED. For certificates that you imported with ImportCertificate,\nthis value is IMPORTED. ACM does not provide managed renewal (https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html)\nfor imported certificates. For more information about the differences between\ncertificates that you import and those that ACM provides, see Importing Certificates\n(https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html)\nin the Certificate Manager User Guide.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
