{
  "description": "Product is the Schema for the products API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ProductSpec defines the desired state of Product",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "applicationPlans": {
          "description": "Application Plans Map: system_name -\u003e Application Plan Spec",
          "type": "object",
          "additionalProperties": {
            "description": "ApplicationPlanSpec defines the desired state of Product's Application Plan",
            "type": "object",
            "properties": {
              "appsRequireApproval": {
                "description": "Set whether or not applications can be created on demand or if approval is required from you before they are activated.",
                "type": "boolean"
              },
              "costMonth": {
                "description": "Cost per Month (USD)",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{2})?$"
              },
              "limits": {
                "description": "Limits",
                "type": "array",
                "items": {
                  "description": "LimitSpec defines the maximum value a metric can take on a contract before the user is no longer authorized to use resources. Once a limit has been passed in a given period, reject messages will be issued if the service is accessed under this contract.",
                  "type": "object",
                  "required": [
                    "metricMethodRef",
                    "period",
                    "value"
                  ],
                  "properties": {
                    "metricMethodRef": {
                      "description": "Metric or Method Reference",
                      "type": "object",
                      "required": [
                        "systemName"
                      ],
                      "properties": {
                        "backend": {
                          "description": "BackendSystemName identifies uniquely the backend Backend reference must be used by the product",
                          "type": "string"
                        },
                        "systemName": {
                          "description": "SystemName identifies uniquely the metric or methods",
                          "type": "string"
                        }
                      }
                    },
                    "period": {
                      "description": "Limit Period",
                      "type": "string",
                      "enum": [
                        "eternity",
                        "year",
                        "month",
                        "week",
                        "day",
                        "hour",
                        "minute"
                      ]
                    },
                    "value": {
                      "description": "Limit Value",
                      "type": "integer"
                    }
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "pricingRules": {
                "description": "Pricing Rules",
                "type": "array",
                "items": {
                  "description": "PricingRuleSpec defines the cost of each operation performed on an API. Multiple pricing rules on the same metric divide up the ranges of when a pricing rule applies.",
                  "type": "object",
                  "required": [
                    "from",
                    "metricMethodRef",
                    "pricePerUnit",
                    "to"
                  ],
                  "properties": {
                    "from": {
                      "description": "Range From",
                      "type": "integer"
                    },
                    "metricMethodRef": {
                      "description": "Metric or Method Reference",
                      "type": "object",
                      "required": [
                        "systemName"
                      ],
                      "properties": {
                        "backend": {
                          "description": "BackendSystemName identifies uniquely the backend Backend reference must be used by the product",
                          "type": "string"
                        },
                        "systemName": {
                          "description": "SystemName identifies uniquely the metric or methods",
                          "type": "string"
                        }
                      }
                    },
                    "pricePerUnit": {
                      "description": "Price per unit (USD)",
                      "type": "string",
                      "pattern": "^\\d+(\\.\\d{2})?$"
                    },
                    "to": {
                      "description": "Range To",
                      "type": "integer"
                    }
                  }
                }
              },
              "published": {
                "description": "Controls whether the application plan is published. If not specified it is hidden by default",
                "type": "boolean"
              },
              "setupFee": {
                "description": "Setup fee (USD)",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{2})?$"
              },
              "trialPeriod": {
                "description": "Trial Period (days)",
                "type": "integer",
                "minimum": 0
              }
            }
          }
        },
        "backendUsages": {
          "description": "Backend usage will be a map of Map: system_name -\u003e BackendUsageSpec Having system_name as the index, the structure ensures one backend is not used multiple times.",
          "type": "object",
          "additionalProperties": {
            "description": "BackendUsageSpec defines the desired state of Product's Backend Usages",
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "type": "string"
              }
            }
          }
        },
        "deployment": {
          "description": "Deployment defined 3scale product deployment mode",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "apicastHosted"
              ]
            },
            {
              "required": [
                "apicastSelfManaged"
              ]
            }
          ],
          "properties": {
            "apicastHosted": {
              "description": "ApicastHostedSpec defines the desired state of Product Apicast Hosted",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "AuthenticationSpec defines the desired state of Product Authentication",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "userkey"
                      ]
                    },
                    {
                      "required": [
                        "appKeyAppID"
                      ]
                    },
                    {
                      "required": [
                        "oidc"
                      ]
                    }
                  ],
                  "properties": {
                    "appKeyAppID": {
                      "description": "AppKeyAppIDAuthenticationSpec defines the desired state of AppKey\u0026AppId Authentication",
                      "type": "object",
                      "properties": {
                        "appID": {
                          "description": "AppID is the name of the parameter that acts of behalf of app id",
                          "type": "string"
                        },
                        "appKey": {
                          "description": "AppKey is the name of the parameter that acts of behalf of app key",
                          "type": "string"
                        },
                        "credentials": {
                          "description": "CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication",
                          "type": "string",
                          "enum": [
                            "headers",
                            "query",
                            "authorization"
                          ]
                        },
                        "gatewayResponse": {
                          "description": "GatewayResponseSpec defines the desired gateway response configuration",
                          "type": "object",
                          "properties": {
                            "errorAuthFailed": {
                              "description": "ErrorAuthFailed specifies the response body when authentication fails",
                              "type": "string"
                            },
                            "errorAuthMissing": {
                              "description": "ErrorAuthMissing specifies the response body when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersAuthFailed": {
                              "description": "ErrorHeadersAuthFailed specifies the Content-Type header when authentication fails",
                              "type": "string"
                            },
                            "errorHeadersAuthMissing": {
                              "description": "ErrorHeadersAuthMissing specifies the Content-Type header when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersLimitsExceeded": {
                              "description": "ErrorHeadersLimitsExceeded specifies the Content-Type header when usage limit exceeded",
                              "type": "string"
                            },
                            "errorHeadersNoMatch": {
                              "description": "ErrorHeadersNoMatch specifies the Content-Type header when no match error",
                              "type": "string"
                            },
                            "errorLimitsExceeded": {
                              "description": "ErrorLimitsExceeded specifies the response body when usage limit exceeded",
                              "type": "string"
                            },
                            "errorNoMatch": {
                              "description": "ErrorNoMatch specifies the response body when no match error",
                              "type": "string"
                            },
                            "errorStatusAuthFailed": {
                              "description": "ErrorStatusAuthFailed specifies the response code when authentication fails",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusAuthMissing": {
                              "description": "ErrorStatusAuthMissing specifies the response code when authentication is missing",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusLimitsExceeded": {
                              "description": "ErrorStatusLimitsExceeded specifies the response code when usage limit exceeded",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusNoMatch": {
                              "description": "ErrorStatusNoMatch specifies the response code when no match error",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "additionalProperties": false
                        },
                        "security": {
                          "description": "SecuritySpec defines the desired state of Authentication Security",
                          "type": "object",
                          "properties": {
                            "hostHeader": {
                              "description": "HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.",
                              "type": "string"
                            },
                            "secretToken": {
                              "description": "SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "oidc": {
                      "description": "OIDCSpec defines the desired configuration of OpenID Connect Authentication",
                      "type": "object",
                      "required": [
                        "issuerType"
                      ],
                      "properties": {
                        "authenticationFlow": {
                          "description": "AuthenticationFlow specifies OAuth2.0 authorization grant type",
                          "type": "object",
                          "required": [
                            "directAccessGrantsEnabled",
                            "implicitFlowEnabled",
                            "serviceAccountsEnabled",
                            "standardFlowEnabled"
                          ],
                          "properties": {
                            "directAccessGrantsEnabled": {
                              "type": "boolean"
                            },
                            "implicitFlowEnabled": {
                              "type": "boolean"
                            },
                            "serviceAccountsEnabled": {
                              "type": "boolean"
                            },
                            "standardFlowEnabled": {
                              "description": "OIDCIssuer is the OIDC issuer",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false
                        },
                        "credentials": {
                          "description": "Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication",
                          "type": "string",
                          "enum": [
                            "headers",
                            "query",
                            "authorization"
                          ]
                        },
                        "gatewayResponse": {
                          "description": "GatewayResponseSpec defines the desired gateway response configuration",
                          "type": "object",
                          "properties": {
                            "errorAuthFailed": {
                              "description": "ErrorAuthFailed specifies the response body when authentication fails",
                              "type": "string"
                            },
                            "errorAuthMissing": {
                              "description": "ErrorAuthMissing specifies the response body when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersAuthFailed": {
                              "description": "ErrorHeadersAuthFailed specifies the Content-Type header when authentication fails",
                              "type": "string"
                            },
                            "errorHeadersAuthMissing": {
                              "description": "ErrorHeadersAuthMissing specifies the Content-Type header when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersLimitsExceeded": {
                              "description": "ErrorHeadersLimitsExceeded specifies the Content-Type header when usage limit exceeded",
                              "type": "string"
                            },
                            "errorHeadersNoMatch": {
                              "description": "ErrorHeadersNoMatch specifies the Content-Type header when no match error",
                              "type": "string"
                            },
                            "errorLimitsExceeded": {
                              "description": "ErrorLimitsExceeded specifies the response body when usage limit exceeded",
                              "type": "string"
                            },
                            "errorNoMatch": {
                              "description": "ErrorNoMatch specifies the response body when no match error",
                              "type": "string"
                            },
                            "errorStatusAuthFailed": {
                              "description": "ErrorStatusAuthFailed specifies the response code when authentication fails",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusAuthMissing": {
                              "description": "ErrorStatusAuthMissing specifies the response code when authentication is missing",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusLimitsExceeded": {
                              "description": "ErrorStatusLimitsExceeded specifies the response code when usage limit exceeded",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusNoMatch": {
                              "description": "ErrorStatusNoMatch specifies the response code when no match error",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "additionalProperties": false
                        },
                        "issuerEndpoint": {
                          "description": "Issuer is the OIDC issuer",
                          "type": "string"
                        },
                        "issuerEndpointRef": {
                          "description": "IssuerEndpointRef  is the reference to OIDC issuer Secret that contains IssuerEndpoint",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "name is unique within a namespace to reference a secret resource.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "namespace defines the space within which the secret name must be unique.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "issuerType": {
                          "description": "IssuerType is the type of the OIDC issuer",
                          "type": "string",
                          "enum": [
                            "keycloak",
                            "rest"
                          ]
                        },
                        "jwtClaimWithClientID": {
                          "description": "JwtClaimWithClientID is the JSON Web Token (JWT) Claim with ClientID that contains the clientID. Defaults to 'azp'.",
                          "type": "string"
                        },
                        "jwtClaimWithClientIDType": {
                          "description": "JwtClaimWithClientIDType sets to process the ClientID Token Claim value as a string or as a liquid template.",
                          "type": "string",
                          "enum": [
                            "plain",
                            "liquid"
                          ]
                        },
                        "security": {
                          "description": "SecuritySpec defines the desired state of Authentication Security",
                          "type": "object",
                          "properties": {
                            "hostHeader": {
                              "description": "HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.",
                              "type": "string"
                            },
                            "secretToken": {
                              "description": "SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "userkey": {
                      "description": "UserKeyAuthenticationSpec defines the desired state of User Key Authentication",
                      "type": "object",
                      "properties": {
                        "authUserKey": {
                          "type": "string"
                        },
                        "credentials": {
                          "description": "Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication",
                          "type": "string",
                          "enum": [
                            "headers",
                            "query",
                            "authorization"
                          ]
                        },
                        "gatewayResponse": {
                          "description": "GatewayResponseSpec defines the desired gateway response configuration",
                          "type": "object",
                          "properties": {
                            "errorAuthFailed": {
                              "description": "ErrorAuthFailed specifies the response body when authentication fails",
                              "type": "string"
                            },
                            "errorAuthMissing": {
                              "description": "ErrorAuthMissing specifies the response body when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersAuthFailed": {
                              "description": "ErrorHeadersAuthFailed specifies the Content-Type header when authentication fails",
                              "type": "string"
                            },
                            "errorHeadersAuthMissing": {
                              "description": "ErrorHeadersAuthMissing specifies the Content-Type header when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersLimitsExceeded": {
                              "description": "ErrorHeadersLimitsExceeded specifies the Content-Type header when usage limit exceeded",
                              "type": "string"
                            },
                            "errorHeadersNoMatch": {
                              "description": "ErrorHeadersNoMatch specifies the Content-Type header when no match error",
                              "type": "string"
                            },
                            "errorLimitsExceeded": {
                              "description": "ErrorLimitsExceeded specifies the response body when usage limit exceeded",
                              "type": "string"
                            },
                            "errorNoMatch": {
                              "description": "ErrorNoMatch specifies the response body when no match error",
                              "type": "string"
                            },
                            "errorStatusAuthFailed": {
                              "description": "ErrorStatusAuthFailed specifies the response code when authentication fails",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusAuthMissing": {
                              "description": "ErrorStatusAuthMissing specifies the response code when authentication is missing",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusLimitsExceeded": {
                              "description": "ErrorStatusLimitsExceeded specifies the response code when usage limit exceeded",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusNoMatch": {
                              "description": "ErrorStatusNoMatch specifies the response code when no match error",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "additionalProperties": false
                        },
                        "security": {
                          "description": "SecuritySpec defines the desired state of Authentication Security",
                          "type": "object",
                          "properties": {
                            "hostHeader": {
                              "description": "HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.",
                              "type": "string"
                            },
                            "secretToken": {
                              "description": "SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "apicastSelfManaged": {
              "description": "ApicastSelfManagedSpec defines the desired state of Product Apicast Self Managed",
              "type": "object",
              "properties": {
                "authentication": {
                  "description": "AuthenticationSpec defines the desired state of Product Authentication",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "userkey"
                      ]
                    },
                    {
                      "required": [
                        "appKeyAppID"
                      ]
                    },
                    {
                      "required": [
                        "oidc"
                      ]
                    }
                  ],
                  "properties": {
                    "appKeyAppID": {
                      "description": "AppKeyAppIDAuthenticationSpec defines the desired state of AppKey\u0026AppId Authentication",
                      "type": "object",
                      "properties": {
                        "appID": {
                          "description": "AppID is the name of the parameter that acts of behalf of app id",
                          "type": "string"
                        },
                        "appKey": {
                          "description": "AppKey is the name of the parameter that acts of behalf of app key",
                          "type": "string"
                        },
                        "credentials": {
                          "description": "CredentialsLoc available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication",
                          "type": "string",
                          "enum": [
                            "headers",
                            "query",
                            "authorization"
                          ]
                        },
                        "gatewayResponse": {
                          "description": "GatewayResponseSpec defines the desired gateway response configuration",
                          "type": "object",
                          "properties": {
                            "errorAuthFailed": {
                              "description": "ErrorAuthFailed specifies the response body when authentication fails",
                              "type": "string"
                            },
                            "errorAuthMissing": {
                              "description": "ErrorAuthMissing specifies the response body when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersAuthFailed": {
                              "description": "ErrorHeadersAuthFailed specifies the Content-Type header when authentication fails",
                              "type": "string"
                            },
                            "errorHeadersAuthMissing": {
                              "description": "ErrorHeadersAuthMissing specifies the Content-Type header when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersLimitsExceeded": {
                              "description": "ErrorHeadersLimitsExceeded specifies the Content-Type header when usage limit exceeded",
                              "type": "string"
                            },
                            "errorHeadersNoMatch": {
                              "description": "ErrorHeadersNoMatch specifies the Content-Type header when no match error",
                              "type": "string"
                            },
                            "errorLimitsExceeded": {
                              "description": "ErrorLimitsExceeded specifies the response body when usage limit exceeded",
                              "type": "string"
                            },
                            "errorNoMatch": {
                              "description": "ErrorNoMatch specifies the response body when no match error",
                              "type": "string"
                            },
                            "errorStatusAuthFailed": {
                              "description": "ErrorStatusAuthFailed specifies the response code when authentication fails",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusAuthMissing": {
                              "description": "ErrorStatusAuthMissing specifies the response code when authentication is missing",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusLimitsExceeded": {
                              "description": "ErrorStatusLimitsExceeded specifies the response code when usage limit exceeded",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusNoMatch": {
                              "description": "ErrorStatusNoMatch specifies the response code when no match error",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "additionalProperties": false
                        },
                        "security": {
                          "description": "SecuritySpec defines the desired state of Authentication Security",
                          "type": "object",
                          "properties": {
                            "hostHeader": {
                              "description": "HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.",
                              "type": "string"
                            },
                            "secretToken": {
                              "description": "SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "oidc": {
                      "description": "OIDCSpec defines the desired configuration of OpenID Connect Authentication",
                      "type": "object",
                      "required": [
                        "issuerType"
                      ],
                      "properties": {
                        "authenticationFlow": {
                          "description": "AuthenticationFlow specifies OAuth2.0 authorization grant type",
                          "type": "object",
                          "required": [
                            "directAccessGrantsEnabled",
                            "implicitFlowEnabled",
                            "serviceAccountsEnabled",
                            "standardFlowEnabled"
                          ],
                          "properties": {
                            "directAccessGrantsEnabled": {
                              "type": "boolean"
                            },
                            "implicitFlowEnabled": {
                              "type": "boolean"
                            },
                            "serviceAccountsEnabled": {
                              "type": "boolean"
                            },
                            "standardFlowEnabled": {
                              "description": "OIDCIssuer is the OIDC issuer",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false
                        },
                        "credentials": {
                          "description": "Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication",
                          "type": "string",
                          "enum": [
                            "headers",
                            "query",
                            "authorization"
                          ]
                        },
                        "gatewayResponse": {
                          "description": "GatewayResponseSpec defines the desired gateway response configuration",
                          "type": "object",
                          "properties": {
                            "errorAuthFailed": {
                              "description": "ErrorAuthFailed specifies the response body when authentication fails",
                              "type": "string"
                            },
                            "errorAuthMissing": {
                              "description": "ErrorAuthMissing specifies the response body when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersAuthFailed": {
                              "description": "ErrorHeadersAuthFailed specifies the Content-Type header when authentication fails",
                              "type": "string"
                            },
                            "errorHeadersAuthMissing": {
                              "description": "ErrorHeadersAuthMissing specifies the Content-Type header when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersLimitsExceeded": {
                              "description": "ErrorHeadersLimitsExceeded specifies the Content-Type header when usage limit exceeded",
                              "type": "string"
                            },
                            "errorHeadersNoMatch": {
                              "description": "ErrorHeadersNoMatch specifies the Content-Type header when no match error",
                              "type": "string"
                            },
                            "errorLimitsExceeded": {
                              "description": "ErrorLimitsExceeded specifies the response body when usage limit exceeded",
                              "type": "string"
                            },
                            "errorNoMatch": {
                              "description": "ErrorNoMatch specifies the response body when no match error",
                              "type": "string"
                            },
                            "errorStatusAuthFailed": {
                              "description": "ErrorStatusAuthFailed specifies the response code when authentication fails",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusAuthMissing": {
                              "description": "ErrorStatusAuthMissing specifies the response code when authentication is missing",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusLimitsExceeded": {
                              "description": "ErrorStatusLimitsExceeded specifies the response code when usage limit exceeded",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusNoMatch": {
                              "description": "ErrorStatusNoMatch specifies the response code when no match error",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "additionalProperties": false
                        },
                        "issuerEndpoint": {
                          "description": "Issuer is the OIDC issuer",
                          "type": "string"
                        },
                        "issuerEndpointRef": {
                          "description": "IssuerEndpointRef  is the reference to OIDC issuer Secret that contains IssuerEndpoint",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "name is unique within a namespace to reference a secret resource.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "namespace defines the space within which the secret name must be unique.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "issuerType": {
                          "description": "IssuerType is the type of the OIDC issuer",
                          "type": "string",
                          "enum": [
                            "keycloak",
                            "rest"
                          ]
                        },
                        "jwtClaimWithClientID": {
                          "description": "JwtClaimWithClientID is the JSON Web Token (JWT) Claim with ClientID that contains the clientID. Defaults to 'azp'.",
                          "type": "string"
                        },
                        "jwtClaimWithClientIDType": {
                          "description": "JwtClaimWithClientIDType sets to process the ClientID Token Claim value as a string or as a liquid template.",
                          "type": "string",
                          "enum": [
                            "plain",
                            "liquid"
                          ]
                        },
                        "security": {
                          "description": "SecuritySpec defines the desired state of Authentication Security",
                          "type": "object",
                          "properties": {
                            "hostHeader": {
                              "description": "HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.",
                              "type": "string"
                            },
                            "secretToken": {
                              "description": "SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "userkey": {
                      "description": "UserKeyAuthenticationSpec defines the desired state of User Key Authentication",
                      "type": "object",
                      "properties": {
                        "authUserKey": {
                          "type": "string"
                        },
                        "credentials": {
                          "description": "Credentials Location available options: headers: As HTTP Headers query: As query parameters (GET) or body parameters (POST/PUT/DELETE) authorization: As HTTP Basic Authentication",
                          "type": "string",
                          "enum": [
                            "headers",
                            "query",
                            "authorization"
                          ]
                        },
                        "gatewayResponse": {
                          "description": "GatewayResponseSpec defines the desired gateway response configuration",
                          "type": "object",
                          "properties": {
                            "errorAuthFailed": {
                              "description": "ErrorAuthFailed specifies the response body when authentication fails",
                              "type": "string"
                            },
                            "errorAuthMissing": {
                              "description": "ErrorAuthMissing specifies the response body when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersAuthFailed": {
                              "description": "ErrorHeadersAuthFailed specifies the Content-Type header when authentication fails",
                              "type": "string"
                            },
                            "errorHeadersAuthMissing": {
                              "description": "ErrorHeadersAuthMissing specifies the Content-Type header when authentication is missing",
                              "type": "string"
                            },
                            "errorHeadersLimitsExceeded": {
                              "description": "ErrorHeadersLimitsExceeded specifies the Content-Type header when usage limit exceeded",
                              "type": "string"
                            },
                            "errorHeadersNoMatch": {
                              "description": "ErrorHeadersNoMatch specifies the Content-Type header when no match error",
                              "type": "string"
                            },
                            "errorLimitsExceeded": {
                              "description": "ErrorLimitsExceeded specifies the response body when usage limit exceeded",
                              "type": "string"
                            },
                            "errorNoMatch": {
                              "description": "ErrorNoMatch specifies the response body when no match error",
                              "type": "string"
                            },
                            "errorStatusAuthFailed": {
                              "description": "ErrorStatusAuthFailed specifies the response code when authentication fails",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusAuthMissing": {
                              "description": "ErrorStatusAuthMissing specifies the response code when authentication is missing",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusLimitsExceeded": {
                              "description": "ErrorStatusLimitsExceeded specifies the response code when usage limit exceeded",
                              "type": "integer",
                              "format": "int32"
                            },
                            "errorStatusNoMatch": {
                              "description": "ErrorStatusNoMatch specifies the response code when no match error",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "additionalProperties": false
                        },
                        "security": {
                          "description": "SecuritySpec defines the desired state of Authentication Security",
                          "type": "object",
                          "properties": {
                            "hostHeader": {
                              "description": "HostHeader Lets you define a custom Host request header. This is needed if your API backend only accepts traffic from a specific host.",
                              "type": "string"
                            },
                            "secretToken": {
                              "description": "SecretToken Enables you to block any direct developer requests to your API backend; each 3scale API gateway call to your API backend contains a request header called X-3scale-proxy-secret-token. The value of this header can be set by you here. It's up to you ensure your backend only allows calls with this secret header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "productionPublicBaseURL": {
                  "type": "string",
                  "pattern": "^https?:\\/\\/.*$"
                },
                "stagingPublicBaseURL": {
                  "type": "string",
                  "pattern": "^https?:\\/\\/.*$"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "description": {
          "description": "Description is a human readable text of the product",
          "type": "string"
        },
        "mappingRules": {
          "description": "Mapping Rules Array: MappingRule Spec",
          "type": "array",
          "items": {
            "description": "MappingRuleSpec defines the desired state of Product's MappingRule",
            "type": "object",
            "required": [
              "httpMethod",
              "increment",
              "metricMethodRef",
              "pattern"
            ],
            "properties": {
              "httpMethod": {
                "type": "string",
                "enum": [
                  "GET",
                  "HEAD",
                  "POST",
                  "PUT",
                  "DELETE",
                  "OPTIONS",
                  "TRACE",
                  "PATCH",
                  "CONNECT"
                ]
              },
              "increment": {
                "type": "integer"
              },
              "last": {
                "type": "boolean"
              },
              "metricMethodRef": {
                "type": "string"
              },
              "pattern": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "methods": {
          "description": "Methods Map: system_name -\u003e MethodSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.",
          "type": "object",
          "additionalProperties": {
            "description": "MethodSpec defines the desired state of Product's Method",
            "type": "object",
            "required": [
              "friendlyName"
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "friendlyName": {
                "type": "string"
              }
            }
          }
        },
        "metrics": {
          "description": "Metrics Map: system_name -\u003e MetricSpec system_name attr is unique for all metrics AND methods In other words, if metric's system_name is A, there is no metric or method with system_name A.",
          "type": "object",
          "additionalProperties": {
            "description": "MetricSpec defines the desired state of Product's Metric",
            "type": "object",
            "required": [
              "friendlyName",
              "unit"
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "friendlyName": {
                "type": "string"
              },
              "unit": {
                "type": "string"
              }
            }
          }
        },
        "name": {
          "description": "Name is human readable name for the product",
          "type": "string"
        },
        "policies": {
          "description": "Policies holds the product's policy chain",
          "type": "array",
          "items": {
            "description": "PolicyConfig defines policy definition",
            "type": "object",
            "required": [
              "enabled",
              "name",
              "version"
            ],
            "properties": {
              "configuration": {
                "description": "Configuration defines the policy configuration",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "configurationRef": {
                "description": "ConfigurationRef Secret reference containing policy configuration",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "name is unique within a namespace to reference a secret resource.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "namespace defines the space within which the secret name must be unique.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-map-type": "atomic"
              },
              "enabled": {
                "description": "Enabled defines activation state",
                "type": "boolean"
              },
              "name": {
                "description": "Name defines the policy unique name",
                "type": "string"
              },
              "version": {
                "description": "Version defines the policy version",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "providerAccountRef": {
          "description": "ProviderAccountRef references account provider credentials",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "systemName": {
          "description": "SystemName identifies uniquely the product within the account provider Default value will be sanitized Name",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ProductStatus defines the observed state of Product",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Current state of the 3scale product. Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "description": "ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "description": "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration reflects the generation of the most recently observed Product Spec.",
          "type": "integer",
          "format": "int64"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "providerAccountHost": {
          "description": "3scale control plane host",
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
