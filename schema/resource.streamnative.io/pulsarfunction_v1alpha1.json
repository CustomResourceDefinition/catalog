{
  "description": "PulsarFunction is the Schema for the pulsar functions API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PulsarFunctionSpec defines the desired state of PulsarFunction",
      "type": "object",
      "required": [
        "connectionRef"
      ],
      "properties": {
        "autoAck": {
          "description": "AutoAck is the flag to indicate whether the function should auto ack",
          "type": "boolean"
        },
        "batchBuilder": {
          "description": "BatchBuilder is the batch builder that the function uses",
          "type": "string"
        },
        "className": {
          "description": "ClassName is the class name of the function",
          "type": "string"
        },
        "cleanupSubscription": {
          "description": "CleanupSubscription is the flag to indicate whether the subscription should be cleaned up when the function is deleted",
          "type": "boolean"
        },
        "connectionRef": {
          "description": "ConnectionRef is the reference to the PulsarConnection resource",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "customRuntimeOptions": {
          "description": "CustomRuntimeOptions is the custom runtime options of the function",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "customSchemaInputs": {
          "description": "CustomSchemaInputs is the custom schema inputs of the function",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "customSchemaOutputs": {
          "description": "CustomSchemaOutputs is the custom schema outputs of the function",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "customSerdeInputs": {
          "description": "CustomSerdeInputs is the custom serde inputs of the function",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deadLetterTopic": {
          "description": "DeadLetterTopic is the dead letter topic of the function",
          "type": "string"
        },
        "exposePulsarAdminClientEnabled": {
          "description": "ExposePulsarAdminClientEnabled is the flag to indicate whether the function should expose pulsar admin client",
          "type": "boolean"
        },
        "forwardSourceMessageProperty": {
          "description": "ForwardSourceMessageProperty is the flag to indicate whether the function should forward source message properties",
          "type": "boolean"
        },
        "go": {
          "description": "Go is the go of the function",
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "inputSpecs": {
          "description": "InputSpecs is the input specs of the function",
          "type": "object",
          "additionalProperties": {
            "description": "ConsumerConfig represents the configuration for the consumer of the pulsar functions and connectors",
            "type": "object",
            "properties": {
              "consumerProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "cryptoConfig": {
                "description": "CryptoConfig represents the configuration for the crypto of the pulsar functions and connectors",
                "type": "object",
                "properties": {
                  "consumerCryptoFailureAction": {
                    "type": "string"
                  },
                  "cryptoKeyReaderClassName": {
                    "type": "string"
                  },
                  "cryptoKeyReaderConfig": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "encryptionKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "producerCryptoFailureAction": {
                    "type": "string"
                  }
                }
              },
              "poolMessages": {
                "type": "boolean"
              },
              "receiverQueueSize": {
                "type": "integer"
              },
              "regexPattern": {
                "type": "boolean"
              },
              "schemaProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "schemaType": {
                "type": "string"
              },
              "serdeClassName": {
                "type": "string"
              }
            }
          }
        },
        "inputTypeClassName": {
          "description": "InputTypeClassName is the input type class name of the function",
          "type": "string"
        },
        "inputs": {
          "description": "Inputs is the inputs of the function",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jar": {
          "description": "Jar is the jar of the function",
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "lifecyclePolicy": {
          "description": "PulsarResourceLifeCyclePolicy defines the behavior for managing Pulsar resources\nwhen the corresponding custom resource (CR) is deleted from the Kubernetes cluster.\nThis policy allows users to control whether Pulsar resources should be retained or\nremoved from the Pulsar cluster after the CR is deleted.",
          "type": "string",
          "enum": [
            "CleanUpAfterDeletion",
            "KeepAfterDeletion"
          ]
        },
        "logTopic": {
          "description": "LogTopic is the log topic of the function",
          "type": "string"
        },
        "maxMessageRetries": {
          "description": "MaxMessageRetries is the max message retries of the function",
          "type": "integer"
        },
        "maxPendingAsyncRequests": {
          "description": "MaxPendingAsyncRequests is the max pending async requests of the function",
          "type": "integer"
        },
        "name": {
          "description": "Name is the name of the function",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the function",
          "type": "string"
        },
        "output": {
          "description": "Output is the output of the function",
          "type": "string"
        },
        "outputSchemaType": {
          "description": "OutputSchemaType is the output schema type of the function",
          "type": "string"
        },
        "outputSerdeClassName": {
          "description": "OutputSerdeClassName is the output serde class name of the function",
          "type": "string"
        },
        "outputTypeClassName": {
          "description": "OutputTypeClassName is the output type class name of the function",
          "type": "string"
        },
        "parallelism": {
          "description": "Parallelism is the parallelism of the function",
          "type": "integer"
        },
        "processingGuarantees": {
          "description": "ProcessingGuarantees is the processing guarantees of the function",
          "type": "string"
        },
        "producerConfig": {
          "description": "ProducerConfig is the producer config of the function",
          "type": "object",
          "properties": {
            "batchBuilder": {
              "type": "string"
            },
            "compressionType": {
              "type": "string"
            },
            "cryptoConfig": {
              "description": "CryptoConfig represents the configuration for the crypto of the pulsar functions and connectors",
              "type": "object",
              "properties": {
                "consumerCryptoFailureAction": {
                  "type": "string"
                },
                "cryptoKeyReaderClassName": {
                  "type": "string"
                },
                "cryptoKeyReaderConfig": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "encryptionKeys": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "producerCryptoFailureAction": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "maxPendingMessages": {
              "type": "integer"
            },
            "maxPendingMessagesAcrossPartitions": {
              "type": "integer"
            },
            "useThreadLocalProducers": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "py": {
          "description": "Py is the py of the function",
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resources": {
          "description": "Resources is the resources of the function",
          "type": "object",
          "properties": {
            "cpu": {
              "type": "string"
            },
            "disk": {
              "type": "integer",
              "format": "int64"
            },
            "ram": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        },
        "retainKeyOrdering": {
          "description": "RetainKeyOrdering is the flag to indicate whether the function should retain key ordering",
          "type": "boolean"
        },
        "retainOrdering": {
          "description": "RetainOrdering is the flag to indicate whether the function should retain ordering",
          "type": "boolean"
        },
        "runtimeFlags": {
          "description": "RuntimeFlags is the runtime flags of the function",
          "type": "string"
        },
        "secrets": {
          "description": "Secrets is the secrets of the function",
          "type": "object",
          "additionalProperties": {
            "description": "FunctionSecretKeyRef indicates a secret name and key",
            "type": "object",
            "required": [
              "key",
              "path"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          }
        },
        "skipToLatest": {
          "description": "SkipToLatest is the flag to indicate whether the function should skip to latest",
          "type": "boolean"
        },
        "subName": {
          "description": "SubName is the sub name of the function",
          "type": "string"
        },
        "subscriptionPosition": {
          "description": "SubscriptionPosition is the subscription position of the function",
          "type": "string"
        },
        "tenant": {
          "description": "Tenant is the tenant of the function",
          "type": "string"
        },
        "timeoutMs": {
          "description": "TimeoutMs is the function timeout in milliseconds",
          "type": "integer",
          "format": "int64"
        },
        "topicsPattern": {
          "description": "TopicsPattern is the topics pattern that the function subscribes to",
          "type": "string"
        },
        "userConfig": {
          "description": "UserConfig is the user config of the function",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "windowConfig": {
          "description": "WindowConfig is the window config of the function",
          "type": "object",
          "properties": {
            "actualWindowFunctionClassName": {
              "type": "string"
            },
            "lateDataTopic": {
              "type": "string"
            },
            "maxLagMs": {
              "type": "integer",
              "format": "int64"
            },
            "processingGuarantees": {
              "type": "string"
            },
            "slidingIntervalCount": {
              "type": "integer"
            },
            "slidingIntervalDurationMs": {
              "type": "integer",
              "format": "int64"
            },
            "timestampExtractorClassName": {
              "type": "string"
            },
            "watermarkEmitIntervalMs": {
              "type": "integer",
              "format": "int64"
            },
            "windowLengthCount": {
              "type": "integer"
            },
            "windowLengthDurationMs": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PulsarFunctionStatus defines the observed state of PulsarFunction",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Represents the observations of a connection's current state.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this resource.\nIt corresponds to the metadata generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
