{
  "description": "PulsarTopic is the Schema for the pulsartopics API\nIt represents a Pulsar topic in the Kubernetes cluster and includes both\nthe desired state (Spec) and the observed state (Status) of the topic.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PulsarTopicSpec defines the desired state of PulsarTopic.\nIt corresponds to the configuration options available in Pulsar's topic admin API.",
      "type": "object",
      "required": [
        "connectionRef",
        "name"
      ],
      "properties": {
        "autoSubscriptionCreation": {
          "description": "AutoSubscriptionCreation defines the auto subscription creation override for the topic.\nThis controls whether subscriptions can be created automatically.",
          "type": "object",
          "properties": {
            "allowAutoSubscriptionCreation": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "backlogQuotaLimitSize": {
          "description": "BacklogQuotaLimitSize specifies the size limit for message backlog.\nWhen the limit is reached, older messages will be removed or handled according to the retention policy.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "backlogQuotaLimitTime": {
          "description": "BacklogQuotaLimitTime specifies the time limit for message backlog.\nMessages older than this limit will be removed or handled according to the retention policy.",
          "type": "string"
        },
        "backlogQuotaRetentionPolicy": {
          "description": "BacklogQuotaRetentionPolicy specifies the retention policy for messages when backlog quota is exceeded.\nValid values are \"producer_request_hold\", \"producer_exception\", or \"consumer_backlog_eviction\".",
          "type": "string"
        },
        "compactionThreshold": {
          "description": "CompactionThreshold specifies the size threshold in bytes for automatic topic compaction.\nWhen the topic reaches this size, compaction will be triggered automatically.",
          "type": "integer",
          "format": "int64"
        },
        "connectionRef": {
          "description": "ConnectionRef is the reference to the PulsarConnection resource\nused to connect to the Pulsar cluster for this topic.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "deduplication": {
          "description": "Deduplication controls whether to enable message deduplication for the topic.",
          "type": "boolean"
        },
        "deduplicationSnapshotInterval": {
          "description": "DeduplicationSnapshotInterval specifies the interval for taking deduplication snapshots.\nThis affects the deduplication performance and storage overhead.",
          "type": "integer",
          "format": "int32"
        },
        "delayedDelivery": {
          "description": "DelayedDelivery defines the delayed delivery policy for the topic.\nThis allows messages to be delivered with a delay.",
          "type": "object",
          "properties": {
            "active": {
              "description": "Active determines whether delayed delivery is enabled for the topic",
              "type": "boolean"
            },
            "tickTimeMillis": {
              "description": "TickTimeMillis specifies the tick time for delayed message delivery in milliseconds",
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        },
        "dispatchRate": {
          "description": "DispatchRate defines the message dispatch rate limiting policy for the topic.\nThis controls the rate at which messages are delivered to consumers.",
          "type": "object",
          "properties": {
            "dispatchThrottlingRateInByte": {
              "description": "DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "dispatchThrottlingRateInMsg": {
              "description": "DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            },
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "geoReplicationRefs": {
          "description": "GeoReplicationRefs is a list of references to PulsarGeoReplication resources,\nused to configure geo-replication for this topic across multiple Pulsar instances.\nThis is **ONLY** used when you are using PulsarGeoReplication for setting up geo-replication\nbetween two Pulsar instances.",
          "type": "array",
          "items": {
            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                "type": "string",
                "default": ""
              }
            },
            "additionalProperties": false,
            "x-kubernetes-map-type": "atomic"
          }
        },
        "inactiveTopicPolicies": {
          "description": "InactiveTopicPolicies defines the inactive topic cleanup policy for the topic.\nThis controls how inactive topics are automatically cleaned up.",
          "type": "object",
          "properties": {
            "deleteWhileInactive": {
              "description": "DeleteWhileInactive specifies whether to delete topics while they are inactive",
              "type": "boolean"
            },
            "inactiveTopicDeleteMode": {
              "description": "InactiveTopicDeleteMode specifies how inactive topics should be handled\nValid values: \"delete_when_no_subscriptions\", \"delete_when_subscriptions_caught_up\"",
              "type": "string",
              "enum": [
                "delete_when_no_subscriptions",
                "delete_when_subscriptions_caught_up"
              ]
            },
            "maxInactiveDurationInSeconds": {
              "description": "MaxInactiveDurationInSeconds specifies how long a topic can remain inactive before being deleted",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "lifecyclePolicy": {
          "description": "LifecyclePolicy determines whether to keep or delete the Pulsar topic\nwhen the Kubernetes resource is deleted.",
          "type": "string",
          "enum": [
            "CleanUpAfterDeletion",
            "KeepAfterDeletion"
          ]
        },
        "maxConsumers": {
          "description": "MaxConsumers sets the maximum number of consumers allowed on the topic.",
          "type": "integer",
          "format": "int32"
        },
        "maxConsumersPerSubscription": {
          "description": "MaxConsumersPerSubscription sets the maximum number of consumers allowed per subscription.",
          "type": "integer",
          "format": "int32"
        },
        "maxMessageSize": {
          "description": "MaxMessageSize specifies the maximum size of messages that can be published to the topic.\nMessages larger than this size will be rejected.",
          "type": "integer",
          "format": "int32"
        },
        "maxProducers": {
          "description": "MaxProducers sets the maximum number of producers allowed on the topic.",
          "type": "integer",
          "format": "int32"
        },
        "maxSubscriptionsPerTopic": {
          "description": "MaxSubscriptionsPerTopic sets the maximum number of subscriptions allowed on the topic.",
          "type": "integer",
          "format": "int32"
        },
        "maxUnAckedMessagesPerConsumer": {
          "description": "MaxUnAckedMessagesPerConsumer sets the maximum number of unacknowledged\nmessages allowed for a consumer before it's blocked from receiving more messages.",
          "type": "integer",
          "format": "int32"
        },
        "maxUnAckedMessagesPerSubscription": {
          "description": "MaxUnAckedMessagesPerSubscription sets the maximum number of unacknowledged\nmessages allowed for a subscription before it's blocked from receiving more messages.",
          "type": "integer",
          "format": "int32"
        },
        "messageTTL": {
          "description": "MessageTTL specifies the Time to Live (TTL) for messages on the topic.\nMessages older than this TTL will be automatically marked as deleted.",
          "type": "string"
        },
        "name": {
          "description": "Name is the topic name",
          "type": "string"
        },
        "offloadPolicies": {
          "description": "OffloadPolicies defines the offload policies for the topic.\nThis controls how data is offloaded to external storage systems.",
          "type": "object",
          "properties": {
            "managedLedgerOffloadAutoTriggerSizeThresholdBytes": {
              "type": "integer",
              "format": "int64"
            },
            "managedLedgerOffloadDeletionLagInMillis": {
              "type": "integer",
              "format": "int64"
            },
            "managedLedgerOffloadDriver": {
              "type": "string"
            },
            "managedLedgerOffloadDriverMetadata": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "managedLedgerOffloadMaxThreads": {
              "type": "integer"
            },
            "managedLedgerOffloadThresholdInBytes": {
              "type": "integer",
              "format": "int64"
            },
            "offloadersDirectory": {
              "type": "string"
            },
            "s3ManagedLedgerOffloadBucket": {
              "type": "string"
            },
            "s3ManagedLedgerOffloadCredentialId": {
              "type": "string"
            },
            "s3ManagedLedgerOffloadCredentialSecret": {
              "type": "string"
            },
            "s3ManagedLedgerOffloadRegion": {
              "type": "string"
            },
            "s3ManagedLedgerOffloadRole": {
              "type": "string"
            },
            "s3ManagedLedgerOffloadRoleSessionName": {
              "type": "string"
            },
            "s3ManagedLedgerOffloadServiceEndpoint": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "partitions": {
          "description": "Partitions specifies the number of partitions for a partitioned topic.\nSet to 0 for a non-partitioned topic.",
          "type": "integer",
          "format": "int32",
          "default": 0
        },
        "persistencePolicies": {
          "description": "PersistencePolicies defines the persistence configuration for the topic.\nThis controls how data is stored and replicated in BookKeeper.",
          "type": "object",
          "properties": {
            "bookkeeperAckQuorum": {
              "description": "BookkeeperAckQuorum specifies the number of replicas to wait for acknowledgment\nMust be \u003c= BookkeeperWriteQuorum",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "bookkeeperEnsemble": {
              "description": "BookkeeperEnsemble specifies the number of bookies to use for a ledger\nThis determines the replication factor for storing data",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "bookkeeperWriteQuorum": {
              "description": "BookkeeperWriteQuorum specifies the number of replicas to write for each entry\nMust be \u003c= BookkeeperEnsemble",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "managedLedgerMaxMarkDeleteRate": {
              "description": "ManagedLedgerMaxMarkDeleteRate specifies the maximum rate at which mark-delete operations can be performed\nThis helps control the rate of acknowledgment processing\nValue should be a decimal number as string (e.g., \"1.5\", \"2.0\")",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "persistent": {
          "description": "Persistent determines if the topic is persistent (true) or non-persistent (false).\nDefaults to true if not specified.",
          "type": "boolean",
          "default": true
        },
        "properties": {
          "description": "Properties is a map of user-defined properties associated with the topic.\nThese can be used to store additional metadata about the topic.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "publishRate": {
          "description": "PublishRate defines the message publish rate limiting policy for the topic.\nThis controls the rate at which producers can publish messages.",
          "type": "object",
          "properties": {
            "publishThrottlingRateInByte": {
              "description": "PublishThrottlingRateInByte specifies the maximum number of bytes per second that producers can publish\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "publishThrottlingRateInMsg": {
              "description": "PublishThrottlingRateInMsg specifies the maximum number of messages per second that producers can publish\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "replicationClusters": {
          "description": "ReplicationClusters is the list of clusters to which the topic is replicated\nThis is **ONLY** used if you are replicating clusters within the same Pulsar instance.\nPlease use `GeoReplicationRefs` instead if you are setting up geo-replication\nbetween two Pulsar instances.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replicatorDispatchRate": {
          "description": "ReplicatorDispatchRate defines the message dispatch rate limiting policy for replicators.\nThis controls the rate at which messages are replicated to other clusters.",
          "type": "object",
          "properties": {
            "dispatchThrottlingRateInByte": {
              "description": "DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "dispatchThrottlingRateInMsg": {
              "description": "DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            },
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "retentionSize": {
          "description": "RetentionSize specifies the maximum size of backlog retained on the topic.\nShould be set in conjunction with RetentionTime for effective retention policy.\nRetention Quota must exceed configured backlog quota for topic.\nUse \"-1\" for infinite retention size.\nValid formats: \"1Gi\", \"500Mi\", \"100M\", \"-1\"",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "retentionTime": {
          "description": "RetentionTime specifies the minimum time to retain messages on the topic.\nShould be set in conjunction with RetentionSize for effective retention policy.\nRetention Quota must exceed configured backlog quota for topic.\nUse \"-1\" for infinite retention time.\nValid formats: \"1h\", \"30m\", \"5s\", \"-1\"",
          "type": "string"
        },
        "schemaCompatibilityStrategy": {
          "description": "SchemaCompatibilityStrategy defines the schema compatibility strategy for the topic.\nThis controls how schema evolution is handled.",
          "type": "string",
          "enum": [
            "UNDEFINED",
            "ALWAYS_INCOMPATIBLE",
            "ALWAYS_COMPATIBLE",
            "BACKWARD",
            "FORWARD",
            "FULL",
            "BACKWARD_TRANSITIVE",
            "FORWARD_TRANSITIVE",
            "FULL_TRANSITIVE"
          ]
        },
        "schemaInfo": {
          "description": "SchemaInfo defines the schema for the topic, if any.",
          "type": "object",
          "properties": {
            "properties": {
              "description": "Properties is a map of user-defined properties associated with the schema.\nThese can be used to store additional metadata about the schema.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "schema": {
              "description": "Schema contains the actual schema definition.\nFor AVRO and JSON schemas, this should be a JSON string of the schema definition.\nFor PROTOBUF schemas, this should be the protobuf definition string.\nFor BYTES or NONE schemas, this field can be empty.",
              "type": "string"
            },
            "type": {
              "description": "Type determines how to interpret the schema data.\nValid values include: \"AVRO\", \"JSON\", \"PROTOBUF\", \"PROTOBUF_NATIVE\", \"KEY_VALUE\", \"BYTES\", or \"NONE\".\nFor KEY_VALUE schemas, use the format \"KEY_VALUE(KeyType,ValueType)\" where KeyType and ValueType\nare one of the other schema types.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "schemaValidationEnforced": {
          "description": "SchemaValidationEnforced determines whether schema validation is enforced for the topic.\nWhen enabled, only messages that conform to the topic's schema will be accepted.",
          "type": "boolean"
        },
        "subscribeRate": {
          "description": "SubscribeRate defines the subscription rate limiting policy for the topic.\nThis controls the rate at which new subscriptions can be created.",
          "type": "object",
          "properties": {
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 30,
              "minimum": 1
            },
            "subscribeThrottlingRatePerConsumer": {
              "description": "SubscribeThrottlingRatePerConsumer specifies the maximum subscribe rate per consumer\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "subscriptionDispatchRate": {
          "description": "SubscriptionDispatchRate defines the message dispatch rate limiting policy for subscriptions.\nThis controls the rate at which messages are delivered to consumers per subscription.",
          "type": "object",
          "properties": {
            "dispatchThrottlingRateInByte": {
              "description": "DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "dispatchThrottlingRateInMsg": {
              "description": "DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            },
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "minimum": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PulsarTopicStatus defines the observed state of PulsarTopic",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the PulsarTopic's current state.\nIt follows the Kubernetes conventions for condition types and status.\nThe \"Ready\" condition type indicates the overall status of the topic.\nThe \"PolicyReady\" condition type indicates whether the topic policies have been successfully applied.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "geoReplicationEnabled": {
          "description": "GeoReplicationEnabled indicates whether geo-replication is enabled for this topic.\nThis is set to true when GeoReplicationRefs are configured in the spec and successfully applied.",
          "type": "boolean"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this resource.\nIt corresponds to the metadata generation, which is updated on mutation by the API Server.\nThis field is used to track whether the controller has processed the latest changes.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
