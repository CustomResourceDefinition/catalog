{
  "description": "PulsarGeoReplication is the Schema for the pulsargeoreplications API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PulsarGeoReplicationSpec defines the desired state of PulsarGeoReplication",
      "type": "object",
      "required": [
        "connectionRef",
        "destinationConnectionRef"
      ],
      "properties": {
        "clusterParamsOverride": {
          "description": "ClusterParamsOverride allows overriding specific cluster parameters when setting up\ngeo-replication. This is useful when the destination cluster requires different\nconfiguration than what's defined in the DestinationConnectionRef.",
          "type": "object",
          "properties": {
            "authentication": {
              "description": "Authentication overrides the authentication configuration for the cluster.\nWhen this field is set, the secret update check will be skipped for this geo-replication.",
              "type": "object",
              "properties": {
                "authParameters": {
                  "description": "AuthParameters contains the authentication parameters as a string.\nFormat depends on the AuthPlugin:\n- For Token: \"token:your-token-here\"\n- For Token: \"file://your-token-file-path-on-brokers\"\n- For OAuth2: JSON string with client credentials",
                  "type": "string"
                },
                "authPlugin": {
                  "description": "AuthPlugin specifies the authentication plugin class name\nCommon values: \"org.apache.pulsar.client.impl.auth.AuthenticationToken\",\n\"org.apache.pulsar.client.impl.auth.oauth2.AuthenticationOAuth2\"",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "brokerClientTrustCertsFilePath": {
              "description": "BrokerClientTrustCertsFilePath overrides the file path to the trusted TLS certificate\nfor outgoing connections to Pulsar brokers",
              "type": "string"
            },
            "brokerServiceSecureURL": {
              "description": "BrokerServiceSecureURL overrides the TLS-enabled URL for secure connections to Pulsar brokers",
              "type": "string"
            },
            "brokerServiceURL": {
              "description": "BrokerServiceURL overrides the non-TLS URL for connecting to Pulsar brokers",
              "type": "string"
            },
            "serviceSecureURL": {
              "description": "ServiceSecureURL overrides the HTTPS URL for secure connections to the Pulsar admin service",
              "type": "string"
            },
            "serviceURL": {
              "description": "ServiceURL overrides the HTTP(S) URL for the Pulsar cluster's admin service",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "connectionRef": {
          "description": "ConnectionRef is the reference to the source PulsarConnection",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "destinationConnectionRef": {
          "description": "DestinationConnectionRef is the connection reference to the remote cluster",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "lifecyclePolicy": {
          "description": "PulsarResourceLifeCyclePolicy defines the behavior for managing Pulsar resources\nwhen the corresponding custom resource (CR) is deleted from the Kubernetes cluster.\nThis policy allows users to control whether Pulsar resources should be retained or\nremoved from the Pulsar cluster after the CR is deleted.",
          "type": "string",
          "enum": [
            "CleanUpAfterDeletion",
            "KeepAfterDeletion"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PulsarGeoReplicationStatus defines the observed state of PulsarGeoReplication",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions Represents the observations of a connection's current state.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this resource.\nIt corresponds to the metadata generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
