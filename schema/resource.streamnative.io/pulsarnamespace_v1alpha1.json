{
  "description": "PulsarNamespace is the Schema for the pulsarnamespaces API\nIt represents a Pulsar namespace in the Kubernetes cluster and includes both\nthe desired state (Spec) and the observed state (Status) of the namespace.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PulsarNamespaceSpec defines the desired state of a Pulsar namespace.\nIt corresponds to the configuration options available in Pulsar's namespace admin API.",
      "type": "object",
      "required": [
        "connectionRef",
        "name"
      ],
      "properties": {
        "antiAffinityGroup": {
          "description": "AntiAffinityGroup specifies the anti-affinity group for this namespace.\nNamespaces in the same anti-affinity group will be placed on different brokers.",
          "type": "string"
        },
        "backlogQuotaLimitSize": {
          "description": "BacklogQuotaLimitSize specifies the size limit for message backlog.\nWhen the limit is reached, older messages will be removed or handled according to the retention policy.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "backlogQuotaLimitTime": {
          "description": "BacklogQuotaLimitTime specifies the time limit for message backlog.\nMessages older than this limit will be removed or handled according to the retention policy.",
          "type": "string"
        },
        "backlogQuotaRetentionPolicy": {
          "description": "BacklogQuotaRetentionPolicy specifies the retention policy for messages when backlog quota is exceeded.\nValid values are \"producer_request_hold\", \"producer_exception\", or \"consumer_backlog_eviction\".",
          "type": "string"
        },
        "backlogQuotaType": {
          "description": "BacklogQuotaType controls how the backlog quota is enforced.\n\"destination_storage\" limits backlog by size (in bytes), while \"message_age\" limits by time.",
          "type": "string",
          "enum": [
            "destination_storage",
            "message_age"
          ]
        },
        "bookieAffinityGroup": {
          "description": "BookieAffinityGroup is the name of the namespace isolation policy to apply to the namespace.",
          "type": "object",
          "required": [
            "bookkeeperAffinityGroupPrimary"
          ],
          "properties": {
            "bookkeeperAffinityGroupPrimary": {
              "type": "string"
            },
            "bookkeeperAffinityGroupSecondary": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "bundles": {
          "description": "Bundles specifies the number of bundles to split the namespace into.\nThis affects how the namespace is distributed across the cluster.",
          "type": "integer",
          "format": "int32"
        },
        "compactionThreshold": {
          "description": "CompactionThreshold sets the compaction threshold for topics in this namespace.\nTopics will be compacted when they reach this size threshold (in bytes).",
          "type": "integer",
          "format": "int64"
        },
        "connectionRef": {
          "description": "ConnectionRef is the reference to the PulsarConnection resource\nused to connect to the Pulsar cluster for this namespace.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "deduplication": {
          "description": "Deduplication controls whether to enable message deduplication for the namespace.",
          "type": "boolean"
        },
        "dispatchRate": {
          "description": "DispatchRate sets the message dispatch rate for topics in this namespace.\nThis controls how fast messages are delivered to consumers.",
          "type": "object",
          "properties": {
            "dispatchThrottlingRateInByte": {
              "description": "DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "dispatchThrottlingRateInMsg": {
              "description": "DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            },
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "encryptionRequired": {
          "description": "EncryptionRequired specifies whether message encryption is required for this namespace.\nWhen enabled, all messages published to topics in this namespace must be encrypted.",
          "type": "boolean"
        },
        "geoReplicationRefs": {
          "description": "GeoReplicationRefs is a list of references to PulsarGeoReplication resources,\nused to configure geo-replication for this namespace.\nThis is **ONLY** used when you are using PulsarGeoReplication for setting up geo-replication\nbetween two Pulsar instances.\nPlease use `ReplicationClusters` instead if you are replicating clusters within the same Pulsar instance.",
          "type": "array",
          "items": {
            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                "type": "string",
                "default": ""
              }
            },
            "additionalProperties": false,
            "x-kubernetes-map-type": "atomic"
          }
        },
        "inactiveTopicPolicies": {
          "description": "InactiveTopicPolicies sets the policies for handling inactive topics in this namespace.\nThis controls automatic cleanup of unused topics.",
          "type": "object",
          "properties": {
            "deleteWhileInactive": {
              "description": "DeleteWhileInactive specifies whether to delete topics while they are inactive",
              "type": "boolean"
            },
            "inactiveTopicDeleteMode": {
              "description": "InactiveTopicDeleteMode specifies how inactive topics should be handled\nValid values: \"delete_when_no_subscriptions\", \"delete_when_subscriptions_caught_up\"",
              "type": "string",
              "enum": [
                "delete_when_no_subscriptions",
                "delete_when_subscriptions_caught_up"
              ]
            },
            "maxInactiveDurationInSeconds": {
              "description": "MaxInactiveDurationInSeconds specifies how long a topic can remain inactive before being deleted",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "isAllowAutoUpdateSchema": {
          "description": "IsAllowAutoUpdateSchema specifies whether to allow automatic schema updates.\nWhen enabled, producers can automatically update schemas without manual approval.",
          "type": "boolean"
        },
        "lifecyclePolicy": {
          "description": "LifecyclePolicy determines whether to keep or delete the Pulsar namespace\nwhen the Kubernetes resource is deleted.",
          "type": "string",
          "enum": [
            "CleanUpAfterDeletion",
            "KeepAfterDeletion"
          ]
        },
        "maxConsumersPerSubscription": {
          "description": "MaxConsumersPerSubscription sets the maximum number of consumers allowed on a single subscription in the namespace.",
          "type": "integer",
          "format": "int32"
        },
        "maxConsumersPerTopic": {
          "description": "MaxConsumersPerTopic sets the maximum number of consumers allowed on a single topic in the namespace.",
          "type": "integer",
          "format": "int32"
        },
        "maxProducersPerTopic": {
          "description": "MaxProducersPerTopic sets the maximum number of producers allowed on a single topic in the namespace.",
          "type": "integer",
          "format": "int32"
        },
        "messageTTL": {
          "description": "MessageTTL specifies the Time to Live (TTL) for messages in the namespace.\nMessages older than this TTL will be automatically marked as consumed.",
          "type": "string"
        },
        "name": {
          "description": "Name is the fully qualified namespace name in the format \"tenant/namespace\".",
          "type": "string"
        },
        "offloadThresholdSize": {
          "description": "OffloadThresholdSize specifies the size limit for message offloading.\nWhen the limit is reached, older messages will be offloaded to the tiered storage.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "offloadThresholdTime": {
          "description": "OffloadThresholdTime specifies the time limit for message offloading.\nMessages older than this limit will be offloaded to the tiered storage.",
          "type": "string"
        },
        "persistencePolicies": {
          "description": "PersistencePolicies sets the persistence policies for this namespace.\nThis controls how data is stored and replicated in BookKeeper.",
          "type": "object",
          "properties": {
            "bookkeeperAckQuorum": {
              "description": "BookkeeperAckQuorum specifies the number of replicas to wait for acknowledgment\nMust be \u003c= BookkeeperWriteQuorum",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "bookkeeperEnsemble": {
              "description": "BookkeeperEnsemble specifies the number of bookies to use for a ledger\nThis determines the replication factor for storing data",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "bookkeeperWriteQuorum": {
              "description": "BookkeeperWriteQuorum specifies the number of replicas to write for each entry\nMust be \u003c= BookkeeperEnsemble",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "managedLedgerMaxMarkDeleteRate": {
              "description": "ManagedLedgerMaxMarkDeleteRate specifies the maximum rate at which mark-delete operations can be performed\nThis helps control the rate of acknowledgment processing\nValue should be a decimal number as string (e.g., \"1.5\", \"2.0\")",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "properties": {
          "description": "Properties is a map of custom properties for this namespace.\nThese are arbitrary key-value pairs that can be used for namespace metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "publishRate": {
          "description": "PublishRate sets the publish rate limit for producers in this namespace.\nThis controls how fast producers can publish messages.",
          "type": "object",
          "properties": {
            "publishThrottlingRateInByte": {
              "description": "PublishThrottlingRateInByte specifies the maximum number of bytes per second that producers can publish\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "publishThrottlingRateInMsg": {
              "description": "PublishThrottlingRateInMsg specifies the maximum number of messages per second that producers can publish\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "replicationClusters": {
          "description": "ReplicationClusters is the list of clusters to which the namespace is replicated\nThis is **ONLY** used if you are replicating clusters within the same Pulsar instance.\nPlease use `GeoReplicationRefs` instead if you are setting up geo-replication\nbetween two Pulsar instances.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replicatorDispatchRate": {
          "description": "ReplicatorDispatchRate sets the replicator dispatch rate for topics in this namespace.\nThis controls the rate at which messages are replicated across clusters.",
          "type": "object",
          "properties": {
            "dispatchThrottlingRateInByte": {
              "description": "DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "dispatchThrottlingRateInMsg": {
              "description": "DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            },
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "retentionSize": {
          "description": "RetentionSize specifies the maximum size of backlog retained in the namespace.\nShould be set in conjunction with RetentionTime for effective retention policy.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "retentionTime": {
          "description": "RetentionTime specifies the minimum time to retain messages in the namespace.\nShould be set in conjunction with RetentionSize for effective retention policy.\nRetention Quota must exceed configured backlog quota for namespace",
          "type": "string"
        },
        "schemaAutoUpdateCompatibilityStrategy": {
          "description": "SchemaAutoUpdateCompatibilityStrategy specifies the compatibility strategy for automatic schema updates.\nThis controls how schema evolution is handled when schemas are automatically updated.",
          "type": "string",
          "enum": [
            "AutoUpdateDisabled",
            "Backward",
            "Forward",
            "Full",
            "AlwaysCompatible",
            "BackwardTransitive",
            "ForwardTransitive",
            "FullTransitive"
          ]
        },
        "schemaCompatibilityStrategy": {
          "description": "SchemaCompatibilityStrategy defines the schema compatibility strategy for this namespace.\nIf not specified, the cluster's default schema compatibility strategy will be used.\nThis setting controls how schema evolution is handled for topics within this namespace.",
          "type": "string",
          "enum": [
            "UNDEFINED",
            "ALWAYS_INCOMPATIBLE",
            "ALWAYS_COMPATIBLE",
            "BACKWARD",
            "FORWARD",
            "FULL",
            "BACKWARD_TRANSITIVE",
            "FORWARD_TRANSITIVE",
            "FULL_TRANSITIVE"
          ]
        },
        "schemaValidationEnforced": {
          "description": "SchemaValidationEnforced controls whether schema validation is enforced for this namespace.\nWhen enabled, producers must provide a schema when publishing messages.\nIf not specified, the cluster's default schema validation enforcement setting will be used.",
          "type": "boolean"
        },
        "subscribeRate": {
          "description": "SubscribeRate sets the subscribe rate limit for consumers in this namespace.\nThis controls how fast consumers can subscribe to topics.",
          "type": "object",
          "properties": {
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 30,
              "minimum": 1
            },
            "subscribeThrottlingRatePerConsumer": {
              "description": "SubscribeThrottlingRatePerConsumer specifies the maximum subscribe rate per consumer\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "subscriptionAuthMode": {
          "description": "SubscriptionAuthMode specifies the subscription authentication mode for this namespace.\nValid values are \"None\" and \"Prefix\".",
          "type": "string",
          "enum": [
            "None",
            "Prefix"
          ]
        },
        "subscriptionDispatchRate": {
          "description": "SubscriptionDispatchRate sets the subscription dispatch rate for topics in this namespace.\nThis controls the rate at which subscriptions can dispatch messages.",
          "type": "object",
          "properties": {
            "dispatchThrottlingRateInByte": {
              "description": "DispatchThrottlingRateInByte specifies the maximum number of bytes per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int64"
            },
            "dispatchThrottlingRateInMsg": {
              "description": "DispatchThrottlingRateInMsg specifies the maximum number of messages per second allowed\n-1 means unlimited",
              "type": "integer",
              "format": "int32"
            },
            "ratePeriodInSecond": {
              "description": "RatePeriodInSecond specifies the time window in seconds for rate calculation",
              "type": "integer",
              "format": "int32",
              "default": 1,
              "minimum": 1
            }
          },
          "additionalProperties": false
        },
        "subscriptionExpirationTime": {
          "description": "SubscriptionExpirationTime specifies the time after which inactive subscriptions will expire.\nSubscriptions that haven't consumed messages for this duration will be automatically deleted.",
          "type": "string"
        },
        "topicAutoCreationConfig": {
          "description": "TopicAutoCreationConfig controls whether automatic topic creation is allowed in this namespace\nand configures properties of automatically created topics",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow specifies whether to allow automatic topic creation",
              "type": "boolean"
            },
            "partitions": {
              "description": "Partitions specifies the default number of partitions for automatically created topics",
              "type": "integer",
              "format": "int32"
            },
            "type": {
              "description": "Type specifies the type of automatically created topics",
              "type": "string",
              "enum": [
                "partitioned",
                "non-partitioned"
              ]
            }
          },
          "additionalProperties": false
        },
        "validateProducerName": {
          "description": "ValidateProducerName specifies whether to validate producer names.\nWhen enabled, producer names must follow specific naming conventions.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PulsarNamespaceStatus defines the observed state of PulsarNamespace",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the namespace's current state.\nIt follows the Kubernetes conventions for condition types and status.\nThe \"Ready\" condition type is typically used to indicate the overall status of the namespace.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "geoReplicationEnabled": {
          "description": "GeoReplicationEnabled indicates whether geo-replication between two Pulsar instances (via PulsarGeoReplication)\nis enabled for the namespace",
          "type": "boolean"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this resource.\nIt corresponds to the metadata generation, which is updated on mutation by the API Server.\nThis field is used to track whether the controller has processed the latest changes.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
