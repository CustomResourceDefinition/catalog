{
  "description": "Pipeline is the Schema for the Pipelines API.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PipelineSpec defines the desired state of Pipeline",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "bufferOptions": {
              "description": "Key-value pairs to configure persistent buffering for the pipeline. See buffer_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "persistentBufferEnabled": {
                    "description": "Whether persistent buffering should be enabled.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "encryptionAtRestOptions": {
              "description": "Key-value pairs to configure encryption for data that is written to a persistent buffer. See encryption_at_rest_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "kmsKeyArn": {
                    "description": "The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "logPublishingOptions": {
              "description": "Key-value pairs to configure log publishing. See log_publishing_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cloudwatchLogDestination": {
                    "description": "The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See cloudwatch_log_destination below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "logGroup": {
                          "description": "The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "isLoggingEnabled": {
                    "description": "Whether logs should be published.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "maxUnits": {
              "description": "The maximum pipeline capacity, in Ingestion Compute Units (ICUs).",
              "type": "number"
            },
            "minUnits": {
              "description": "The minimum pipeline capacity, in Ingestion Compute Units (ICUs).",
              "type": "number"
            },
            "pipelineConfigurationBody": {
              "description": "The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \\n.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcOptions": {
              "description": "Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See vpc_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "securityGroupIds": {
                    "description": "A list of security groups associated with the VPC endpoint.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "subnetIds": {
                    "description": "A list of subnet IDs associated with the VPC endpoint.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "vpcEndpointManagement": {
                    "description": "Whether you or Amazon OpenSearch Ingestion service create and manage the VPC endpoint configured for the pipeline. Valid values are CUSTOMER or SERVICE",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "bufferOptions": {
              "description": "Key-value pairs to configure persistent buffering for the pipeline. See buffer_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "persistentBufferEnabled": {
                    "description": "Whether persistent buffering should be enabled.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "encryptionAtRestOptions": {
              "description": "Key-value pairs to configure encryption for data that is written to a persistent buffer. See encryption_at_rest_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "kmsKeyArn": {
                    "description": "The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "logPublishingOptions": {
              "description": "Key-value pairs to configure log publishing. See log_publishing_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cloudwatchLogDestination": {
                    "description": "The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See cloudwatch_log_destination below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "logGroup": {
                          "description": "The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "isLoggingEnabled": {
                    "description": "Whether logs should be published.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "maxUnits": {
              "description": "The maximum pipeline capacity, in Ingestion Compute Units (ICUs).",
              "type": "number"
            },
            "minUnits": {
              "description": "The minimum pipeline capacity, in Ingestion Compute Units (ICUs).",
              "type": "number"
            },
            "pipelineConfigurationBody": {
              "description": "The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \\n.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcOptions": {
              "description": "Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See vpc_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "securityGroupIds": {
                    "description": "A list of security groups associated with the VPC endpoint.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "subnetIds": {
                    "description": "A list of subnet IDs associated with the VPC endpoint.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "vpcEndpointManagement": {
                    "description": "Whether you or Amazon OpenSearch Ingestion service create and manage the VPC endpoint configured for the pipeline. Valid values are CUSTOMER or SERVICE",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxUnits) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.maxUnits))",
          "message": "spec.forProvider.maxUnits is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.minUnits) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.minUnits))",
          "message": "spec.forProvider.minUnits is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.pipelineConfigurationBody) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.pipelineConfigurationBody))",
          "message": "spec.forProvider.pipelineConfigurationBody is a required parameter"
        }
      ]
    },
    "status": {
      "description": "PipelineStatus defines the observed state of Pipeline.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "bufferOptions": {
              "description": "Key-value pairs to configure persistent buffering for the pipeline. See buffer_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "persistentBufferEnabled": {
                    "description": "Whether persistent buffering should be enabled.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "encryptionAtRestOptions": {
              "description": "Key-value pairs to configure encryption for data that is written to a persistent buffer. See encryption_at_rest_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "kmsKeyArn": {
                    "description": "The ARN of the KMS key used to encrypt data-at-rest in OpenSearch Ingestion. By default, data is encrypted using an AWS owned key.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "Unique identifier for the pipeline.",
              "type": "string"
            },
            "ingestEndpointUrls": {
              "description": "The list of ingestion endpoints for the pipeline, which you can send data to.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "logPublishingOptions": {
              "description": "Key-value pairs to configure log publishing. See log_publishing_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cloudwatchLogDestination": {
                    "description": "The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch Logs. This parameter is required if IsLoggingEnabled is set to true. See cloudwatch_log_destination below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "logGroup": {
                          "description": "The name of the CloudWatch Logs group to send pipeline logs to. You can specify an existing log group or create a new one. For example, /aws/OpenSearchService/IngestionService/my-pipeline.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "isLoggingEnabled": {
                    "description": "Whether logs should be published.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "maxUnits": {
              "description": "The maximum pipeline capacity, in Ingestion Compute Units (ICUs).",
              "type": "number"
            },
            "minUnits": {
              "description": "The minimum pipeline capacity, in Ingestion Compute Units (ICUs).",
              "type": "number"
            },
            "pipelineArn": {
              "description": "Amazon Resource Name (ARN) of the pipeline.",
              "type": "string"
            },
            "pipelineConfigurationBody": {
              "description": "The pipeline configuration in YAML format. This argument accepts the pipeline configuration as a string or within a .yaml file. If you provide the configuration as a string, each new line must be escaped with \\n.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcOptions": {
              "description": "Container for the values required to configure VPC access for the pipeline. If you don't specify these values, OpenSearch Ingestion creates the pipeline with a public endpoint. See vpc_options below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "securityGroupIds": {
                    "description": "A list of security groups associated with the VPC endpoint.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "subnetIds": {
                    "description": "A list of subnet IDs associated with the VPC endpoint.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "vpcEndpointManagement": {
                    "description": "Whether you or Amazon OpenSearch Ingestion service create and manage the VPC endpoint configured for the pipeline. Valid values are CUSTOMER or SERVICE",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
