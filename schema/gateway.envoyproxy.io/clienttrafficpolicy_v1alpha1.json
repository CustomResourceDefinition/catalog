{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "properties": {
        "clientIPDetection": {
          "type": "object",
          "properties": {
            "customHeader": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "failClosed": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[A-Za-z0-9-]+$"
                }
              },
              "additionalProperties": false
            },
            "xForwardedFor": {
              "type": "object",
              "properties": {
                "numTrustedHops": {
                  "type": "integer",
                  "format": "int32"
                },
                "trustedCIDRs": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "pattern": "((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\/([0-9]+))|((([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\\/([0-9]+))"
                  }
                }
              },
              "additionalProperties": false,
              "x-kubernetes-validations": [
                {
                  "rule": "(has(self.numTrustedHops) \u0026\u0026 !has(self.trustedCIDRs)) || (!has(self.numTrustedHops) \u0026\u0026 has(self.trustedCIDRs))",
                  "message": "only one of numTrustedHops or trustedCIDRs must be set"
                }
              ]
            }
          },
          "additionalProperties": false,
          "x-kubernetes-validations": [
            {
              "rule": "!(has(self.xForwardedFor) \u0026\u0026 has(self.customHeader))",
              "message": "customHeader cannot be used in conjunction with xForwardedFor"
            }
          ]
        },
        "connection": {
          "type": "object",
          "properties": {
            "bufferLimit": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            },
            "connectionLimit": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "closeDelay": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "value": {
                  "type": "integer",
                  "format": "int64",
                  "minimum": 1
                }
              },
              "additionalProperties": false
            },
            "maxAcceptPerSocketEvent": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "socketBufferLimit": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            }
          },
          "additionalProperties": false
        },
        "enableProxyProtocol": {
          "type": "boolean"
        },
        "headers": {
          "type": "object",
          "properties": {
            "disableRateLimitHeaders": {
              "type": "boolean"
            },
            "earlyRequestHeaders": {
              "type": "object",
              "properties": {
                "add": {
                  "type": "array",
                  "maxItems": 64,
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                      },
                      "value": {
                        "type": "string",
                        "maxLength": 4096,
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "remove": {
                  "type": "array",
                  "maxItems": 64,
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "set": {
                  "type": "array",
                  "maxItems": 64,
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                      },
                      "value": {
                        "type": "string",
                        "maxLength": 4096,
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                }
              },
              "additionalProperties": false
            },
            "enableEnvoyHeaders": {
              "type": "boolean"
            },
            "preserveXRequestID": {
              "type": "boolean"
            },
            "requestID": {
              "type": "string",
              "enum": [
                "PreserveOrGenerate",
                "Preserve",
                "Generate",
                "Disable"
              ]
            },
            "withUnderscoresAction": {
              "type": "string",
              "enum": [
                "Allow",
                "RejectRequest",
                "DropHeader"
              ]
            },
            "xForwardedClientCert": {
              "type": "object",
              "properties": {
                "certDetailsToAdd": {
                  "type": "array",
                  "maxItems": 5,
                  "items": {
                    "type": "string",
                    "enum": [
                      "Subject",
                      "Cert",
                      "Chain",
                      "DNS",
                      "URI"
                    ]
                  }
                },
                "mode": {
                  "type": "string",
                  "enum": [
                    "Sanitize",
                    "ForwardOnly",
                    "AppendForward",
                    "SanitizeSet",
                    "AlwaysForwardOnly"
                  ]
                }
              },
              "additionalProperties": false,
              "x-kubernetes-validations": [
                {
                  "rule": "(has(self.certDetailsToAdd) \u0026\u0026 self.certDetailsToAdd.size() \u003e 0) ? (self.mode == 'AppendForward' || self.mode == 'SanitizeSet') : true",
                  "message": "certDetailsToAdd can only be set when mode is AppendForward or SanitizeSet"
                }
              ]
            }
          },
          "additionalProperties": false,
          "x-kubernetes-validations": [
            {
              "rule": "!(has(self.preserveXRequestID) \u0026\u0026 has(self.requestID))",
              "message": "preserveXRequestID and requestID cannot both be set."
            }
          ]
        },
        "healthCheck": {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "type": "string",
              "maxLength": 1024,
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "http1": {
          "type": "object",
          "properties": {
            "enableTrailers": {
              "type": "boolean"
            },
            "http10": {
              "type": "object",
              "properties": {
                "useDefaultHost": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "preserveHeaderCase": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "http2": {
          "type": "object",
          "properties": {
            "initialConnectionWindowSize": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            },
            "initialStreamWindowSize": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            },
            "maxConcurrentStreams": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 1
            },
            "onInvalidMessage": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "http3": {
          "type": "object"
        },
        "path": {
          "type": "object",
          "properties": {
            "disableMergeSlashes": {
              "type": "boolean"
            },
            "escapedSlashesAction": {
              "type": "string",
              "enum": [
                "KeepUnchanged",
                "RejectRequest",
                "UnescapeAndForward",
                "UnescapeAndRedirect"
              ]
            }
          },
          "additionalProperties": false
        },
        "proxyProtocol": {
          "type": "object",
          "minProperties": 0,
          "properties": {
            "optional": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "targetRef": {
          "type": "object",
          "required": [
            "group",
            "kind",
            "name"
          ],
          "properties": {
            "group": {
              "type": "string",
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            },
            "kind": {
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
            },
            "name": {
              "type": "string",
              "maxLength": 253,
              "minLength": 1
            },
            "sectionName": {
              "type": "string",
              "maxLength": 253,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            }
          },
          "additionalProperties": false
        },
        "targetRefs": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "group",
              "kind",
              "name"
            ],
            "properties": {
              "group": {
                "type": "string",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "name": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              },
              "sectionName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              }
            },
            "additionalProperties": false
          }
        },
        "targetSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "kind"
            ],
            "properties": {
              "group": {
                "type": "string",
                "default": "gateway.networking.k8s.io",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "matchExpressions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "operator"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "operator": {
                      "type": "string"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "matchLabels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "has(self.group) ? self.group == 'gateway.networking.k8s.io' : true ",
                "message": "group must be gateway.networking.k8s.io"
              }
            ]
          }
        },
        "tcpKeepalive": {
          "type": "object",
          "properties": {
            "idleTime": {
              "type": "string",
              "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
            },
            "interval": {
              "type": "string",
              "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
            },
            "probes": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "timeout": {
          "type": "object",
          "properties": {
            "http": {
              "type": "object",
              "properties": {
                "idleTimeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "requestReceivedTimeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "streamIdleTimeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                }
              },
              "additionalProperties": false
            },
            "tcp": {
              "type": "object",
              "properties": {
                "idleTimeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "tls": {
          "type": "object",
          "properties": {
            "alpnProtocols": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "http/1.0",
                  "http/1.1",
                  "h2"
                ]
              }
            },
            "ciphers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientValidation": {
              "type": "object",
              "properties": {
                "caCertificateRefs": {
                  "type": "array",
                  "maxItems": 8,
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "group": {
                        "type": "string",
                        "default": "",
                        "maxLength": 253,
                        "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                      },
                      "kind": {
                        "type": "string",
                        "default": "Secret",
                        "maxLength": 63,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 253,
                        "minLength": 1
                      },
                      "namespace": {
                        "type": "string",
                        "maxLength": 63,
                        "minLength": 1,
                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "certificateHashes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "optional": {
                  "type": "boolean"
                },
                "spkiHashes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "subjectAltNames": {
                  "type": "object",
                  "properties": {
                    "dnsNames": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Exact",
                            "enum": [
                              "Exact",
                              "Prefix",
                              "Suffix",
                              "RegularExpression"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "emailAddresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Exact",
                            "enum": [
                              "Exact",
                              "Prefix",
                              "Suffix",
                              "RegularExpression"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "ipAddresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Exact",
                            "enum": [
                              "Exact",
                              "Prefix",
                              "Suffix",
                              "RegularExpression"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "otherNames": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "oid",
                          "value"
                        ],
                        "properties": {
                          "oid": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "default": "Exact",
                            "enum": [
                              "Exact",
                              "Prefix",
                              "Suffix",
                              "RegularExpression"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "uris": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Exact",
                            "enum": [
                              "Exact",
                              "Prefix",
                              "Suffix",
                              "RegularExpression"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "ecdhCurves": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "maxVersion": {
              "type": "string",
              "enum": [
                "Auto",
                "1.0",
                "1.1",
                "1.2",
                "1.3"
              ]
            },
            "minVersion": {
              "type": "string",
              "enum": [
                "Auto",
                "1.0",
                "1.1",
                "1.2",
                "1.3"
              ]
            },
            "session": {
              "type": "object",
              "properties": {
                "resumption": {
                  "type": "object",
                  "properties": {
                    "stateful": {
                      "type": "object"
                    },
                    "stateless": {
                      "type": "object"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "signatureAlgorithms": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-validations": [
            {
              "rule": "has(self.minVersion) \u0026\u0026 self.minVersion == '1.3' ? !has(self.ciphers) : true",
              "message": "setting ciphers has no effect if the minimum possible TLS version is 1.3"
            },
            {
              "rule": "has(self.minVersion) \u0026\u0026 has(self.maxVersion) ? {\"Auto\":0,\"1.0\":1,\"1.1\":2,\"1.2\":3,\"1.3\":4}[self.minVersion] \u003c= {\"1.0\":1,\"1.1\":2,\"1.2\":3,\"1.3\":4,\"Auto\":5}[self.maxVersion] : !has(self.minVersion) \u0026\u0026 has(self.maxVersion) ? 3 \u003c= {\"1.0\":1,\"1.1\":2,\"1.2\":3,\"1.3\":4,\"Auto\":5}[self.maxVersion] : true",
              "message": "minVersion must be smaller or equal to maxVersion"
            }
          ]
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.targetRef) \u0026\u0026 !has(self.targetRefs)) || (!has(self.targetRef) \u0026\u0026 has(self.targetRefs)) || (has(self.targetSelectors) \u0026\u0026 self.targetSelectors.size() \u003e 0) ",
          "message": "either targetRef or targetRefs must be used"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.group == 'gateway.networking.k8s.io' : true",
          "message": "this policy can only have a targetRef.group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.kind == 'Gateway' : true",
          "message": "this policy can only have a targetRef.kind of Gateway"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.group == 'gateway.networking.k8s.io') : true",
          "message": "this policy can only have a targetRefs[*].group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.kind == 'Gateway') : true",
          "message": "this policy can only have a targetRefs[*].kind of Gateway"
        }
      ]
    },
    "status": {
      "type": "object",
      "required": [
        "ancestors"
      ],
      "properties": {
        "ancestors": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "required": [
              "ancestorRef",
              "controllerName"
            ],
            "properties": {
              "ancestorRef": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "group": {
                    "type": "string",
                    "default": "gateway.networking.k8s.io",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  },
                  "kind": {
                    "type": "string",
                    "default": "Gateway",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                  },
                  "namespace": {
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "sectionName": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  }
                },
                "additionalProperties": false
              },
              "conditions": {
                "type": "array",
                "maxItems": 8,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "type": "string",
                      "maxLength": 32768
                    },
                    "observedGeneration": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 0
                    },
                    "reason": {
                      "type": "string",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "controllerName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$\u0026'()*+,;=:]+$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
