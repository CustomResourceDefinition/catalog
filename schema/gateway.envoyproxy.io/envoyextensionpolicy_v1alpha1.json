{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "properties": {
        "extProc": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "properties": {
              "backendRef": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "group": {
                    "type": "string",
                    "default": "",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  },
                  "kind": {
                    "type": "string",
                    "default": "Service",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                  },
                  "namespace": {
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-validations": [
                  {
                    "rule": "(size(self.group) == 0 \u0026\u0026 self.kind == 'Service') ? has(self.port) : true",
                    "message": "Must have port for Service reference"
                  }
                ]
              },
              "backendRefs": {
                "type": "array",
                "maxItems": 16,
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "fallback": {
                      "type": "boolean"
                    },
                    "group": {
                      "type": "string",
                      "default": "",
                      "maxLength": 253,
                      "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "kind": {
                      "type": "string",
                      "default": "Service",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1
                    },
                    "namespace": {
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "maximum": 65535,
                      "minimum": 1
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "(size(self.group) == 0 \u0026\u0026 self.kind == 'Service') ? has(self.port) : true",
                      "message": "Must have port for Service reference"
                    }
                  ]
                }
              },
              "backendSettings": {
                "type": "object",
                "properties": {
                  "circuitBreaker": {
                    "type": "object",
                    "properties": {
                      "maxConnections": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1024,
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "maxParallelRequests": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1024,
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "maxParallelRetries": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1024,
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "maxPendingRequests": {
                        "type": "integer",
                        "format": "int64",
                        "default": 1024,
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "maxRequestsPerConnection": {
                        "type": "integer",
                        "format": "int64",
                        "maximum": 4294967295,
                        "minimum": 0
                      },
                      "perEndpoint": {
                        "type": "object",
                        "properties": {
                          "maxConnections": {
                            "type": "integer",
                            "format": "int64",
                            "default": 1024,
                            "maximum": 4294967295,
                            "minimum": 0
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "connection": {
                    "type": "object",
                    "properties": {
                      "bufferLimit": {
                        "allOf": [
                          {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          },
                          {
                            "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                          }
                        ],
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "socketBufferLimit": {
                        "allOf": [
                          {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          },
                          {
                            "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                          }
                        ],
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "dns": {
                    "type": "object",
                    "properties": {
                      "dnsRefreshRate": {
                        "type": "string"
                      },
                      "lookupFamily": {
                        "type": "string",
                        "enum": [
                          "IPv4",
                          "IPv6",
                          "IPv4Preferred",
                          "IPv6Preferred",
                          "IPv4AndIPv6"
                        ]
                      },
                      "respectDnsTtl": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "healthCheck": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "grpc": {
                            "type": "object",
                            "properties": {
                              "service": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "healthyThreshold": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1,
                            "minimum": 1
                          },
                          "http": {
                            "type": "object",
                            "required": [
                              "path"
                            ],
                            "properties": {
                              "expectedResponse": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "binary": {
                                    "type": "string",
                                    "format": "byte"
                                  },
                                  "text": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "allOf": [
                                      {
                                        "enum": [
                                          "Text",
                                          "Binary"
                                        ]
                                      },
                                      {
                                        "enum": [
                                          "Text",
                                          "Binary"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-validations": [
                                  {
                                    "rule": "self.type == 'Text' ? has(self.text) : !has(self.text)",
                                    "message": "If payload type is Text, text field needs to be set."
                                  },
                                  {
                                    "rule": "self.type == 'Binary' ? has(self.binary) : !has(self.binary)",
                                    "message": "If payload type is Binary, binary field needs to be set."
                                  }
                                ]
                              },
                              "expectedStatuses": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "maximum": 600,
                                  "exclusiveMaximum": true,
                                  "minimum": 100
                                }
                              },
                              "method": {
                                "type": "string"
                              },
                              "path": {
                                "type": "string",
                                "maxLength": 1024,
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "interval": {
                            "type": "string",
                            "format": "duration",
                            "default": "3s"
                          },
                          "tcp": {
                            "type": "object",
                            "properties": {
                              "receive": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "binary": {
                                    "type": "string",
                                    "format": "byte"
                                  },
                                  "text": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "allOf": [
                                      {
                                        "enum": [
                                          "Text",
                                          "Binary"
                                        ]
                                      },
                                      {
                                        "enum": [
                                          "Text",
                                          "Binary"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-validations": [
                                  {
                                    "rule": "self.type == 'Text' ? has(self.text) : !has(self.text)",
                                    "message": "If payload type is Text, text field needs to be set."
                                  },
                                  {
                                    "rule": "self.type == 'Binary' ? has(self.binary) : !has(self.binary)",
                                    "message": "If payload type is Binary, binary field needs to be set."
                                  }
                                ]
                              },
                              "send": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "binary": {
                                    "type": "string",
                                    "format": "byte"
                                  },
                                  "text": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "allOf": [
                                      {
                                        "enum": [
                                          "Text",
                                          "Binary"
                                        ]
                                      },
                                      {
                                        "enum": [
                                          "Text",
                                          "Binary"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-validations": [
                                  {
                                    "rule": "self.type == 'Text' ? has(self.text) : !has(self.text)",
                                    "message": "If payload type is Text, text field needs to be set."
                                  },
                                  {
                                    "rule": "self.type == 'Binary' ? has(self.binary) : !has(self.binary)",
                                    "message": "If payload type is Binary, binary field needs to be set."
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeout": {
                            "type": "string",
                            "format": "duration",
                            "default": "1s"
                          },
                          "type": {
                            "type": "string",
                            "allOf": [
                              {
                                "enum": [
                                  "HTTP",
                                  "TCP",
                                  "GRPC"
                                ]
                              },
                              {
                                "enum": [
                                  "HTTP",
                                  "TCP",
                                  "GRPC"
                                ]
                              }
                            ]
                          },
                          "unhealthyThreshold": {
                            "type": "integer",
                            "format": "int32",
                            "default": 3,
                            "minimum": 1
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-validations": [
                          {
                            "rule": "self.type == 'HTTP' ? has(self.http) : !has(self.http)",
                            "message": "If Health Checker type is HTTP, http field needs to be set."
                          },
                          {
                            "rule": "self.type == 'TCP' ? has(self.tcp) : !has(self.tcp)",
                            "message": "If Health Checker type is TCP, tcp field needs to be set."
                          },
                          {
                            "rule": "has(self.grpc) ? self.type == 'GRPC' : true",
                            "message": "The grpc field can only be set if the Health Checker type is GRPC."
                          }
                        ]
                      },
                      "panicThreshold": {
                        "type": "integer",
                        "format": "int32",
                        "maximum": 100,
                        "minimum": 0
                      },
                      "passive": {
                        "type": "object",
                        "properties": {
                          "baseEjectionTime": {
                            "type": "string",
                            "format": "duration",
                            "default": "30s"
                          },
                          "consecutive5XxErrors": {
                            "type": "integer",
                            "format": "int32",
                            "default": 5
                          },
                          "consecutiveGatewayErrors": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                          },
                          "consecutiveLocalOriginFailures": {
                            "type": "integer",
                            "format": "int32",
                            "default": 5
                          },
                          "interval": {
                            "type": "string",
                            "format": "duration",
                            "default": "3s"
                          },
                          "maxEjectionPercent": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                          },
                          "splitExternalLocalOriginErrors": {
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "http2": {
                    "type": "object",
                    "properties": {
                      "initialConnectionWindowSize": {
                        "allOf": [
                          {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          },
                          {
                            "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                          }
                        ],
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "initialStreamWindowSize": {
                        "allOf": [
                          {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                          },
                          {
                            "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                          }
                        ],
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "maxConcurrentStreams": {
                        "type": "integer",
                        "format": "int32",
                        "maximum": 2147483647,
                        "minimum": 1
                      },
                      "onInvalidMessage": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "loadBalancer": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "consistentHash": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "cookie": {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "attributes": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "name": {
                                "type": "string"
                              },
                              "ttl": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "header": {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "tableSize": {
                            "type": "integer",
                            "format": "int64",
                            "default": 65537,
                            "maximum": 5000011,
                            "minimum": 2
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "SourceIP",
                              "Header",
                              "Cookie"
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-validations": [
                          {
                            "rule": "self.type == 'Header' ? has(self.header) : !has(self.header)",
                            "message": "If consistent hash type is header, the header field must be set."
                          },
                          {
                            "rule": "self.type == 'Cookie' ? has(self.cookie) : !has(self.cookie)",
                            "message": "If consistent hash type is cookie, the cookie field must be set."
                          }
                        ]
                      },
                      "slowStart": {
                        "type": "object",
                        "required": [
                          "window"
                        ],
                        "properties": {
                          "window": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ConsistentHash",
                          "LeastRequest",
                          "Random",
                          "RoundRobin"
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-validations": [
                      {
                        "rule": "self.type == 'ConsistentHash' ? has(self.consistentHash) : !has(self.consistentHash)",
                        "message": "If LoadBalancer type is consistentHash, consistentHash field needs to be set."
                      },
                      {
                        "rule": "self.type in ['Random', 'ConsistentHash'] ? !has(self.slowStart) : true ",
                        "message": "Currently SlowStart is only supported for RoundRobin and LeastRequest load balancers."
                      }
                    ]
                  },
                  "proxyProtocol": {
                    "type": "object",
                    "required": [
                      "version"
                    ],
                    "properties": {
                      "version": {
                        "type": "string",
                        "enum": [
                          "V1",
                          "V2"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "retry": {
                    "type": "object",
                    "properties": {
                      "numRetries": {
                        "type": "integer",
                        "format": "int32",
                        "default": 2,
                        "minimum": 0
                      },
                      "perRetry": {
                        "type": "object",
                        "properties": {
                          "backOff": {
                            "type": "object",
                            "properties": {
                              "baseInterval": {
                                "type": "string",
                                "format": "duration"
                              },
                              "maxInterval": {
                                "type": "string",
                                "format": "duration"
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeout": {
                            "type": "string",
                            "format": "duration"
                          }
                        },
                        "additionalProperties": false
                      },
                      "retryOn": {
                        "type": "object",
                        "properties": {
                          "httpStatusCodes": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "minimum": 100
                            }
                          },
                          "triggers": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "5xx",
                                "gateway-error",
                                "reset",
                                "connect-failure",
                                "retriable-4xx",
                                "refused-stream",
                                "retriable-status-codes",
                                "cancelled",
                                "deadline-exceeded",
                                "internal",
                                "resource-exhausted",
                                "unavailable"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "tcpKeepalive": {
                    "type": "object",
                    "properties": {
                      "idleTime": {
                        "type": "string",
                        "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                      },
                      "interval": {
                        "type": "string",
                        "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                      },
                      "probes": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "timeout": {
                    "type": "object",
                    "properties": {
                      "http": {
                        "type": "object",
                        "properties": {
                          "connectionIdleTimeout": {
                            "type": "string",
                            "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                          },
                          "maxConnectionDuration": {
                            "type": "string",
                            "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                          },
                          "requestTimeout": {
                            "type": "string",
                            "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tcp": {
                        "type": "object",
                        "properties": {
                          "connectTimeout": {
                            "type": "string",
                            "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "failOpen": {
                "type": "boolean"
              },
              "messageTimeout": {
                "type": "string",
                "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "accessibleNamespaces": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "writableNamespaces": {
                    "type": "array",
                    "maxItems": 8,
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-validations": [
                      {
                        "rule": "self.all(f, !f.startsWith('envoy.filters.http'))",
                        "message": "writableNamespaces cannot contain well-known Envoy HTTP filter namespaces"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              "processingMode": {
                "type": "object",
                "properties": {
                  "allowModeOverride": {
                    "type": "boolean"
                  },
                  "request": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^(connection\\.|source\\.|destination\\.|request\\.|response\\.|upstream\\.|xds\\.route_)[a-z_1-9]*$"
                        }
                      },
                      "body": {
                        "type": "string",
                        "enum": [
                          "Streamed",
                          "Buffered",
                          "BufferedPartial",
                          "FullDuplexStreamed"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "response": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "pattern": "^(connection\\.|source\\.|destination\\.|request\\.|response\\.|upstream\\.|xds\\.route_)[a-z_1-9]*$"
                        }
                      },
                      "body": {
                        "type": "string",
                        "enum": [
                          "Streamed",
                          "Buffered",
                          "BufferedPartial",
                          "FullDuplexStreamed"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "!has(self.backendRef)",
                "message": "BackendRefs must be used, backendRef is not supported."
              },
              {
                "rule": "has(self.backendRefs) ? self.backendRefs.all(f, f.kind == 'Service' || f.kind == 'Backend') : true",
                "message": "BackendRefs only supports Service and Backend kind."
              },
              {
                "rule": "has(self.backendRefs) ? (self.backendRefs.all(f, f.group == \"\" || f.group == 'gateway.envoyproxy.io')) : true",
                "message": "BackendRefs only supports Core and gateway.envoyproxy.io group."
              },
              {
                "rule": "!(has(self.failOpen) \u0026\u0026 self.failOpen == true \u0026\u0026 ((has(self.processingMode.request.body) \u0026\u0026 self.processingMode.request.body == 'FullDuplexStreamed') || (has(self.processingMode.response.body) \u0026\u0026 self.processingMode.response.body == 'FullDuplexStreamed')))",
                "message": "If FullDuplexStreamed body processing mode is used, FailOpen must be false."
              }
            ]
          }
        },
        "lua": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "inline": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "default": "Inline",
                "enum": [
                  "Inline",
                  "ValueRef"
                ]
              },
              "valueRef": {
                "type": "object",
                "required": [
                  "group",
                  "kind",
                  "name"
                ],
                "properties": {
                  "group": {
                    "type": "string",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  },
                  "kind": {
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-validations": [
                  {
                    "rule": "self.kind == 'ConfigMap' \u0026\u0026 (self.group == 'v1' || self.group == '')",
                    "message": "Only a reference to an object of kind ConfigMap belonging to default v1 API group is supported."
                  }
                ]
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "(self.type == 'Inline' \u0026\u0026 has(self.inline) \u0026\u0026 !has(self.valueRef)) || (self.type == 'ValueRef' \u0026\u0026 !has(self.inline) \u0026\u0026 has(self.valueRef))",
                "message": "Exactly one of inline or valueRef must be set with correct type."
              }
            ]
          }
        },
        "targetRef": {
          "type": "object",
          "required": [
            "group",
            "kind",
            "name"
          ],
          "properties": {
            "group": {
              "type": "string",
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            },
            "kind": {
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
            },
            "name": {
              "type": "string",
              "maxLength": 253,
              "minLength": 1
            },
            "sectionName": {
              "type": "string",
              "maxLength": 253,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            }
          },
          "additionalProperties": false
        },
        "targetRefs": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "group",
              "kind",
              "name"
            ],
            "properties": {
              "group": {
                "type": "string",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "name": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              },
              "sectionName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              }
            },
            "additionalProperties": false
          }
        },
        "targetSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "kind"
            ],
            "properties": {
              "group": {
                "type": "string",
                "default": "gateway.networking.k8s.io",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "matchExpressions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "operator"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "operator": {
                      "type": "string"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "matchLabels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "has(self.group) ? self.group == 'gateway.networking.k8s.io' : true ",
                "message": "group must be gateway.networking.k8s.io"
              }
            ]
          }
        },
        "wasm": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "http": {
                    "type": "object",
                    "required": [
                      "url"
                    ],
                    "properties": {
                      "sha256": {
                        "type": "string"
                      },
                      "tls": {
                        "type": "object",
                        "required": [
                          "caCertificateRef"
                        ],
                        "properties": {
                          "caCertificateRef": {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "group": {
                                "type": "string",
                                "default": "",
                                "maxLength": 253,
                                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                              },
                              "kind": {
                                "type": "string",
                                "default": "Secret",
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 253,
                                "minLength": 1
                              },
                              "namespace": {
                                "type": "string",
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "url": {
                        "type": "string",
                        "pattern": "^((https?:)(\\/\\/\\/?)([\\w]*(?::[\\w]*)?@)?([\\d\\w\\.-]+)(?::(\\d+))?)?([\\/\\\\\\w\\.()-]*)?(?:([?][^#]*)?(#.*)?)*"
                      }
                    },
                    "additionalProperties": false
                  },
                  "image": {
                    "type": "object",
                    "required": [
                      "url"
                    ],
                    "properties": {
                      "pullSecretRef": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "group": {
                            "type": "string",
                            "default": "",
                            "maxLength": 253,
                            "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          },
                          "kind": {
                            "type": "string",
                            "default": "Secret",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 253,
                            "minLength": 1
                          },
                          "namespace": {
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-validations": [
                          {
                            "rule": "self.kind == 'Secret'",
                            "message": "only support Secret kind."
                          }
                        ]
                      },
                      "sha256": {
                        "type": "string"
                      },
                      "tls": {
                        "type": "object",
                        "required": [
                          "caCertificateRef"
                        ],
                        "properties": {
                          "caCertificateRef": {
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "group": {
                                "type": "string",
                                "default": "",
                                "maxLength": 253,
                                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                              },
                              "kind": {
                                "type": "string",
                                "default": "Secret",
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 253,
                                "minLength": 1
                              },
                              "namespace": {
                                "type": "string",
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pullPolicy": {
                    "type": "string",
                    "enum": [
                      "IfNotPresent",
                      "Always"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "allOf": [
                      {
                        "enum": [
                          "HTTP",
                          "Image"
                        ]
                      },
                      {
                        "enum": [
                          "HTTP",
                          "Image",
                          "ConfigMap"
                        ]
                      }
                    ]
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-validations": [
                  {
                    "rule": "self.type == 'HTTP' ? has(self.http) : !has(self.http)",
                    "message": "If type is HTTP, http field needs to be set."
                  },
                  {
                    "rule": "self.type == 'Image' ? has(self.image) : !has(self.image)",
                    "message": "If type is Image, image field needs to be set."
                  }
                ]
              },
              "config": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "env": {
                "type": "object",
                "properties": {
                  "hostKeys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "failOpen": {
                "type": "boolean",
                "default": false
              },
              "name": {
                "type": "string"
              },
              "rootID": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.targetRef) \u0026\u0026 !has(self.targetRefs)) || (!has(self.targetRef) \u0026\u0026 has(self.targetRefs)) || (has(self.targetSelectors) \u0026\u0026 self.targetSelectors.size() \u003e 0) ",
          "message": "either targetRef or targetRefs must be used"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.group == 'gateway.networking.k8s.io' : true",
          "message": "this policy can only have a targetRef.group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.kind in ['Gateway', 'HTTPRoute', 'GRPCRoute', 'UDPRoute', 'TCPRoute', 'TLSRoute'] : true",
          "message": "this policy can only have a targetRef.kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute"
        },
        {
          "rule": "has(self.targetRef) ? !has(self.targetRef.sectionName) : true",
          "message": "this policy does not yet support the sectionName field"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.group == 'gateway.networking.k8s.io') : true ",
          "message": "this policy can only have a targetRefs[*].group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.kind in ['Gateway', 'HTTPRoute', 'GRPCRoute', 'UDPRoute', 'TCPRoute', 'TLSRoute']) : true ",
          "message": "this policy can only have a targetRefs[*].kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, !has(ref.sectionName)) : true",
          "message": "this policy does not yet support the sectionName field"
        }
      ]
    },
    "status": {
      "type": "object",
      "required": [
        "ancestors"
      ],
      "properties": {
        "ancestors": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "required": [
              "ancestorRef",
              "controllerName"
            ],
            "properties": {
              "ancestorRef": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "group": {
                    "type": "string",
                    "default": "gateway.networking.k8s.io",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  },
                  "kind": {
                    "type": "string",
                    "default": "Gateway",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                  },
                  "namespace": {
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "sectionName": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  }
                },
                "additionalProperties": false
              },
              "conditions": {
                "type": "array",
                "maxItems": 8,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "type": "string",
                      "maxLength": 32768
                    },
                    "observedGeneration": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 0
                    },
                    "reason": {
                      "type": "string",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "controllerName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$\u0026'()*+,;=:]+$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
