{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "properties": {
        "circuitBreaker": {
          "type": "object",
          "properties": {
            "maxConnections": {
              "type": "integer",
              "format": "int64",
              "default": 1024,
              "maximum": 4294967295,
              "minimum": 0
            },
            "maxParallelRequests": {
              "type": "integer",
              "format": "int64",
              "default": 1024,
              "maximum": 4294967295,
              "minimum": 0
            },
            "maxParallelRetries": {
              "type": "integer",
              "format": "int64",
              "default": 1024,
              "maximum": 4294967295,
              "minimum": 0
            },
            "maxPendingRequests": {
              "type": "integer",
              "format": "int64",
              "default": 1024,
              "maximum": 4294967295,
              "minimum": 0
            },
            "maxRequestsPerConnection": {
              "type": "integer",
              "format": "int64",
              "maximum": 4294967295,
              "minimum": 0
            },
            "perEndpoint": {
              "type": "object",
              "properties": {
                "maxConnections": {
                  "type": "integer",
                  "format": "int64",
                  "default": 1024,
                  "maximum": 4294967295,
                  "minimum": 0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "compression": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "brotli": {
                "type": "object"
              },
              "gzip": {
                "type": "object"
              },
              "type": {
                "type": "string",
                "enum": [
                  "Gzip",
                  "Brotli"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "connection": {
          "type": "object",
          "properties": {
            "bufferLimit": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            },
            "socketBufferLimit": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            }
          },
          "additionalProperties": false
        },
        "dns": {
          "type": "object",
          "properties": {
            "dnsRefreshRate": {
              "type": "string",
              "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
            },
            "lookupFamily": {
              "type": "string",
              "enum": [
                "IPv4",
                "IPv6",
                "IPv4Preferred",
                "IPv6Preferred",
                "IPv4AndIPv6"
              ]
            },
            "respectDnsTtl": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "faultInjection": {
          "type": "object",
          "properties": {
            "abort": {
              "type": "object",
              "properties": {
                "grpcStatus": {
                  "type": "integer",
                  "format": "int32"
                },
                "httpStatus": {
                  "type": "integer",
                  "format": "int32",
                  "maximum": 600,
                  "minimum": 200
                },
                "percentage": {
                  "type": "number",
                  "default": 100
                }
              },
              "additionalProperties": false,
              "x-kubernetes-validations": [
                {
                  "rule": " !(has(self.httpStatus) \u0026\u0026 has(self.grpcStatus)) ",
                  "message": "httpStatus and grpcStatus cannot be simultaneously defined."
                },
                {
                  "rule": " has(self.httpStatus) || has(self.grpcStatus) ",
                  "message": "httpStatus and grpcStatus are set at least one."
                }
              ]
            },
            "delay": {
              "type": "object",
              "required": [
                "fixedDelay"
              ],
              "properties": {
                "fixedDelay": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "percentage": {
                  "type": "number",
                  "default": 100
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "x-kubernetes-validations": [
            {
              "rule": " has(self.delay) || has(self.abort) ",
              "message": "Delay and abort faults are set at least one."
            }
          ]
        },
        "healthCheck": {
          "type": "object",
          "properties": {
            "active": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "grpc": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "healthyThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "default": 1,
                  "minimum": 1
                },
                "http": {
                  "type": "object",
                  "required": [
                    "path"
                  ],
                  "properties": {
                    "expectedResponse": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "binary": {
                          "type": "string",
                          "format": "byte"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "allOf": [
                            {
                              "enum": [
                                "Text",
                                "Binary"
                              ]
                            },
                            {
                              "enum": [
                                "Text",
                                "Binary"
                              ]
                            }
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.type == 'Text' ? has(self.text) : !has(self.text)",
                          "message": "If payload type is Text, text field needs to be set."
                        },
                        {
                          "rule": "self.type == 'Binary' ? has(self.binary) : !has(self.binary)",
                          "message": "If payload type is Binary, binary field needs to be set."
                        }
                      ]
                    },
                    "expectedStatuses": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "maximum": 600,
                        "exclusiveMaximum": true,
                        "minimum": 100
                      }
                    },
                    "hostname": {
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "method": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string",
                      "maxLength": 1024,
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false
                },
                "initialJitter": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "interval": {
                  "type": "string",
                  "default": "3s",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "tcp": {
                  "type": "object",
                  "properties": {
                    "receive": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "binary": {
                          "type": "string",
                          "format": "byte"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "allOf": [
                            {
                              "enum": [
                                "Text",
                                "Binary"
                              ]
                            },
                            {
                              "enum": [
                                "Text",
                                "Binary"
                              ]
                            }
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.type == 'Text' ? has(self.text) : !has(self.text)",
                          "message": "If payload type is Text, text field needs to be set."
                        },
                        {
                          "rule": "self.type == 'Binary' ? has(self.binary) : !has(self.binary)",
                          "message": "If payload type is Binary, binary field needs to be set."
                        }
                      ]
                    },
                    "send": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "binary": {
                          "type": "string",
                          "format": "byte"
                        },
                        "text": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "allOf": [
                            {
                              "enum": [
                                "Text",
                                "Binary"
                              ]
                            },
                            {
                              "enum": [
                                "Text",
                                "Binary"
                              ]
                            }
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.type == 'Text' ? has(self.text) : !has(self.text)",
                          "message": "If payload type is Text, text field needs to be set."
                        },
                        {
                          "rule": "self.type == 'Binary' ? has(self.binary) : !has(self.binary)",
                          "message": "If payload type is Binary, binary field needs to be set."
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "timeout": {
                  "type": "string",
                  "default": "1s",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "type": {
                  "type": "string",
                  "allOf": [
                    {
                      "enum": [
                        "HTTP",
                        "TCP",
                        "GRPC"
                      ]
                    },
                    {
                      "enum": [
                        "HTTP",
                        "TCP",
                        "GRPC"
                      ]
                    }
                  ]
                },
                "unhealthyThreshold": {
                  "type": "integer",
                  "format": "int32",
                  "default": 3,
                  "minimum": 1
                }
              },
              "additionalProperties": false,
              "x-kubernetes-validations": [
                {
                  "rule": "self.type == 'HTTP' ? has(self.http) : !has(self.http)",
                  "message": "If Health Checker type is HTTP, http field needs to be set."
                },
                {
                  "rule": "self.type == 'TCP' ? has(self.tcp) : !has(self.tcp)",
                  "message": "If Health Checker type is TCP, tcp field needs to be set."
                },
                {
                  "rule": "has(self.grpc) ? self.type == 'GRPC' : true",
                  "message": "The grpc field can only be set if the Health Checker type is GRPC."
                }
              ]
            },
            "panicThreshold": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 0
            },
            "passive": {
              "type": "object",
              "properties": {
                "baseEjectionTime": {
                  "type": "string",
                  "default": "30s",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "consecutive5XxErrors": {
                  "type": "integer",
                  "format": "int32",
                  "default": 5
                },
                "consecutiveGatewayErrors": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0
                },
                "consecutiveLocalOriginFailures": {
                  "type": "integer",
                  "format": "int32",
                  "default": 5
                },
                "interval": {
                  "type": "string",
                  "default": "3s",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "maxEjectionPercent": {
                  "type": "integer",
                  "format": "int32",
                  "default": 10
                },
                "splitExternalLocalOriginErrors": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "http2": {
          "type": "object",
          "properties": {
            "initialConnectionWindowSize": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            },
            "initialStreamWindowSize": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            },
            "maxConcurrentStreams": {
              "type": "integer",
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 1
            },
            "onInvalidMessage": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "httpUpgrade": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "connect": {
                "type": "object",
                "properties": {
                  "terminate": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "!has(self.connect) || self.type == 'CONNECT'",
                "message": "The connect configuration is only allowed when the type is CONNECT."
              }
            ]
          }
        },
        "loadBalancer": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "consistentHash": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "cookie": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "ttl": {
                      "type": "string",
                      "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                    }
                  },
                  "additionalProperties": false
                },
                "header": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "tableSize": {
                  "type": "integer",
                  "format": "int64",
                  "default": 65537,
                  "maximum": 5000011,
                  "minimum": 2
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "SourceIP",
                    "Header",
                    "Cookie"
                  ]
                }
              },
              "additionalProperties": false,
              "x-kubernetes-validations": [
                {
                  "rule": "self.type == 'Header' ? has(self.header) : !has(self.header)",
                  "message": "If consistent hash type is header, the header field must be set."
                },
                {
                  "rule": "self.type == 'Cookie' ? has(self.cookie) : !has(self.cookie)",
                  "message": "If consistent hash type is cookie, the cookie field must be set."
                }
              ]
            },
            "endpointOverride": {
              "type": "object",
              "required": [
                "extractFrom"
              ],
              "properties": {
                "extractFrom": {
                  "type": "array",
                  "maxItems": 10,
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "header": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "slowStart": {
              "type": "object",
              "required": [
                "window"
              ],
              "properties": {
                "window": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "type": "string",
              "enum": [
                "ConsistentHash",
                "LeastRequest",
                "Random",
                "RoundRobin"
              ]
            },
            "zoneAware": {
              "type": "object",
              "properties": {
                "preferLocal": {
                  "type": "object",
                  "properties": {
                    "force": {
                      "type": "object",
                      "properties": {
                        "minEndpointsInZoneThreshold": {
                          "type": "integer",
                          "format": "int32"
                        }
                      },
                      "additionalProperties": false
                    },
                    "minEndpointsThreshold": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "x-kubernetes-validations": [
            {
              "rule": "self.type == 'ConsistentHash' ? has(self.consistentHash) : !has(self.consistentHash)",
              "message": "If LoadBalancer type is consistentHash, consistentHash field needs to be set."
            },
            {
              "rule": "self.type in ['Random', 'ConsistentHash'] ? !has(self.slowStart) : true ",
              "message": "Currently SlowStart is only supported for RoundRobin and LeastRequest load balancers."
            },
            {
              "rule": "self.type == 'ConsistentHash' ? !has(self.zoneAware) : true ",
              "message": "Currently ZoneAware is only supported for LeastRequest, Random, and RoundRobin load balancers."
            }
          ]
        },
        "mergeType": {
          "type": "string"
        },
        "proxyProtocol": {
          "type": "object",
          "required": [
            "version"
          ],
          "properties": {
            "version": {
              "type": "string",
              "enum": [
                "V1",
                "V2"
              ]
            }
          },
          "additionalProperties": false
        },
        "rateLimit": {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "global": {
              "type": "object",
              "required": [
                "rules"
              ],
              "properties": {
                "rules": {
                  "type": "array",
                  "maxItems": 64,
                  "items": {
                    "type": "object",
                    "required": [
                      "limit"
                    ],
                    "properties": {
                      "clientSelectors": {
                        "type": "array",
                        "maxItems": 8,
                        "items": {
                          "type": "object",
                          "properties": {
                            "headers": {
                              "type": "array",
                              "maxItems": 16,
                              "items": {
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "invert": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256,
                                    "minLength": 1
                                  },
                                  "type": {
                                    "type": "string",
                                    "default": "Exact",
                                    "enum": [
                                      "Exact",
                                      "RegularExpression",
                                      "Distinct"
                                    ]
                                  },
                                  "value": {
                                    "type": "string",
                                    "maxLength": 1024
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "sourceCIDR": {
                              "type": "object",
                              "required": [
                                "value"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "default": "Exact",
                                  "enum": [
                                    "Exact",
                                    "Distinct"
                                  ]
                                },
                                "value": {
                                  "type": "string",
                                  "maxLength": 256,
                                  "minLength": 1
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "cost": {
                        "type": "object",
                        "properties": {
                          "request": {
                            "type": "object",
                            "required": [
                              "from"
                            ],
                            "properties": {
                              "from": {
                                "type": "string",
                                "enum": [
                                  "Number",
                                  "Metadata"
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "number": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-validations": [
                              {
                                "rule": "!(has(self.number) \u0026\u0026 has(self.metadata))",
                                "message": "only one of number or metadata can be specified"
                              }
                            ]
                          },
                          "response": {
                            "type": "object",
                            "required": [
                              "from"
                            ],
                            "properties": {
                              "from": {
                                "type": "string",
                                "enum": [
                                  "Number",
                                  "Metadata"
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "number": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-validations": [
                              {
                                "rule": "!(has(self.number) \u0026\u0026 has(self.metadata))",
                                "message": "only one of number or metadata can be specified"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "limit": {
                        "type": "object",
                        "required": [
                          "requests",
                          "unit"
                        ],
                        "properties": {
                          "requests": {
                            "type": "integer"
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "Second",
                              "Minute",
                              "Hour",
                              "Day",
                              "Month",
                              "Year"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "shared": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "local": {
              "type": "object",
              "properties": {
                "rules": {
                  "type": "array",
                  "maxItems": 16,
                  "items": {
                    "type": "object",
                    "required": [
                      "limit"
                    ],
                    "properties": {
                      "clientSelectors": {
                        "type": "array",
                        "maxItems": 8,
                        "items": {
                          "type": "object",
                          "properties": {
                            "headers": {
                              "type": "array",
                              "maxItems": 16,
                              "items": {
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "invert": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "name": {
                                    "type": "string",
                                    "maxLength": 256,
                                    "minLength": 1
                                  },
                                  "type": {
                                    "type": "string",
                                    "default": "Exact",
                                    "enum": [
                                      "Exact",
                                      "RegularExpression",
                                      "Distinct"
                                    ]
                                  },
                                  "value": {
                                    "type": "string",
                                    "maxLength": 1024
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "sourceCIDR": {
                              "type": "object",
                              "required": [
                                "value"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "default": "Exact",
                                  "enum": [
                                    "Exact",
                                    "Distinct"
                                  ]
                                },
                                "value": {
                                  "type": "string",
                                  "maxLength": 256,
                                  "minLength": 1
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "cost": {
                        "type": "object",
                        "properties": {
                          "request": {
                            "type": "object",
                            "required": [
                              "from"
                            ],
                            "properties": {
                              "from": {
                                "type": "string",
                                "enum": [
                                  "Number",
                                  "Metadata"
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "number": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-validations": [
                              {
                                "rule": "!(has(self.number) \u0026\u0026 has(self.metadata))",
                                "message": "only one of number or metadata can be specified"
                              }
                            ]
                          },
                          "response": {
                            "type": "object",
                            "required": [
                              "from"
                            ],
                            "properties": {
                              "from": {
                                "type": "string",
                                "enum": [
                                  "Number",
                                  "Metadata"
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "number": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-validations": [
                              {
                                "rule": "!(has(self.number) \u0026\u0026 has(self.metadata))",
                                "message": "only one of number or metadata can be specified"
                              }
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "limit": {
                        "type": "object",
                        "required": [
                          "requests",
                          "unit"
                        ],
                        "properties": {
                          "requests": {
                            "type": "integer"
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "Second",
                              "Minute",
                              "Hour",
                              "Day",
                              "Month",
                              "Year"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "shared": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-validations": [
                    {
                      "rule": "self.all(foo, !has(foo.cost) || !has(foo.cost.response))",
                      "message": "response cost is not supported for Local Rate Limits"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "type": {
              "type": "string",
              "enum": [
                "Global",
                "Local"
              ]
            }
          },
          "additionalProperties": false
        },
        "requestBuffer": {
          "type": "object",
          "properties": {
            "limit": {
              "allOf": [
                {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                },
                {
                  "pattern": "^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$"
                }
              ],
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            }
          },
          "additionalProperties": false
        },
        "responseOverride": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "match"
            ],
            "properties": {
              "match": {
                "type": "object",
                "required": [
                  "statusCodes"
                ],
                "properties": {
                  "statusCodes": {
                    "type": "array",
                    "maxItems": 50,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "range": {
                          "type": "object",
                          "required": [
                            "end",
                            "start"
                          ],
                          "properties": {
                            "end": {
                              "type": "integer"
                            },
                            "start": {
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.end \u003e self.start",
                              "message": "end must be greater than start"
                            }
                          ]
                        },
                        "type": {
                          "type": "string",
                          "default": "Value",
                          "allOf": [
                            {
                              "enum": [
                                "Value",
                                "Range"
                              ]
                            },
                            {
                              "enum": [
                                "Value",
                                "Range"
                              ]
                            }
                          ]
                        },
                        "value": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "(!has(self.type) || self.type == 'Value')? has(self.value) : true",
                          "message": "value must be set for type Value"
                        },
                        {
                          "rule": "(has(self.type) \u0026\u0026 self.type == 'Range')? has(self.range) : true",
                          "message": "range must be set for type Range"
                        }
                      ]
                    }
                  }
                },
                "additionalProperties": false
              },
              "redirect": {
                "type": "object",
                "properties": {
                  "hostname": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  },
                  "path": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "replaceFullPath": {
                        "type": "string",
                        "maxLength": 1024
                      },
                      "replacePrefixMatch": {
                        "type": "string",
                        "maxLength": 1024
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "ReplaceFullPath",
                          "ReplacePrefixMatch"
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-validations": [
                      {
                        "rule": "self.type == 'ReplaceFullPath'",
                        "message": "only ReplaceFullPath is supported for path.type"
                      },
                      {
                        "rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
                        "message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
                      },
                      {
                        "rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
                        "message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
                      },
                      {
                        "rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
                        "message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
                      },
                      {
                        "rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
                        "message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
                      }
                    ]
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "scheme": {
                    "type": "string",
                    "enum": [
                      "http",
                      "https"
                    ]
                  },
                  "statusCode": {
                    "type": "integer",
                    "default": 302,
                    "enum": [
                      301,
                      302
                    ]
                  }
                },
                "additionalProperties": false
              },
              "response": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "inline": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "default": "Inline",
                        "allOf": [
                          {
                            "enum": [
                              "Inline",
                              "ValueRef"
                            ]
                          },
                          {
                            "enum": [
                              "Inline",
                              "ValueRef"
                            ]
                          }
                        ]
                      },
                      "valueRef": {
                        "type": "object",
                        "required": [
                          "group",
                          "kind",
                          "name"
                        ],
                        "properties": {
                          "group": {
                            "type": "string",
                            "maxLength": 253,
                            "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          },
                          "kind": {
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 253,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-validations": [
                      {
                        "rule": "(!has(self.type) || self.type == 'Inline')? has(self.inline) : true",
                        "message": "inline must be set for type Inline"
                      },
                      {
                        "rule": "(has(self.type) \u0026\u0026 self.type == 'ValueRef')? has(self.valueRef) : true",
                        "message": "valueRef must be set for type ValueRef"
                      },
                      {
                        "rule": "has(self.valueRef) ? self.valueRef.kind == 'ConfigMap' : true",
                        "message": "only ConfigMap is supported for ValueRef"
                      }
                    ]
                  },
                  "contentType": {
                    "type": "string"
                  },
                  "statusCode": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "(has(self.response) \u0026\u0026 !has(self.redirect)) || (!has(self.response) \u0026\u0026 has(self.redirect))",
                "message": "exactly one of response or redirect must be specified"
              }
            ]
          }
        },
        "retry": {
          "type": "object",
          "properties": {
            "numAttemptsPerPriority": {
              "type": "integer",
              "format": "int32"
            },
            "numRetries": {
              "type": "integer",
              "format": "int32",
              "default": 2,
              "minimum": 0
            },
            "perRetry": {
              "type": "object",
              "properties": {
                "backOff": {
                  "type": "object",
                  "properties": {
                    "baseInterval": {
                      "type": "string",
                      "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                    },
                    "maxInterval": {
                      "type": "string",
                      "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                    }
                  },
                  "additionalProperties": false
                },
                "timeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                }
              },
              "additionalProperties": false
            },
            "retryOn": {
              "type": "object",
              "properties": {
                "httpStatusCodes": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "maximum": 600,
                    "exclusiveMaximum": true,
                    "minimum": 100
                  }
                },
                "triggers": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "5xx",
                      "gateway-error",
                      "reset",
                      "reset-before-request",
                      "connect-failure",
                      "retriable-4xx",
                      "refused-stream",
                      "retriable-status-codes",
                      "cancelled",
                      "deadline-exceeded",
                      "internal",
                      "resource-exhausted",
                      "unavailable"
                    ]
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "targetRef": {
          "type": "object",
          "required": [
            "group",
            "kind",
            "name"
          ],
          "properties": {
            "group": {
              "type": "string",
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            },
            "kind": {
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
            },
            "name": {
              "type": "string",
              "maxLength": 253,
              "minLength": 1
            },
            "sectionName": {
              "type": "string",
              "maxLength": 253,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            }
          },
          "additionalProperties": false
        },
        "targetRefs": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "group",
              "kind",
              "name"
            ],
            "properties": {
              "group": {
                "type": "string",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "name": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              },
              "sectionName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              }
            },
            "additionalProperties": false
          }
        },
        "targetSelectors": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "kind"
            ],
            "properties": {
              "group": {
                "type": "string",
                "default": "gateway.networking.k8s.io",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "matchExpressions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "operator"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "operator": {
                      "type": "string"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "matchLabels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "has(self.group) ? self.group == 'gateway.networking.k8s.io' : true ",
                "message": "group must be gateway.networking.k8s.io"
              }
            ]
          }
        },
        "tcpKeepalive": {
          "type": "object",
          "properties": {
            "idleTime": {
              "type": "string",
              "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
            },
            "interval": {
              "type": "string",
              "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
            },
            "probes": {
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "telemetry": {
          "type": "object",
          "properties": {
            "tracing": {
              "type": "object",
              "properties": {
                "customTags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "environment": {
                        "description": "Environment adds value from environment variable to each span.\nIt's required when the type is \"Environment\".",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "defaultValue": {
                            "description": "DefaultValue defines the default value to use if the environment variable is not set.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name defines the name of the environment variable which to extract the value from.",
                            "type": "string"
                          }
                        }
                      },
                      "literal": {
                        "description": "Literal adds hard-coded value to each span.\nIt's required when the type is \"Literal\".",
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "description": "Value defines the hard-coded value to add to each span.",
                            "type": "string"
                          }
                        }
                      },
                      "requestHeader": {
                        "description": "RequestHeader adds value from request header to each span.\nIt's required when the type is \"RequestHeader\".",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "defaultValue": {
                            "description": "DefaultValue defines the default value to use if the request header is not set.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name defines the name of the request header which to extract the value from.",
                            "type": "string"
                          }
                        }
                      },
                      "type": {
                        "description": "Type defines the type of custom tag.",
                        "type": "string",
                        "default": "Literal",
                        "enum": [
                          "Literal",
                          "Environment",
                          "RequestHeader"
                        ]
                      }
                    }
                  }
                },
                "samplingFraction": {
                  "type": "object",
                  "required": [
                    "numerator"
                  ],
                  "properties": {
                    "denominator": {
                      "type": "integer",
                      "format": "int32",
                      "default": 100,
                      "minimum": 1
                    },
                    "numerator": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "self.numerator \u003c= self.denominator",
                      "message": "numerator must be less than or equal to denominator"
                    }
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "timeout": {
          "type": "object",
          "properties": {
            "http": {
              "type": "object",
              "properties": {
                "connectionIdleTimeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "maxConnectionDuration": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                },
                "requestTimeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                }
              },
              "additionalProperties": false
            },
            "tcp": {
              "type": "object",
              "properties": {
                "connectTimeout": {
                  "type": "string",
                  "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "useClientProtocol": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.targetRef) \u0026\u0026 !has(self.targetRefs)) || (!has(self.targetRef) \u0026\u0026 has(self.targetRefs)) || (has(self.targetSelectors) \u0026\u0026 self.targetSelectors.size() \u003e 0) ",
          "message": "either targetRef or targetRefs must be used"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.group == 'gateway.networking.k8s.io' : true ",
          "message": "this policy can only have a targetRef.group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.kind in ['Gateway', 'HTTPRoute', 'GRPCRoute', 'UDPRoute', 'TCPRoute', 'TLSRoute'] : true",
          "message": "this policy can only have a targetRef.kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute"
        },
        {
          "rule": "has(self.targetRef) ? !has(self.targetRef.sectionName) : true",
          "message": "this policy does not yet support the sectionName field"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.group == 'gateway.networking.k8s.io') : true ",
          "message": "this policy can only have a targetRefs[*].group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.kind in ['Gateway', 'HTTPRoute', 'GRPCRoute', 'UDPRoute', 'TCPRoute', 'TLSRoute']) : true ",
          "message": "this policy can only have a targetRefs[*].kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, !has(ref.sectionName)) : true",
          "message": "this policy does not yet support the sectionName field"
        }
      ]
    },
    "status": {
      "type": "object",
      "required": [
        "ancestors"
      ],
      "properties": {
        "ancestors": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "required": [
              "ancestorRef",
              "controllerName"
            ],
            "properties": {
              "ancestorRef": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "group": {
                    "type": "string",
                    "default": "gateway.networking.k8s.io",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  },
                  "kind": {
                    "type": "string",
                    "default": "Gateway",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                  },
                  "namespace": {
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "sectionName": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  }
                },
                "additionalProperties": false
              },
              "conditions": {
                "type": "array",
                "maxItems": 8,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "type": "string",
                      "maxLength": 32768
                    },
                    "observedGeneration": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 0
                    },
                    "reason": {
                      "type": "string",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "controllerName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$\u0026'()*+,;=:]+$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
