{
  "description": "ReconciliationTrace is the Schema for the reconciliationtraces API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ReconciliationTraceSpec defines the desired state of ReconciliationTrace",
      "type": "object",
      "properties": {
        "dryRun": {
          "description": "DryRun tells the Controller to simulate the reconciliation process with a new desired spec of the TargetObject.\nAnd a reconciliation plan will be generated and described in the ReconciliationTraceStatus.\nThe plan generation process will not impact the state of the TargetObject.",
          "type": "object",
          "required": [
            "desiredSpec"
          ],
          "properties": {
            "desiredSpec": {
              "description": "DesiredSpec specifies the desired spec of the TargetObject.\nThe desired spec will be merged into the current spec by a strategic merge patch way to build the final spec,\nand the reconciliation plan will be calculated by comparing the current spec to the final spec.\nDesiredSpec should be a valid YAML string.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "locale": {
          "description": "Locale specifies the locale to use when localizing the reconciliation trace.",
          "type": "string"
        },
        "stateEvaluationExpression": {
          "description": "StateEvaluationExpression specifies the state evaluation expression used during reconciliation progress observation.\nThe whole reconciliation process from the creation of the TargetObject to the deletion of it\nis separated into several reconciliation cycles.\nThe StateEvaluationExpression is applied to the TargetObject,\nand an evaluation result of true indicates the end of a reconciliation cycle.\nStateEvaluationExpression overrides the builtin default value.",
          "type": "object",
          "properties": {
            "celExpression": {
              "description": "CELExpression specifies to use CEL to evaluation the object state.\nThe root object used in the expression is the primary object.",
              "type": "object",
              "required": [
                "expression"
              ],
              "properties": {
                "expression": {
                  "description": "Expression specifies the CEL expression.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "targetObject": {
          "description": "TargetObject specifies the target Cluster object.\nDefault is the Cluster object with same namespace and name as this ReconciliationTrace object.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nDefault is same as the ReconciliationTrace object.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nDefault is same as the ReconciliationTrace object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ReconciliationTraceStatus defines the observed state of ReconciliationTrace",
      "type": "object",
      "required": [
        "currentState",
        "initialObjectTree"
      ],
      "properties": {
        "currentState": {
          "description": "CurrentState is the current state of the latest reconciliation cycle,\nthat is the reconciliation process from the end of last reconciliation cycle until now.",
          "type": "object",
          "required": [
            "changes",
            "objectTree",
            "summary"
          ],
          "properties": {
            "changes": {
              "description": "Changes describes the detail reconciliation process.",
              "type": "array",
              "items": {
                "description": "ObjectChange defines a detailed change of an object.",
                "type": "object",
                "required": [
                  "changeType",
                  "description",
                  "objectReference",
                  "revision"
                ],
                "properties": {
                  "changeType": {
                    "description": "ChangeType specifies the change type.\nEvent - specifies that this is a Kubernetes Event.\nCreation - specifies that this is an object creation.\nUpdate - specifies that this is an object update.\nDeletion - specifies that this is an object deletion.",
                    "type": "string",
                    "enum": [
                      "Event",
                      "Creation",
                      "Update",
                      "Deletion"
                    ]
                  },
                  "description": {
                    "description": "Description describes the change in a user-friendly way.",
                    "type": "string"
                  },
                  "eventAttributes": {
                    "description": "EventAttributes specifies the attributes of the event when ChangeType is Event.",
                    "type": "object",
                    "required": [
                      "name",
                      "reason",
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the Event.",
                        "type": "string"
                      },
                      "reason": {
                        "description": "Reason of the Event.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the Event.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "localDescription": {
                    "description": "LocalDescription is the localized version of Description by using the Locale specified in `spec.locale`.\nEmpty if the `spec.locale` is not specified.",
                    "type": "string"
                  },
                  "objectReference": {
                    "description": "ObjectReference specifies the Object this change described.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "revision": {
                    "description": "Revision specifies the revision of the object after this change.\nRevision can be compared globally between all ObjectChanges of all Objects, to build a total order object change sequence.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timestamp": {
                    "description": "Timestamp is a timestamp representing the ReconciliationTrace Controller time when this change occurred.\nIt is not guaranteed to be set in happens-before order across separate changes.\nIt is represented in RFC3339 form and is in UTC.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              }
            },
            "objectTree": {
              "description": "ObjectTree specifies the current object tree of the reconciliation cycle.\nIdeally, ObjectTree should be same as applying Changes to InitialObjectTree.",
              "type": "object",
              "required": [
                "primary"
              ],
              "properties": {
                "primary": {
                  "description": "Primary specifies reference of the primary object.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "fieldPath": {
                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "secondaries": {
                  "description": "Secondaries describes all the secondary objects of this object, if any.",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "summary": {
              "description": "Summary summarizes the ObjectTree and Changes.",
              "type": "object",
              "required": [
                "objectSummaries"
              ],
              "properties": {
                "objectSummaries": {
                  "description": "ObjectSummaries summarizes each object type.",
                  "type": "array",
                  "items": {
                    "description": "ObjectSummary defines the total and change of an object.",
                    "type": "object",
                    "required": [
                      "objectType",
                      "total"
                    ],
                    "properties": {
                      "changeSummary": {
                        "description": "ChangeSummary summarizes the change by comparing the final state to the current state of this type.\nNil means no change.",
                        "type": "object",
                        "properties": {
                          "added": {
                            "description": "Added specifies the number of object will be added.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "deleted": {
                            "description": "Deleted specifies the number of object will be deleted.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "updated": {
                            "description": "Updated specifies the number of object will be updated.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "objectType": {
                        "description": "ObjectType of the object.",
                        "type": "object",
                        "required": [
                          "apiVersion",
                          "kind"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "APIVersion of the type.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the type.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "total": {
                        "description": "Total number of the object of type defined by ObjectType.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "desiredState": {
          "description": "DesiredState is the desired state of the latest reconciliation cycle.",
          "type": "object",
          "required": [
            "changes",
            "objectTree",
            "summary"
          ],
          "properties": {
            "changes": {
              "description": "Changes describes the detail reconciliation process.",
              "type": "array",
              "items": {
                "description": "ObjectChange defines a detailed change of an object.",
                "type": "object",
                "required": [
                  "changeType",
                  "description",
                  "objectReference",
                  "revision"
                ],
                "properties": {
                  "changeType": {
                    "description": "ChangeType specifies the change type.\nEvent - specifies that this is a Kubernetes Event.\nCreation - specifies that this is an object creation.\nUpdate - specifies that this is an object update.\nDeletion - specifies that this is an object deletion.",
                    "type": "string",
                    "enum": [
                      "Event",
                      "Creation",
                      "Update",
                      "Deletion"
                    ]
                  },
                  "description": {
                    "description": "Description describes the change in a user-friendly way.",
                    "type": "string"
                  },
                  "eventAttributes": {
                    "description": "EventAttributes specifies the attributes of the event when ChangeType is Event.",
                    "type": "object",
                    "required": [
                      "name",
                      "reason",
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the Event.",
                        "type": "string"
                      },
                      "reason": {
                        "description": "Reason of the Event.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of the Event.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "localDescription": {
                    "description": "LocalDescription is the localized version of Description by using the Locale specified in `spec.locale`.\nEmpty if the `spec.locale` is not specified.",
                    "type": "string"
                  },
                  "objectReference": {
                    "description": "ObjectReference specifies the Object this change described.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "revision": {
                    "description": "Revision specifies the revision of the object after this change.\nRevision can be compared globally between all ObjectChanges of all Objects, to build a total order object change sequence.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timestamp": {
                    "description": "Timestamp is a timestamp representing the ReconciliationTrace Controller time when this change occurred.\nIt is not guaranteed to be set in happens-before order across separate changes.\nIt is represented in RFC3339 form and is in UTC.",
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              }
            },
            "objectTree": {
              "description": "ObjectTree specifies the current object tree of the reconciliation cycle.\nIdeally, ObjectTree should be same as applying Changes to InitialObjectTree.",
              "type": "object",
              "required": [
                "primary"
              ],
              "properties": {
                "primary": {
                  "description": "Primary specifies reference of the primary object.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "fieldPath": {
                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "secondaries": {
                  "description": "Secondaries describes all the secondary objects of this object, if any.",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "summary": {
              "description": "Summary summarizes the ObjectTree and Changes.",
              "type": "object",
              "required": [
                "objectSummaries"
              ],
              "properties": {
                "objectSummaries": {
                  "description": "ObjectSummaries summarizes each object type.",
                  "type": "array",
                  "items": {
                    "description": "ObjectSummary defines the total and change of an object.",
                    "type": "object",
                    "required": [
                      "objectType",
                      "total"
                    ],
                    "properties": {
                      "changeSummary": {
                        "description": "ChangeSummary summarizes the change by comparing the final state to the current state of this type.\nNil means no change.",
                        "type": "object",
                        "properties": {
                          "added": {
                            "description": "Added specifies the number of object will be added.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "deleted": {
                            "description": "Deleted specifies the number of object will be deleted.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "updated": {
                            "description": "Updated specifies the number of object will be updated.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "objectType": {
                        "description": "ObjectType of the object.",
                        "type": "object",
                        "required": [
                          "apiVersion",
                          "kind"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "APIVersion of the type.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the type.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "total": {
                        "description": "Total number of the object of type defined by ObjectType.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "dryRunResult": {
          "description": "DryRunResult specifies the dry-run result.",
          "type": "object",
          "required": [
            "desiredSpecRevision",
            "observedTargetGeneration",
            "plan",
            "specDiff"
          ],
          "properties": {
            "desiredSpecRevision": {
              "description": "DesiredSpecRevision specifies the revision of the DesiredSpec.",
              "type": "string"
            },
            "message": {
              "description": "Message specifies a description of the failure reason.",
              "type": "string"
            },
            "observedTargetGeneration": {
              "description": "ObservedTargetGeneration specifies the observed generation of the TargetObject.",
              "type": "integer",
              "format": "int64"
            },
            "phase": {
              "description": "Phase specifies the current phase of the plan generation process.\nSucceed - the plan is calculated successfully.\nFailed - the plan can't be generated for some reason described in Reason.",
              "type": "string",
              "enum": [
                "Succeed",
                "Failed"
              ]
            },
            "plan": {
              "description": "Plan describes the detail reconciliation process if the DesiredSpec is applied.",
              "type": "object",
              "required": [
                "changes",
                "objectTree",
                "summary"
              ],
              "properties": {
                "changes": {
                  "description": "Changes describes the detail reconciliation process.",
                  "type": "array",
                  "items": {
                    "description": "ObjectChange defines a detailed change of an object.",
                    "type": "object",
                    "required": [
                      "changeType",
                      "description",
                      "objectReference",
                      "revision"
                    ],
                    "properties": {
                      "changeType": {
                        "description": "ChangeType specifies the change type.\nEvent - specifies that this is a Kubernetes Event.\nCreation - specifies that this is an object creation.\nUpdate - specifies that this is an object update.\nDeletion - specifies that this is an object deletion.",
                        "type": "string",
                        "enum": [
                          "Event",
                          "Creation",
                          "Update",
                          "Deletion"
                        ]
                      },
                      "description": {
                        "description": "Description describes the change in a user-friendly way.",
                        "type": "string"
                      },
                      "eventAttributes": {
                        "description": "EventAttributes specifies the attributes of the event when ChangeType is Event.",
                        "type": "object",
                        "required": [
                          "name",
                          "reason",
                          "type"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the Event.",
                            "type": "string"
                          },
                          "reason": {
                            "description": "Reason of the Event.",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of the Event.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "localDescription": {
                        "description": "LocalDescription is the localized version of Description by using the Locale specified in `spec.locale`.\nEmpty if the `spec.locale` is not specified.",
                        "type": "string"
                      },
                      "objectReference": {
                        "description": "ObjectReference specifies the Object this change described.",
                        "type": "object",
                        "properties": {
                          "apiVersion": {
                            "description": "API version of the referent.",
                            "type": "string"
                          },
                          "fieldPath": {
                            "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          },
                          "resourceVersion": {
                            "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                            "type": "string"
                          },
                          "uid": {
                            "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "revision": {
                        "description": "Revision specifies the revision of the object after this change.\nRevision can be compared globally between all ObjectChanges of all Objects, to build a total order object change sequence.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "timestamp": {
                        "description": "Timestamp is a timestamp representing the ReconciliationTrace Controller time when this change occurred.\nIt is not guaranteed to be set in happens-before order across separate changes.\nIt is represented in RFC3339 form and is in UTC.",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "objectTree": {
                  "description": "ObjectTree specifies the current object tree of the reconciliation cycle.\nIdeally, ObjectTree should be same as applying Changes to InitialObjectTree.",
                  "type": "object",
                  "required": [
                    "primary"
                  ],
                  "properties": {
                    "primary": {
                      "description": "Primary specifies reference of the primary object.",
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "description": "API version of the referent.",
                          "type": "string"
                        },
                        "fieldPath": {
                          "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                          "type": "string"
                        },
                        "resourceVersion": {
                          "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                          "type": "string"
                        },
                        "uid": {
                          "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secondaries": {
                      "description": "Secondaries describes all the secondary objects of this object, if any.",
                      "x-kubernetes-preserve-unknown-fields": true
                    }
                  },
                  "additionalProperties": false
                },
                "summary": {
                  "description": "Summary summarizes the ObjectTree and Changes.",
                  "type": "object",
                  "required": [
                    "objectSummaries"
                  ],
                  "properties": {
                    "objectSummaries": {
                      "description": "ObjectSummaries summarizes each object type.",
                      "type": "array",
                      "items": {
                        "description": "ObjectSummary defines the total and change of an object.",
                        "type": "object",
                        "required": [
                          "objectType",
                          "total"
                        ],
                        "properties": {
                          "changeSummary": {
                            "description": "ChangeSummary summarizes the change by comparing the final state to the current state of this type.\nNil means no change.",
                            "type": "object",
                            "properties": {
                              "added": {
                                "description": "Added specifies the number of object will be added.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "deleted": {
                                "description": "Deleted specifies the number of object will be deleted.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "updated": {
                                "description": "Updated specifies the number of object will be updated.",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "objectType": {
                            "description": "ObjectType of the object.",
                            "type": "object",
                            "required": [
                              "apiVersion",
                              "kind"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "APIVersion of the type.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind of the type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "total": {
                            "description": "Total number of the object of type defined by ObjectType.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "reason": {
              "description": "Reason specifies the reason when the Phase is Failed.",
              "type": "string"
            },
            "specDiff": {
              "description": "SpecDiff describes the diff between the current spec and the final spec.\nThe whole spec struct will be compared and an example SpecDiff looks like:\n{\n \tAffinity: {\n \t\tPodAntiAffinity: \"Preferred\",\n \t\tTenancy: \"SharedNode\",\n \t},\n \tComponentSpecs: {\n \t\t{\n \t\t\tComponentDef: \"postgresql\",\n \t\t\tName: \"postgresql\",\n-\t\t\tReplicas: 2,\n \t\t\tResources:\n \t\t\t{\n \t\t\t\tLimits:\n \t\t\t\t{\n-\t\t\t\t\tCPU: 500m,\n-\t\t\t\t\tMemory: 512Mi,\n \t\t\t\t},\n \t\t\t\tRequests:\n \t\t\t\t{\n-\t\t\t\t\tCPU: 500m,\n-\t\t\t\t\tMemory: 512Mi,\n \t\t\t\t},\n \t\t\t},\n \t\t},\n \t},\n}",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initialObjectTree": {
          "description": "InitialObjectTree specifies the initial object tree when the latest reconciliation cycle started.",
          "type": "object",
          "required": [
            "primary"
          ],
          "properties": {
            "primary": {
              "description": "Primary specifies reference of the primary object.",
              "type": "object",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "secondaries": {
              "description": "Secondaries describes all the secondary objects of this object, if any.",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
