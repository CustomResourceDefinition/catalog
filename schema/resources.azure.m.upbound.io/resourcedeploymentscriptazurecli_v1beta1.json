{
  "description": "ResourceDeploymentScriptAzureCli is the Schema for the ResourceDeploymentScriptAzureClis API. Manages a Resource Deployment Script of Azure Cli.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ResourceDeploymentScriptAzureCliSpec defines the desired state of ResourceDeploymentScriptAzureCli",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "cleanupPreference": {
              "description": "Specifies the cleanup preference when the script execution gets in a terminal state. Possible values are Always, OnExpiration, OnSuccess. Defaults to Always. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "commandLine": {
              "description": "Command line arguments to pass to the script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "container": {
              "description": "A container block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "containerGroupName": {
                  "description": "Container group name, if not specified then the name will get auto-generated. For more information, please refer to the Container Configuration documentation.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "environmentVariable": {
              "description": "An environment_variable block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the name of the environment variable.",
                    "type": "string"
                  },
                  "secureValueSecretRef": {
                    "description": "Specifies the value of the secure environment variable.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "value": {
                    "description": "Specifies the value of the environment variable.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "forceUpdateTag": {
              "description": "Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "identityIdsRefs": {
                  "description": "References to UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "array",
                  "items": {
                    "description": "A NamespacedReference to a named object.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "identityIdsSelector": {
                  "description": "Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "description": "Type of the managed identity. The only possible value is UserAssigned. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the Azure Region where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "name": {
              "description": "Specifies the name which should be used for this Resource Deployment Script. The name length must be from 1 to 260 characters. The name can only contain alphanumeric, underscore, parentheses, hyphen and period, and it cannot end with a period. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "primaryScriptUri": {
              "description": "Uri for the script. This is the entry point for the external script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "Specifies the name of the Resource Group where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "retentionInterval": {
              "description": "Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. The time duration should be between 1 hour and 26 hours (inclusive) and should be specified in ISO 8601 format. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "scriptContent": {
              "description": "Script body. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "storageAccount": {
              "description": "A storage_account block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "keySecretRef": {
                  "description": "Specifies the storage account access key.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "name": {
                  "description": "Specifies the storage account name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "supportingScriptUris": {
              "description": "Supporting files for the external script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Resource Deployment Script.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Maximum allowed script execution time specified in ISO 8601 format. Needs to be greater than 0 and smaller than 1 day. Defaults to P1D. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "version": {
              "description": "Specifies the version of the Azure CLI that should be used in the format X.Y.Z (e.g. 2.30.0). A canonical list of versions is available from the Microsoft Container Registry API. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "cleanupPreference": {
              "description": "Specifies the cleanup preference when the script execution gets in a terminal state. Possible values are Always, OnExpiration, OnSuccess. Defaults to Always. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "commandLine": {
              "description": "Command line arguments to pass to the script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "container": {
              "description": "A container block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "containerGroupName": {
                  "description": "Container group name, if not specified then the name will get auto-generated. For more information, please refer to the Container Configuration documentation.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "environmentVariable": {
              "description": "An environment_variable block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the name of the environment variable.",
                    "type": "string"
                  },
                  "secureValueSecretRef": {
                    "description": "Specifies the value of the secure environment variable.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "value": {
                    "description": "Specifies the value of the environment variable.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "forceUpdateTag": {
              "description": "Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "identityIdsRefs": {
                  "description": "References to UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "array",
                  "items": {
                    "description": "A NamespacedReference to a named object.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "identityIdsSelector": {
                  "description": "Selector for a list of UserAssignedIdentity in managedidentity to populate identityIds.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "description": "Type of the managed identity. The only possible value is UserAssigned. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the Azure Region where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "name": {
              "description": "Specifies the name which should be used for this Resource Deployment Script. The name length must be from 1 to 260 characters. The name can only contain alphanumeric, underscore, parentheses, hyphen and period, and it cannot end with a period. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "primaryScriptUri": {
              "description": "Uri for the script. This is the entry point for the external script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "Specifies the name of the Resource Group where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "retentionInterval": {
              "description": "Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. The time duration should be between 1 hour and 26 hours (inclusive) and should be specified in ISO 8601 format. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "scriptContent": {
              "description": "Script body. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "storageAccount": {
              "description": "A storage_account block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "required": [
                "keySecretRef"
              ],
              "properties": {
                "keySecretRef": {
                  "description": "Specifies the storage account access key.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "name": {
                  "description": "Specifies the storage account name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "supportingScriptUris": {
              "description": "Supporting files for the external script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Resource Deployment Script.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Maximum allowed script execution time specified in ISO 8601 format. Needs to be greater than 0 and smaller than 1 day. Defaults to P1D. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "version": {
              "description": "Specifies the version of the Azure CLI that should be used in the format X.Y.Z (e.g. 2.30.0). A canonical list of versions is available from the Microsoft Container Registry API. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.retentionInterval) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.retentionInterval))",
          "message": "spec.forProvider.retentionInterval is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.version) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.version))",
          "message": "spec.forProvider.version is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ResourceDeploymentScriptAzureCliStatus defines the observed state of ResourceDeploymentScriptAzureCli.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "cleanupPreference": {
              "description": "Specifies the cleanup preference when the script execution gets in a terminal state. Possible values are Always, OnExpiration, OnSuccess. Defaults to Always. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "commandLine": {
              "description": "Command line arguments to pass to the script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "container": {
              "description": "A container block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "containerGroupName": {
                  "description": "Container group name, if not specified then the name will get auto-generated. For more information, please refer to the Container Configuration documentation.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "environmentVariable": {
              "description": "An environment_variable block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the name of the environment variable.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Specifies the value of the environment variable.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "forceUpdateTag": {
              "description": "Gets or sets how the deployment script should be forced to execute even if the script resource has not changed. Can be current time stamp or a GUID. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Resource Deployment Script.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "Specifies the list of user-assigned managed identity IDs associated with the resource. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "type": {
                  "description": "Type of the managed identity. The only possible value is UserAssigned. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the Azure Region where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "name": {
              "description": "Specifies the name which should be used for this Resource Deployment Script. The name length must be from 1 to 260 characters. The name can only contain alphanumeric, underscore, parentheses, hyphen and period, and it cannot end with a period. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "outputs": {
              "description": "List of script outputs.",
              "type": "string"
            },
            "primaryScriptUri": {
              "description": "Uri for the script. This is the entry point for the external script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "Specifies the name of the Resource Group where the Resource Deployment Script should exist. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "retentionInterval": {
              "description": "Interval for which the service retains the script resource after it reaches a terminal state. Resource will be deleted when this duration expires. The time duration should be between 1 hour and 26 hours (inclusive) and should be specified in ISO 8601 format. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "scriptContent": {
              "description": "Script body. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "storageAccount": {
              "description": "A storage_account block as defined below. Changing this forces a new Resource Deployment Script to be created.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Specifies the storage account name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "supportingScriptUris": {
              "description": "Supporting files for the external script. Changing this forces a new Resource Deployment Script to be created.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Resource Deployment Script.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Maximum allowed script execution time specified in ISO 8601 format. Needs to be greater than 0 and smaller than 1 day. Defaults to P1D. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            },
            "version": {
              "description": "Specifies the version of the Azure CLI that should be used in the format X.Y.Z (e.g. 2.30.0). A canonical list of versions is available from the Microsoft Container Registry API. Changing this forces a new Resource Deployment Script to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
