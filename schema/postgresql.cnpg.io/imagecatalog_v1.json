{
  "description": "ImageCatalog is the Schema for the imagecatalogs API",
  "type": "object",
  "required": [
    "metadata",
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Specification of the desired behavior of the ImageCatalog.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "object",
      "required": [
        "images"
      ],
      "properties": {
        "images": {
          "description": "List of CatalogImages available in the catalog",
          "type": "array",
          "maxItems": 8,
          "minItems": 1,
          "items": {
            "description": "CatalogImage defines the image and major version",
            "type": "object",
            "required": [
              "image",
              "major"
            ],
            "properties": {
              "image": {
                "description": "The image reference",
                "type": "string"
              },
              "major": {
                "description": "The PostgreSQL major version of the image. Must be unique within the catalog.",
                "type": "integer",
                "minimum": 10
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(e, self.filter(f, f.major==e.major).size() == 1)",
              "message": "Images must have unique major versions"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
