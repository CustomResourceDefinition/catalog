{
  "description": "HelmChart is the Schema for the helm chart",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "HelmChartSpec defines the spec of HelmChart",
      "type": "object",
      "required": [
        "chart",
        "repo",
        "targetNamespace"
      ],
      "properties": {
        "atomic": {
          "description": "Atomic, for install case, if true, will uninstall failed release.",
          "type": "boolean"
        },
        "chart": {
          "description": "Chart is the name of a Helm Chart in the Repository.",
          "type": "string"
        },
        "chartPullSecret": {
          "description": "ChartPullSecret is the name of the secret that contains the auth information for the chart repository.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "createNamespace": {
          "description": "CreateNamespace create namespace when install helm release",
          "type": "boolean",
          "default": true
        },
        "disableHooks": {
          "description": "DisableHooks disables hook processing if set to true.",
          "type": "boolean"
        },
        "force": {
          "description": "Force will, if set to `true`, ignore certain warnings and perform the upgrade anyway.\nThis should be used with caution.",
          "type": "boolean"
        },
        "replace": {
          "description": "Replace will re-use the given name, only if that name is a deleted release that remains in the history.\nThis is unsafe in production.",
          "type": "boolean"
        },
        "replaceCRDs": {
          "description": "ReplaceCRDs replace all crds in chart and sub charts before upgrade and install, not working when SkipCRDs true",
          "type": "boolean"
        },
        "repo": {
          "description": "a Helm Repository to be used.\nOCI-based registries are also supported.\nFor example, https://charts.bitnami.com/bitnami or oci://localhost:5000/helm-charts",
          "type": "string",
          "pattern": "^(http|https|oci)?://(?:[a-zA-Z]|[0-9]|[$-_@.\u0026+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+$"
        },
        "skipCRDs": {
          "description": "SkipCRDs skips installing CRDs when install flag is enabled during upgrade",
          "type": "boolean"
        },
        "targetNamespace": {
          "description": "TargetNamespace specifies the namespace to install this HelmChart",
          "type": "string"
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds is the timeout of the chart to be install/upgrade/rollback/uninstall",
          "type": "integer",
          "format": "int32",
          "default": 300
        },
        "upgradeAtomic": {
          "description": "UpgradeAtomic, for upgrade case, if true, will roll back failed release.",
          "type": "boolean"
        },
        "version": {
          "description": "ChartVersion is the version of the chart to be deployed.\nIt will be defaulted with current latest version if empty.",
          "type": "string"
        },
        "wait": {
          "description": "Wait determines whether the wait operation should be performed after helm install, upgrade or uninstall is requested.",
          "type": "boolean"
        },
        "waitForJob": {
          "description": "WaitForJobs determines whether the wait operation for the Jobs should be performed after the upgrade is requested.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "HelmChartStatus defines the observed state of HelmChart",
      "type": "object",
      "properties": {
        "phase": {
          "description": "Phase denotes the phase of HelmChart",
          "type": "string",
          "enum": [
            "Found",
            "NotFound"
          ]
        },
        "reason": {
          "description": "Reason indicates the reason of HelmChartPhase",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
