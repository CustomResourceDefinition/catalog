{
  "description": "ControlCenterCluster is the Schema for the controlcenterclusters API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ControlCenterClusterSpec defines the desired state of ControlCenterCluster",
      "type": "object",
      "required": [
        "blueprintRef"
      ],
      "properties": {
        "blueprintRef": {
          "description": "blueprintRef defines which blueprint the Control Center cluster should use.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the referenced CR",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "namespace": {
              "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            }
          },
          "additionalProperties": false
        },
        "credentialStoreConfigRef": {
          "description": "credentialStoreConfigRef references the CredentialStoreConfig CR that manages credentials across CP",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the referenced CR",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "namespace": {
              "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            }
          },
          "additionalProperties": false
        },
        "dataVolumeCapacity": {
          "description": "dataVolumeCapacity will resize the existing volume. If value is less or greater than the value the configured by the class (platform administrator) then the request will be rejected. The webhook will be in place to let user know if the request will be denied",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "dependencies": {
          "description": "dependencies describes the services which Control Center has a client dependency on",
          "type": "object",
          "properties": {
            "connectClusterRefs": {
              "description": "connectClusterRefs is the list of dependency for Connect cluster.",
              "type": "array",
              "items": {
                "description": "ObjectRef specifies a reference another Confluent Platform CR",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the referenced CR",
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "namespace": {
                    "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }
                },
                "additionalProperties": false
              }
            },
            "kafkaClusterRef": {
              "description": "kafkaClusterRef specifies the dependency configuration for Kafka.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the referenced CR",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "namespace": {
                  "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                }
              },
              "additionalProperties": false
            },
            "ksqlDBClusterRefs": {
              "description": "ksqlDBClusterRefs is the list of dependency for KsqlDB cluster.",
              "type": "array",
              "items": {
                "description": "ObjectRef specifies a reference another Confluent Platform CR",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the referenced CR",
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "namespace": {
                    "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }
                },
                "additionalProperties": false
              }
            },
            "mdsClusterRef": {
              "description": "mdsClusterRef is the cluster which Kafka will use for metadata. This will be the primary MDS.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the referenced CR",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "namespace": {
                  "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                }
              },
              "additionalProperties": false
            },
            "schemaRegistryClusterRefs": {
              "description": "schemaRegistryClusterRefs is the list of dependency for schemaRegistry cluster.",
              "type": "array",
              "items": {
                "description": "ObjectRef specifies a reference another Confluent Platform CR",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the referenced CR",
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "namespace": {
                    "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "externalAccess": {
          "description": "externalAccess specifies the external access configurations for this cluster.",
          "type": "object",
          "properties": {
            "dnsConfig": {
              "description": "dnsConfig specifies the DNS configurations for HTTP external access.",
              "type": "object",
              "properties": {
                "subdomain": {
                  "description": "subdomain specifies the subdomain for the cluster FQDN.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "tlsConfig": {
              "description": "tlsConfig specifies the tls configuration for HTTP external access.",
              "type": "object",
              "required": [
                "certificateStoreConfigRef"
              ],
              "properties": {
                "certificateStoreConfigRef": {
                  "description": "certificateStoreConfigRef specifies the reference to CertificateStoreConfig.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name is the name of the referenced CR",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "namespace": {
                      "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "k8sClusterRef": {
          "description": "k8sClusterRef references to kubernetes clusters where connect going to be deployed. Needs to be specified when cluster is provisioned by cfk.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the referenced CR",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "namespace": {
              "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            }
          },
          "additionalProperties": false
        },
        "monitoringKafkaClusterList": {
          "description": "monitoringKafkaClusterList is the list of Kafka cluster this Control Center is monitoring.",
          "type": "array",
          "items": {
            "description": "ObjectRef specifies a reference another Confluent Platform CR",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name is the name of the referenced CR",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
              },
              "namespace": {
                "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                "type": "string",
                "maxLength": 255,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
              }
            },
            "additionalProperties": false
          }
        },
        "replicas": {
          "description": "replicas is the number of replicas for the cluster. If configured, the value will be checked against the ControlCenterClusterClass configuration max replicas. If not, it will use the default in the ControlCenterClusterClass.",
          "type": "integer",
          "format": "int32"
        },
        "targetCluster": {
          "description": "targetCluster defines where the Control Center cluster should be deployed.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the referenced CR",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "namespace": {
              "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ControlCenterClusterStatus defines the observed state of ControlCenterCluster",
      "type": "object",
      "properties": {
        "classGeneration": {
          "description": "classGeneration is the generation version of the cluster class referenced from the deployment.",
          "type": "integer",
          "format": "int64"
        },
        "clusterClass": {
          "description": "clusterClass is the namespaced name of the ClusterClass that this deployment object is referencing to.",
          "type": "string"
        },
        "clusterState": {
          "description": "clusterState is the state of the cluster.",
          "type": "string",
          "default": "Unknown"
        },
        "conditions": {
          "description": "conditions specify the latest available observations of the current state.",
          "type": "array",
          "items": {
            "description": "Condition represents the latest available observations of the current state.",
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "lastUpdateTime": {
                "description": "lastUpdateTime shows the last time the condition was evaluated.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message shows a human-readable message with details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "reason shows the reason for the last transition of the condition.",
                "type": "string"
              },
              "status": {
                "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                "type": "string"
              },
              "type": {
                "description": "type shows the condition type.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "confluentPlatformBlueprint": {
          "description": "confluentPlatformBlueprint is the namespaced name of the confluentPlatformBlueprint referenced from the deployment.",
          "type": "string"
        },
        "confluentPlatformBlueprintGeneration": {
          "description": "confluentPlatformBlueprintGeneration is the generation version of the confluentPlatformBlueprint referenced from the deployment.",
          "type": "integer",
          "format": "int64"
        },
        "controlCenterId.omitempty": {
          "description": "controlCenterId describes the ID of controlCenter cluster.",
          "type": "integer",
          "format": "int32"
        },
        "currentReplicas": {
          "description": "currentReplicas is the number of currently running replicas.",
          "type": "integer",
          "format": "int32"
        },
        "dataVolumeSize": {
          "description": "dataVolumeSize describes the volume size in use by the application.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "externalAccess": {
          "description": "externalAccess is the external access status of this cluster.",
          "type": "object",
          "properties": {
            "advertisedExternalEndpoint": {
              "description": "advertisedExternalEndpoint is the advertised endpoint for the http server of this cluster.",
              "type": "object",
              "properties": {
                "dnsEndpoint": {
                  "description": "dnsEndpoint is the endpoint with FQDN and port number, with format `\u003cFQDN\u003e:\u003cport\u003e`.",
                  "type": "string"
                },
                "ipAddress": {
                  "description": "ipAddress is the assigned ip address for the FQDN.",
                  "type": "string"
                },
                "url": {
                  "description": "url is the URL endpoint. The format is `http|s://\u003cFQDN\u003e:\u003cport\u003e`.",
                  "type": "string",
                  "minLength": 1,
                  "pattern": "^https?://.*"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "type is the external access type.",
              "type": "string",
              "enum": [
                "loadBalancer",
                "ingress",
                "nodePort",
                "route"
              ]
            }
          },
          "additionalProperties": false
        },
        "internalSecretName": {
          "description": "internalSecretName is the name of the CPC internal secret created for this cluster",
          "type": "string"
        },
        "internalTopicReplicationFactor": {
          "description": "internalTopicReplicationFactor is the replication factor of control center internal topics.",
          "type": "integer",
          "format": "int32"
        },
        "kafkaClusterRef": {
          "description": "kafkaClusterRef references to Kafka cluster",
          "type": "string"
        },
        "kubernetesCluster": {
          "description": "kubernetesCluster is the namespaced name of the  kubernetesCluster CR that is the deployment is provisioned to.",
          "type": "string"
        },
        "maxReplicas": {
          "description": "maxReplicas is the max number of replicas.",
          "type": "integer",
          "format": "int32"
        },
        "mdsClusterRef": {
          "description": "mdsClusterRef references mds cluster",
          "type": "string"
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this cluster.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "phase describes whether the internal state is generated. Values are Bound, Pending and Unknown.",
          "type": "string",
          "default": "Unknown"
        },
        "provisionerType": {
          "description": "provisionerType is the type of underlying resource for the cluster",
          "type": "string",
          "enum": [
            "cfk",
            "ccloud"
          ]
        },
        "ready": {
          "description": "ready is the number of ready replicas based on the desired replicas. The value is in the following format: `readyReplicas/replicas`.",
          "type": "string"
        },
        "readyReplicas": {
          "description": "readyReplicas is the number of currently ready replicas.",
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "description": "replicas is the number of replicas.",
          "type": "integer",
          "format": "int32"
        },
        "targetCluster": {
          "description": "targetCluster is the namespaced name of the cluster that is created from the deployment.",
          "type": "string"
        },
        "tls": {
          "description": "tls shows whether TLS is configured for this cluster.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "enabled specifies whether tls is enabled.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
