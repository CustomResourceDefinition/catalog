{
  "description": "PhysicalBackup is the Schema for the physicalbackups API. It is used to define physical backup jobs and its storage.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PhysicalBackupSpec defines the desired state of PhysicalBackup.",
      "type": "object",
      "required": [
        "mariaDbRef",
        "storage"
      ],
      "properties": {
        "args": {
          "description": "Args to be used in the Container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "backoffLimit": {
          "description": "BackoffLimit defines the maximum number of attempts to successfully take a PhysicalBackup.",
          "type": "integer",
          "format": "int32"
        },
        "compression": {
          "description": "Compression algorithm to be used in the Backup.",
          "type": "string",
          "enum": [
            "none",
            "bzip2",
            "gzip"
          ]
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#localobjectreference-v1-core.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "default": ""
              }
            },
            "additionalProperties": false
          }
        },
        "inheritMetadata": {
          "description": "InheritMetadata defines the metadata to be inherited by children resources.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Annotations to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "mariaDbRef": {
          "description": "MariaDBRef is a reference to a MariaDB object.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "Kind of the referent.",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "waitForIt": {
              "description": "WaitForIt indicates whether the controller using this reference should wait for MariaDB to be ready.",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "maxRetention": {
          "description": "MaxRetention defines the retention policy for backups. Old backups will be cleaned up by the Backup Job.\nIt defaults to 30 days.",
          "type": "string"
        },
        "podAffinity": {
          "description": "PodAffinity indicates whether the Jobs should run in the same Node as the MariaDB Pods to be able to attach the PVC.\nIt defaults to true.",
          "type": "boolean"
        },
        "podMetadata": {
          "description": "PodMetadata defines extra metadata for the Pod.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Annotations to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "podSecurityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings.",
          "type": "object",
          "properties": {
            "appArmorProfile": {
              "description": "AppArmorProfile defines a pod or container's AppArmor settings.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "fsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "fsGroupChangePolicy": {
              "description": "PodFSGroupChangePolicy holds policies that will be used for applying fsGroup to a volume\nwhen volume is mounted.",
              "type": "string"
            },
            "runAsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "type": "integer",
              "format": "int64"
            },
            "seLinuxOptions": {
              "description": "SELinuxOptions are the labels to be applied to the container",
              "type": "object",
              "properties": {
                "level": {
                  "description": "Level is SELinux level label that applies to the container.",
                  "type": "string"
                },
                "role": {
                  "description": "Role is a SELinux role label that applies to the container.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is a SELinux type label that applies to the container.",
                  "type": "string"
                },
                "user": {
                  "description": "User is a SELinux user label that applies to the container.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "seccompProfile": {
              "description": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "supplementalGroups": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "x-kubernetes-list-type": "atomic"
            }
          },
          "additionalProperties": false
        },
        "priorityClassName": {
          "description": "PriorityClassName to be used in the Pod.",
          "type": "string"
        },
        "resources": {
          "description": "Resources describes the compute resource requirements.",
          "type": "object",
          "properties": {
            "limits": {
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              }
            },
            "requests": {
              "description": "ResourceList is a set of (resource name, quantity) pairs.",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              }
            }
          },
          "additionalProperties": false
        },
        "restartPolicy": {
          "description": "RestartPolicy to be added to the PhysicalBackup Pod.",
          "type": "string",
          "default": "OnFailure",
          "enum": [
            "Always",
            "OnFailure",
            "Never"
          ]
        },
        "schedule": {
          "description": "Schedule defines when the PhysicalBackup will be taken.",
          "type": "object",
          "required": [
            "cron"
          ],
          "properties": {
            "cron": {
              "description": "Cron is a cron expression that defines the schedule.",
              "type": "string"
            },
            "immediate": {
              "description": "Immediate indicates whether the first backup should be taken immediately after creating the PhysicalBackup.",
              "type": "boolean"
            },
            "suspend": {
              "description": "Suspend defines whether the schedule is active or not.",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false
        },
        "securityContext": {
          "description": "SecurityContext holds security configuration that will be applied to a container.",
          "type": "object",
          "properties": {
            "allowPrivilegeEscalation": {
              "type": "boolean"
            },
            "capabilities": {
              "description": "Adds and removes POSIX capabilities from running containers.",
              "type": "object",
              "properties": {
                "add": {
                  "description": "Added capabilities",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "drop": {
                  "description": "Removed capabilities",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "privileged": {
              "type": "boolean"
            },
            "readOnlyRootFilesystem": {
              "type": "boolean"
            },
            "runAsGroup": {
              "type": "integer",
              "format": "int64"
            },
            "runAsNonRoot": {
              "type": "boolean"
            },
            "runAsUser": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to be used by the Pods.",
          "type": "string"
        },
        "stagingStorage": {
          "description": "StagingStorage defines the temporary storage used to keep external backups (i.e. S3) while they are being processed.\nIt defaults to an emptyDir volume, meaning that the backups will be temporarily stored in the node where the PhysicalBackup Job is scheduled.\nThe staging area gets cleaned up after each backup is completed, consider this for sizing it appropriately.",
          "type": "object",
          "properties": {
            "persistentVolumeClaim": {
              "description": "PersistentVolumeClaim is a Kubernetes PVC specification.",
              "type": "object",
              "properties": {
                "accessModes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "resources": {
                  "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "selector": {
                  "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "type": "array",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "type": "object",
                        "required": [
                          "key",
                          "operator"
                        ],
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "matchLabels": {
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "storageClassName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "volume": {
              "description": "Volume is a Kubernetes volume specification.",
              "type": "object",
              "properties": {
                "csi": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#csivolumesource-v1-core.",
                  "type": "object",
                  "required": [
                    "driver"
                  ],
                  "properties": {
                    "driver": {
                      "type": "string"
                    },
                    "fsType": {
                      "type": "string"
                    },
                    "nodePublishSecretRef": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#localobjectreference-v1-core.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false
                    },
                    "readOnly": {
                      "type": "boolean"
                    },
                    "volumeAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "emptyDir": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#emptydirvolumesource-v1-core.",
                  "type": "object",
                  "properties": {
                    "medium": {
                      "description": "StorageMedium defines ways that storage can be allocated to a volume.",
                      "type": "string"
                    },
                    "sizeLimit": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "additionalProperties": false
                },
                "hostPath": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#hostpathvolumesource-v1-core",
                  "type": "object",
                  "required": [
                    "path"
                  ],
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "nfs": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#nfsvolumesource-v1-core.",
                  "type": "object",
                  "required": [
                    "path",
                    "server"
                  ],
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "readOnly": {
                      "type": "boolean"
                    },
                    "server": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "persistentVolumeClaim": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#persistentvolumeclaimvolumesource-v1-core.",
                  "type": "object",
                  "required": [
                    "claimName"
                  ],
                  "properties": {
                    "claimName": {
                      "type": "string"
                    },
                    "readOnly": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "storage": {
          "description": "Storage defines the final storage for backups.",
          "type": "object",
          "properties": {
            "persistentVolumeClaim": {
              "description": "PersistentVolumeClaim is a Kubernetes PVC specification.",
              "type": "object",
              "properties": {
                "accessModes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "resources": {
                  "description": "VolumeResourceRequirements describes the storage resource requirements for a volume.",
                  "type": "object",
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "selector": {
                  "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "type": "array",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "type": "object",
                        "required": [
                          "key",
                          "operator"
                        ],
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "matchLabels": {
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "storageClassName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "s3": {
              "description": "S3 defines the configuration to store backups in a S3 compatible storage.",
              "type": "object",
              "required": [
                "bucket",
                "endpoint"
              ],
              "properties": {
                "accessKeyIdSecretKeyRef": {
                  "description": "AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 access key id.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "bucket": {
                  "description": "Bucket is the name Name of the bucket to store backups.",
                  "type": "string"
                },
                "endpoint": {
                  "description": "Endpoint is the S3 API endpoint without scheme.",
                  "type": "string"
                },
                "prefix": {
                  "description": "Prefix indicates a folder/subfolder in the bucket. For example: mariadb/ or mariadb/backups. A trailing slash '/' is added if not provided.",
                  "type": "string"
                },
                "region": {
                  "description": "Region is the S3 region name to use.",
                  "type": "string"
                },
                "secretAccessKeySecretKeyRef": {
                  "description": "AccessKeyIdSecretKeyRef is a reference to a Secret key containing the S3 secret key.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "sessionTokenSecretKeyRef": {
                  "description": "SessionTokenSecretKeyRef is a reference to a Secret key containing the S3 session token.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "tls": {
                  "description": "TLS provides the configuration required to establish TLS connections with S3.",
                  "type": "object",
                  "properties": {
                    "caSecretKeyRef": {
                      "description": "CASecretKeyRef is a reference to a Secret key containing a CA bundle in PEM format used to establish TLS connections with S3.\nBy default, the system trust chain will be used, but you can use this field to add more CAs to the bundle.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "enabled": {
                      "description": "Enabled is a flag to enable TLS.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "volume": {
              "description": "Volume is a Kubernetes volume specification.",
              "type": "object",
              "properties": {
                "csi": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#csivolumesource-v1-core.",
                  "type": "object",
                  "required": [
                    "driver"
                  ],
                  "properties": {
                    "driver": {
                      "type": "string"
                    },
                    "fsType": {
                      "type": "string"
                    },
                    "nodePublishSecretRef": {
                      "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#localobjectreference-v1-core.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false
                    },
                    "readOnly": {
                      "type": "boolean"
                    },
                    "volumeAttributes": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "emptyDir": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#emptydirvolumesource-v1-core.",
                  "type": "object",
                  "properties": {
                    "medium": {
                      "description": "StorageMedium defines ways that storage can be allocated to a volume.",
                      "type": "string"
                    },
                    "sizeLimit": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "additionalProperties": false
                },
                "hostPath": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#hostpathvolumesource-v1-core",
                  "type": "object",
                  "required": [
                    "path"
                  ],
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "nfs": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#nfsvolumesource-v1-core.",
                  "type": "object",
                  "required": [
                    "path",
                    "server"
                  ],
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "readOnly": {
                      "type": "boolean"
                    },
                    "server": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "persistentVolumeClaim": {
                  "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#persistentvolumeclaimvolumesource-v1-core.",
                  "type": "object",
                  "required": [
                    "claimName"
                  ],
                  "properties": {
                    "claimName": {
                      "type": "string"
                    },
                    "readOnly": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "volumeSnapshot": {
              "description": "VolumeSnapshot is a Kubernetes VolumeSnapshot specification.",
              "type": "object",
              "required": [
                "volumeSnapshotClassName"
              ],
              "properties": {
                "metadata": {
                  "description": "Metadata is extra metadata to the added to the VolumeSnapshot objects.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "volumeSnapshotClassName": {
                  "description": "VolumeSnapshotClassName is the VolumeSnapshot class to be used to take snapshots.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "successfulJobsHistoryLimit": {
          "description": "SuccessfulJobsHistoryLimit defines the maximum number of successful Jobs to be displayed. It defaults to 5.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "timeout": {
          "description": "Timeout defines the maximum duration of a PhysicalBackup job or snapshot.\nIf this duration is exceeded, the job or snapshot is considered expired and is deleted by the operator.\nA new job or snapshot will then be created according to the schedule.\nIt defaults to 1 hour.",
          "type": "string"
        },
        "tolerations": {
          "description": "Tolerations to be used in the Pod.",
          "type": "array",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
            "type": "object",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "type": "integer",
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PhysicalBackupStatus defines the observed state of PhysicalBackup.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions for the PhysicalBackup object.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "lastScheduleCheckTime": {
          "description": "LastScheduleCheckTime is the last time that the schedule was checked.",
          "type": "string",
          "format": "date-time"
        },
        "lastScheduleTime": {
          "description": "LastScheduleTime is the last time that a backup was scheduled.",
          "type": "string",
          "format": "date-time"
        },
        "nextScheduleTime": {
          "description": "NextScheduleTime is the next time that a backup will be scheduled.",
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    }
  }
}
