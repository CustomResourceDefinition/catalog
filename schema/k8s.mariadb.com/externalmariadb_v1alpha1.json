{
  "description": "ExternalMariaDB is the Schema for the external MariaDBs API. It is used to define external MariaDB server.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ExternalMariaDBSpec defines the desired state of an External MariaDB",
      "type": "object",
      "required": [
        "host",
        "username"
      ],
      "properties": {
        "connection": {
          "description": "Connection defines a template to configure a Connection for the external MariaDB.",
          "type": "object",
          "properties": {
            "healthCheck": {
              "description": "HealthCheck to be used in the Connection.",
              "type": "object",
              "properties": {
                "interval": {
                  "description": "Interval used to perform health checks.",
                  "type": "string"
                },
                "retryInterval": {
                  "description": "RetryInterval is the interval used to perform health check retries.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "params": {
              "description": "Params to be used in the Connection.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "port": {
              "description": "Port to connect to. If not provided, it defaults to the MariaDB port or to the first MaxScale listener.",
              "type": "integer",
              "format": "int32"
            },
            "secretName": {
              "description": "SecretName to be used in the Connection.",
              "type": "string"
            },
            "secretTemplate": {
              "description": "SecretTemplate to be used in the Connection.",
              "type": "object",
              "properties": {
                "databaseKey": {
                  "description": "DatabaseKey to be used in the Secret.",
                  "type": "string"
                },
                "format": {
                  "description": "Format to be used in the Secret.",
                  "type": "string"
                },
                "hostKey": {
                  "description": "HostKey to be used in the Secret.",
                  "type": "string"
                },
                "key": {
                  "description": "Key to be used in the Secret.",
                  "type": "string"
                },
                "metadata": {
                  "description": "Metadata to be added to the Secret object.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "Annotations to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "Labels to be added to children resources.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "passwordKey": {
                  "description": "PasswordKey to be used in the Secret.",
                  "type": "string"
                },
                "portKey": {
                  "description": "PortKey to be used in the Secret.",
                  "type": "string"
                },
                "usernameKey": {
                  "description": "UsernameKey to be used in the Secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "serviceName": {
              "description": "ServiceName to be used in the Connection.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "host": {
          "description": "Hostname of the external MariaDB.",
          "type": "string"
        },
        "image": {
          "description": "Image name to be used to perform operations on the external MariaDB, for example, for taking backups.\nThe supported format is `\u003cimage\u003e:\u003ctag\u003e`. Only MariaDB official images are supported.\nIf not provided, the MariaDB image version be inferred by the operator in runtime. The default MariaDB image will be used in this case,",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "ImagePullPolicy is the image pull policy. One of `Always`, `Never` or `IfNotPresent`. If not defined, it defaults to `IfNotPresent`.",
          "type": "string",
          "enum": [
            "Always",
            "Never",
            "IfNotPresent"
          ]
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is the list of pull Secrets to be used to pull the image.",
          "type": "array",
          "items": {
            "description": "Refer to the Kubernetes docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.34/#localobjectreference-v1-core.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "default": ""
              }
            },
            "additionalProperties": false
          }
        },
        "inheritMetadata": {
          "description": "InheritMetadata defines the metadata to be inherited by children resources.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Annotations to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "Labels to be added to children resources.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "passwordSecretKeyRef": {
          "description": "PasswordSecretKeyRef is a reference to the password to connect to the external MariaDB.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "port": {
          "description": "Port of the external MariaDB.",
          "type": "integer",
          "format": "int32",
          "default": 3306
        },
        "tls": {
          "description": "TLS defines the PKI to be used with the external MariaDB.",
          "type": "object",
          "properties": {
            "clientCASecretRef": {
              "description": "ClientCASecretRef is a reference to a Secret containing the client certificate authority keypair. It is used to establish trust and issue client certificates.\nOne of:\n- Secret containing both the 'ca.crt' and 'ca.key' keys. This allows you to bring your own CA to Kubernetes to issue certificates.\n- Secret containing only the 'ca.crt' in order to establish trust. In this case, either clientCertSecretRef or clientCertIssuerRef fields must be provided.\nIf not provided, a self-signed CA will be provisioned to issue the client certificate.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": ""
                }
              },
              "additionalProperties": false
            },
            "clientCertIssuerRef": {
              "description": "ClientCertIssuerRef is a reference to a cert-manager issuer object used to issue the client certificate. cert-manager must be installed previously in the cluster.\nIt is mutually exclusive with clientCertSecretRef.\nBy default, the Secret field 'ca.crt' provisioned by cert-manager will be added to the trust chain. A custom trust bundle may be specified via clientCASecretRef.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "group": {
                  "description": "Group of the resource being referred to.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the resource being referred to.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the resource being referred to.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "clientCertSecretRef": {
              "description": "ClientCertSecretRef is a reference to a TLS Secret containing the client certificate.\nIt is mutually exclusive with clientCertIssuerRef.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": ""
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "Enabled indicates whether TLS is enabled, determining if certificates should be issued and mounted to the MariaDB instance.\nIt is enabled by default.",
              "type": "boolean"
            },
            "galeraSSTEnabled": {
              "description": "GaleraSSTEnabled determines whether Galera SST connections should use TLS.\nIt disabled by default.",
              "type": "boolean"
            },
            "required": {
              "description": "Required specifies whether TLS must be enforced for all connections.\nUser TLS requirements take precedence over this.\nIt disabled by default.",
              "type": "boolean"
            },
            "serverCASecretRef": {
              "description": "ServerCASecretRef is a reference to a Secret containing the server certificate authority keypair. It is used to establish trust and issue server certificates.\nOne of:\n- Secret containing both the 'ca.crt' and 'ca.key' keys. This allows you to bring your own CA to Kubernetes to issue certificates.\n- Secret containing only the 'ca.crt' in order to establish trust. In this case, either serverCertSecretRef or serverCertIssuerRef must be provided.\nIf not provided, a self-signed CA will be provisioned to issue the server certificate.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": ""
                }
              },
              "additionalProperties": false
            },
            "serverCertIssuerRef": {
              "description": "ServerCertIssuerRef is a reference to a cert-manager issuer object used to issue the server certificate. cert-manager must be installed previously in the cluster.\nIt is mutually exclusive with serverCertSecretRef.\nBy default, the Secret field 'ca.crt' provisioned by cert-manager will be added to the trust chain. A custom trust bundle may be specified via serverCASecretRef.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "group": {
                  "description": "Group of the resource being referred to.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the resource being referred to.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the resource being referred to.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "serverCertSecretRef": {
              "description": "ServerCertSecretRef is a reference to a TLS Secret containing the server certificate.\nIt is mutually exclusive with serverCertIssuerRef.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "default": ""
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "username": {
          "description": "Username is the username to connect to the external MariaDB.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ExternalMariaDBStatus defines the observed state of MariaDB",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions for the ExternalMariadb object.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "isGaleraEnabled": {
          "description": "IsGaleraEnabled indicates that the external MariaDb has Galera enabled.",
          "type": "boolean"
        },
        "version": {
          "description": "Version of the external MariaDB server.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
