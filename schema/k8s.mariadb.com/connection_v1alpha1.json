{
  "description": "Connection is the Schema for the connections API. It is used to configure connection strings for the applications connecting to MariaDB.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ConnectionSpec defines the desired state of Connection",
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "database": {
          "description": "Database to use when configuring the Connection.",
          "type": "string"
        },
        "healthCheck": {
          "description": "HealthCheck to be used in the Connection.",
          "type": "object",
          "properties": {
            "interval": {
              "description": "Interval used to perform health checks.",
              "type": "string"
            },
            "retryInterval": {
              "description": "RetryInterval is the interval used to perform health check retries.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "host": {
          "description": "Host to connect to. If not provided, it defaults to the MariaDB host or to the MaxScale host.",
          "type": "string"
        },
        "mariaDbRef": {
          "description": "MariaDBRef is a reference to the MariaDB to connect to. Either MariaDBRef or MaxScaleRef must be provided.",
          "type": "object",
          "properties": {
            "kind": {
              "description": "Kind of the referent.",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            },
            "waitForIt": {
              "description": "WaitForIt indicates whether the controller using this reference should wait for MariaDB to be ready.",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "maxScaleRef": {
          "description": "MaxScaleRef is a reference to the MaxScale to connect to. Either MariaDBRef or MaxScaleRef must be provided.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "params": {
          "description": "Params to be used in the Connection.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "passwordSecretKeyRef": {
          "description": "PasswordSecretKeyRef is a reference to the password to use for configuring the Connection.\nEither passwordSecretKeyRef or tlsClientCertSecretRef must be provided as client credentials.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the password.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "port": {
          "description": "Port to connect to. If not provided, it defaults to the MariaDB port or to the first MaxScale listener.",
          "type": "integer",
          "format": "int32"
        },
        "secretName": {
          "description": "SecretName to be used in the Connection.",
          "type": "string"
        },
        "secretTemplate": {
          "description": "SecretTemplate to be used in the Connection.",
          "type": "object",
          "properties": {
            "databaseKey": {
              "description": "DatabaseKey to be used in the Secret.",
              "type": "string"
            },
            "format": {
              "description": "Format to be used in the Secret.",
              "type": "string"
            },
            "hostKey": {
              "description": "HostKey to be used in the Secret.",
              "type": "string"
            },
            "key": {
              "description": "Key to be used in the Secret.",
              "type": "string"
            },
            "metadata": {
              "description": "Metadata to be added to the Secret object.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels to be added to children resources.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "passwordKey": {
              "description": "PasswordKey to be used in the Secret.",
              "type": "string"
            },
            "portKey": {
              "description": "PortKey to be used in the Secret.",
              "type": "string"
            },
            "usernameKey": {
              "description": "UsernameKey to be used in the Secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "serviceName": {
          "description": "ServiceName to be used in the Connection.",
          "type": "string"
        },
        "tlsClientCertSecretRef": {
          "description": "TLSClientCertSecretRef is a reference to a Kubernetes TLS Secret used as authentication when checking the connection health.\nEither passwordSecretKeyRef or tlsClientCertSecretRef must be provided as client credentials.\nIf not provided, the client certificate provided by the referred MariaDB is used if TLS is enabled.\nIf the referred Secret is labeled with \"k8s.mariadb.com/watch\", updates may be performed to the Secret in order to update the client certificate.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false
        },
        "username": {
          "description": "Username to use for configuring the Connection.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ConnectionStatus defines the observed state of Connection",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions for the Connection object.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
