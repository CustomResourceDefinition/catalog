{
  "description": "ServiceImport describes a service imported from clusters in a ClusterSet.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "spec defines the behavior of a ServiceImport.",
      "type": "object",
      "required": [
        "ports",
        "type"
      ],
      "properties": {
        "ips": {
          "description": "ip will be used as the VIP for this service when type is ClusterSetIP.",
          "type": "array",
          "maxItems": 1,
          "items": {
            "type": "string"
          }
        },
        "ports": {
          "type": "array",
          "items": {
            "description": "ServicePort represents the port on which the service is exposed",
            "type": "object",
            "required": [
              "port"
            ],
            "properties": {
              "appProtocol": {
                "description": "The application protocol for this port.\nThis field follows standard Kubernetes label syntax.\nUn-prefixed names are reserved for IANA standard service names (as per\nRFC-6335 and http://www.iana.org/assignments/service-names).\nNon-standard protocols should use prefixed names such as\nmycompany.com/my-custom-protocol.\nField can be enabled with ServiceAppProtocol feature gate.",
                "type": "string"
              },
              "name": {
                "description": "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. When considering\nthe endpoints for a Service, this must match the 'name' field in the\nEndpointPort.\nOptional if only one ServicePort is defined on this service.",
                "type": "string"
              },
              "port": {
                "description": "The port that will be exposed by this service.",
                "type": "integer",
                "format": "int32"
              },
              "protocol": {
                "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\".\nDefault is TCP.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-type": "atomic"
        },
        "sessionAffinity": {
          "description": "Supports \"ClientIP\" and \"None\". Used to maintain session affinity.\nEnable client IP based session affinity.\nMust be ClientIP or None.\nDefaults to None.\nIgnored when type is Headless\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
          "type": "string"
        },
        "sessionAffinityConfig": {
          "description": "sessionAffinityConfig contains session affinity configuration.",
          "type": "object",
          "properties": {
            "clientIP": {
              "description": "clientIP contains the configurations of Client IP based session affinity.",
              "type": "object",
              "properties": {
                "timeoutSeconds": {
                  "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours).",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "type": {
          "description": "type defines the type of this service.\nMust be ClusterSetIP or Headless.",
          "type": "string",
          "enum": [
            "ClusterSetIP",
            "Headless"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "status contains information about the exported services that form\nthe multi-cluster service referenced by this ServiceImport.",
      "type": "object",
      "properties": {
        "clusters": {
          "description": "clusters is the list of exporting clusters from which this service\nwas derived.",
          "type": "array",
          "items": {
            "description": "ClusterStatus contains service configuration mapped to a specific source cluster",
            "type": "object",
            "required": [
              "cluster"
            ],
            "properties": {
              "cluster": {
                "description": "cluster is the name of the exporting cluster. Must be a valid RFC-1123 DNS\nlabel.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "cluster"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "additionalProperties": false
    }
  }
}
