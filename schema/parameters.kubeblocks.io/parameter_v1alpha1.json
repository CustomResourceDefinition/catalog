{
  "description": "Parameter is the Schema for the parameters API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ParameterSpec defines the desired state of Parameter",
      "type": "object",
      "required": [
        "componentParameters"
      ],
      "properties": {
        "clusterName": {
          "description": "Specifies the name of the Cluster resource that this operation is targeting.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "forbidden to update spec.clusterName"
            }
          ]
        },
        "componentParameters": {
          "description": "Lists ComponentParametersSpec objects, each specifying a Component and its parameters and template updates.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "componentName"
            ],
            "properties": {
              "componentName": {
                "description": "Specifies the name of the Component.",
                "type": "string"
              },
              "parameters": {
                "description": "Specifies the user-defined configuration template or parameters.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "userConfigTemplates": {
                "description": "Specifies the user-defined configuration template.\n\n\nWhen provided, the `importTemplateRef` overrides the default configuration template\nspecified in `configSpec.templateRef`.\nThis allows users to customize the configuration template according to their specific requirements.",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "required": [
                    "templateRef"
                  ],
                  "properties": {
                    "namespace": {
                      "description": "Specifies the namespace of the referenced configuration template ConfigMap object.\nAn empty namespace is equivalent to the \"default\" namespace.",
                      "type": "string",
                      "default": "default",
                      "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$"
                    },
                    "policy": {
                      "description": "Defines the strategy for merging externally imported templates into component templates.",
                      "type": "string",
                      "default": "none",
                      "enum": [
                        "patch",
                        "replace",
                        "none"
                      ]
                    },
                    "templateRef": {
                      "description": "Specifies the name of the referenced configuration template ConfigMap object.",
                      "type": "string",
                      "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
                    }
                  }
                }
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ParameterStatus defines the observed state of Parameter",
      "type": "object",
      "properties": {
        "componentReconfiguringStatus": {
          "description": "Records the status of a reconfiguring operation if `opsRequest.spec.type` equals to \"Reconfiguring\".",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "componentName"
            ],
            "properties": {
              "componentName": {
                "description": "Specifies the name of the Component.",
                "type": "string"
              },
              "parameterStatus": {
                "description": "Describes the status of the component reconfiguring.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "lastDoneRevision": {
                      "description": "Represents the last completed revision of the configuration item. This field is optional.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Provides a description of any abnormal status. This field is optional.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Specifies the name of the configuration template. It is a required field and must be a string of maximum 63 characters.\nThe name should only contain lowercase alphanumeric characters, hyphens, or periods. It should start and end with an alphanumeric character.",
                      "type": "string",
                      "maxLength": 63,
                      "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
                    },
                    "phase": {
                      "description": "Indicates the current status of the configuration item.\n\n\nPossible values include \"Creating\", \"Init\", \"Running\", \"Pending\", \"Merged\", \"MergeFailed\", \"FailedAndPause\",\n\"Upgrading\", \"Deleting\", \"FailedAndRetry\", \"Finished\".",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Init",
                        "Running",
                        "Pending",
                        "Merged",
                        "MergeFailed",
                        "FailedAndPause",
                        "Upgrading",
                        "Deleting",
                        "FailedAndRetry",
                        "Finished"
                      ]
                    },
                    "reconcileDetail": {
                      "description": "Provides detailed information about the execution of the configuration change. This field is optional.",
                      "type": "object",
                      "properties": {
                        "currentRevision": {
                          "description": "Represents the current revision of the configuration item.",
                          "type": "string"
                        },
                        "errMessage": {
                          "description": "Represents the error message generated when the execution of configuration changes fails.",
                          "type": "string"
                        },
                        "execResult": {
                          "description": "Represents the outcome of the most recent execution.",
                          "type": "string"
                        },
                        "expectedCount": {
                          "description": "Represents the total number of pods that require execution of configuration changes.",
                          "type": "integer",
                          "format": "int32",
                          "default": -1
                        },
                        "policy": {
                          "description": "Represents the policy applied during the most recent execution.",
                          "type": "string"
                        },
                        "succeedCount": {
                          "description": "Represents the number of pods where configuration changes were successfully applied.",
                          "type": "integer",
                          "format": "int32",
                          "default": -1
                        }
                      },
                      "additionalProperties": false
                    },
                    "updateRevision": {
                      "description": "Represents the updated revision of the configuration item. This field is optional.",
                      "type": "string"
                    },
                    "updatedParameters": {
                      "description": "Contains the updated parameters.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "description": "Holds the configuration keys and values. This field is a workaround for issues found in kubebuilder and code-generator.\nRefer to https://github.com/kubernetes-sigs/kubebuilder/issues/528 and https://github.com/kubernetes/code-generator/issues/50 for more details.\n\n\nRepresents the content of the configuration file.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "Represents the updated parameters for a single configuration file.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "userConfigTemplates": {
                      "description": "Specifies the user-defined configuration template.\n\n\nWhen provided, the `importTemplateRef` overrides the default configuration template\nspecified in `configSpec.templateRef`.\nThis allows users to customize the configuration template according to their specific requirements.",
                      "type": "object",
                      "required": [
                        "templateRef"
                      ],
                      "properties": {
                        "namespace": {
                          "description": "Specifies the namespace of the referenced configuration template ConfigMap object.\nAn empty namespace is equivalent to the \"default\" namespace.",
                          "type": "string",
                          "default": "default",
                          "pattern": "^[a-z0-9]([a-z0-9\\-]*[a-z0-9])?$"
                        },
                        "policy": {
                          "description": "Defines the strategy for merging externally imported templates into component templates.",
                          "type": "string",
                          "default": "none",
                          "enum": [
                            "patch",
                            "replace",
                            "none"
                          ]
                        },
                        "templateRef": {
                          "description": "Specifies the name of the referenced configuration template ConfigMap object.",
                          "type": "string",
                          "pattern": "^[a-z0-9]([a-z0-9\\.\\-]*[a-z0-9])?$"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "phase": {
                "description": "Indicates the current status of the configuration item.\n\n\nPossible values include \"Creating\", \"Init\", \"Running\", \"Pending\", \"Merged\", \"MergeFailed\", \"FailedAndPause\",\n\"Upgrading\", \"Deleting\", \"FailedAndRetry\", \"Finished\".",
                "type": "string",
                "enum": [
                  "Creating",
                  "Init",
                  "Running",
                  "Pending",
                  "Merged",
                  "MergeFailed",
                  "FailedAndPause",
                  "Upgrading",
                  "Deleting",
                  "FailedAndRetry",
                  "Finished"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "message": {
          "description": "Provides a description of any abnormal status.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "Represents the latest generation observed for this\nClusterDefinition. It corresponds to the ConfigConstraint's generation, which is\nupdated by the API Server.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Indicates the current status of the configuration item.\n\n\nPossible values include \"Creating\", \"Init\", \"Running\", \"Pending\", \"Merged\", \"MergeFailed\", \"FailedAndPause\",\n\"Upgrading\", \"Deleting\", \"FailedAndRetry\", \"Finished\".",
          "type": "string",
          "enum": [
            "Creating",
            "Init",
            "Running",
            "Pending",
            "Merged",
            "MergeFailed",
            "FailedAndPause",
            "Upgrading",
            "Deleting",
            "FailedAndRetry",
            "Finished"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
