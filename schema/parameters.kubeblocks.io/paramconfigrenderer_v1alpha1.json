{
  "description": "ParamConfigRenderer is the Schema for the paramconfigrenderers API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ParamConfigRendererSpec defines the desired state of ParamConfigRenderer",
      "type": "object",
      "required": [
        "componentDef"
      ],
      "properties": {
        "componentDef": {
          "description": "Specifies the ComponentDefinition custom resource (CR) that defines the Component's characteristics and behavior.",
          "type": "string"
        },
        "configs": {
          "description": "Specifies the configuration files.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "fileFormatConfig": {
                "description": "Specifies the format of the configuration file and any associated parameters that are specific to the chosen format.\nSupported formats include `ini`, `xml`, `yaml`, `json`, `hcl`, `dotenv`, `properties`, and `toml`.\n\n\nEach format may have its own set of parameters that can be configured.\nFor instance, when using the `ini` format, you can specify the section name.\n\n\nExample:\n```\nfileFormatConfig:\n format: ini\n iniConfig:\n   sectionName: mysqld\n```",
                "type": "object",
                "required": [
                  "format"
                ],
                "properties": {
                  "format": {
                    "description": "The config file format. Valid values are `ini`, `xml`, `yaml`, `json`,\n`hcl`, `dotenv`, `properties` and `toml`. Each format has its own characteristics and use cases.\n\n\n- ini: is a text-based content with a structure and syntax comprising key–value pairs for properties, reference wiki: https://en.wikipedia.org/wiki/INI_file\n- xml: refers to wiki: https://en.wikipedia.org/wiki/XML\n- yaml: supports for complex data types and structures.\n- json: refers to wiki: https://en.wikipedia.org/wiki/JSON\n- hcl: The HashiCorp Configuration Language (HCL) is a configuration language authored by HashiCorp, reference url: https://www.linode.com/docs/guides/introduction-to-hcl/\n- dotenv: is a plain text file with simple key–value pairs, reference wiki: https://en.wikipedia.org/wiki/Configuration_file#MS-DOS\n- properties: a file extension mainly used in Java, reference wiki: https://en.wikipedia.org/wiki/.properties\n- toml: refers to wiki: https://en.wikipedia.org/wiki/TOML\n- props-plus: a file extension mainly used in Java, supports CamelCase(e.g: brokerMaxConnectionsPerIp)",
                    "type": "string",
                    "enum": [
                      "xml",
                      "ini",
                      "yaml",
                      "json",
                      "hcl",
                      "dotenv",
                      "toml",
                      "properties",
                      "redis",
                      "props-plus",
                      "props-ultra"
                    ]
                  },
                  "iniConfig": {
                    "description": "Holds options specific to the 'ini' file format.",
                    "type": "object",
                    "properties": {
                      "sectionName": {
                        "description": "A string that describes the name of the ini section.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Specifies the config file name in the config template.",
                "type": "string"
              },
              "reRenderResourceTypes": {
                "description": "Specifies whether the configuration needs to be re-rendered after v-scale or h-scale operations to reflect changes.\n\n\nIn some scenarios, the configuration may need to be updated to reflect the changes in resource allocation\nor cluster topology. Examples:\n\n\n- Redis: adjust maxmemory after v-scale operation.\n- MySQL: increase max connections after v-scale operation.\n- Zookeeper: update zoo.cfg with new node addresses after h-scale operation.",
                "type": "array",
                "items": {
                  "description": "RerenderResourceType defines the resource requirements for a component.",
                  "type": "string",
                  "enum": [
                    "vscale",
                    "hscale",
                    "tls",
                    "shardingHScale"
                  ]
                },
                "x-kubernetes-list-type": "set"
              },
              "templateName": {
                "description": "Specifies the name of the referenced componentTemplateSpec.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "parametersDefs": {
          "description": "Specifies the ParametersDefinition custom resource (CR) that defines the Component parameter's schema and behavior.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceVersion": {
          "description": "ServiceVersion specifies the version of the Service expected to be provisioned by this Component.\nThe version should follow the syntax and semantics of the \"Semantic Versioning\" specification (http://semver.org/).\nIf no version is specified, the latest available version will be used.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ParamConfigRendererStatus defines the observed state of ParamConfigRenderer",
      "type": "object",
      "properties": {
        "message": {
          "description": "Provides additional information about the current phase.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "The most recent generation number of the ParamsDesc object that has been observed by the controller.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "Specifies the status of the configuration template.\nWhen set to PDAvailablePhase, the ParamsDesc can be referenced by ComponentDefinition.",
          "type": "string",
          "enum": [
            "Available",
            "Unavailable",
            "Deleting"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
