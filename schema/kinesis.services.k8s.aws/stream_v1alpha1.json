{
  "description": "Stream is the Schema for the Streams API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "StreamSpec defines the desired state of Stream.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "A name to identify the stream. The stream name is scoped to the Amazon Web\nServices account used by the application that creates the stream. It is also\nscoped by Amazon Web Services Region. That is, two streams in two different\nAmazon Web Services accounts can have the same name. Two streams in the same\nAmazon Web Services account but in two different Regions can also have the\nsame name.\n\nRegex Pattern: `^[a-zA-Z0-9_.-]+$`",
          "type": "string"
        },
        "shardCount": {
          "description": "The number of shards that the stream will use. The throughput of the stream\nis a function of the number of shards; more shards are required for greater\nprovisioned throughput.",
          "type": "integer",
          "format": "int64"
        },
        "streamModeDetails": {
          "description": "Indicates the capacity mode of the data stream. Currently, in Kinesis Data\nStreams, you can choose between an on-demand capacity mode and a provisioned\ncapacity mode for your data streams.",
          "type": "object",
          "properties": {
            "streamMode": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "tags": {
          "description": "A set of up to 10 key-value pairs to use to create the tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "StreamStatus defines the observed state of Stream",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "consumerCount": {
          "description": "The number of enhanced fan-out consumers registered with the stream.",
          "type": "integer",
          "format": "int64"
        },
        "encryptionType": {
          "description": "The encryption type used. This value is one of the following:\n\n   * KMS\n\n   * NONE",
          "type": "string"
        },
        "enhancedMonitoring": {
          "description": "Represents the current enhanced monitoring settings of the stream.",
          "type": "array",
          "items": {
            "description": "Represents enhanced metrics types.",
            "type": "object",
            "properties": {
              "shardLevelMetrics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "keyID": {
          "description": "The GUID for the customer-managed Amazon Web Services KMS key to use for\nencryption. This value can be a globally unique identifier, a fully specified\nARN to either an alias or a key, or an alias name prefixed by \"alias/\".You\ncan also use a master key owned by Kinesis Data Streams by specifying the\nalias aws/kinesis.\n\n   * Key ARN example: arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\n\n   * Alias ARN example: arn:aws:kms:us-east-1:123456789012:alias/MyAliasName\n\n   * Globally unique key ID example: 12345678-1234-1234-1234-123456789012\n\n   * Alias name example: alias/MyAliasName\n\n   * Master key owned by Kinesis Data Streams: alias/aws/kinesis",
          "type": "string"
        },
        "openShardCount": {
          "description": "The number of open shards in the stream.",
          "type": "integer",
          "format": "int64"
        },
        "retentionPeriodHours": {
          "description": "The current retention period, in hours.",
          "type": "integer",
          "format": "int64"
        },
        "streamCreationTimestamp": {
          "description": "The approximate time that the stream was created.",
          "type": "string",
          "format": "date-time"
        },
        "streamStatus": {
          "description": "The current status of the stream being described. The stream status is one\nof the following states:\n\n   * CREATING - The stream is being created. Kinesis Data Streams immediately\n   returns and sets StreamStatus to CREATING.\n\n   * DELETING - The stream is being deleted. The specified stream is in the\n   DELETING state until Kinesis Data Streams completes the deletion.\n\n   * ACTIVE - The stream exists and is ready for read and write operations\n   or deletion. You should perform read and write operations only on an ACTIVE\n   stream.\n\n   * UPDATING - Shards in the stream are being merged or split. Read and\n   write operations continue to work while the stream is in the UPDATING\n   state.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
