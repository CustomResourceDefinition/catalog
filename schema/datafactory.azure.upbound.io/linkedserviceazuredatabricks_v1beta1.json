{
  "description": "LinkedServiceAzureDatabricks is the Schema for the LinkedServiceAzureDatabrickss API. Manages a Linked Service (connection) between Azure Databricks and Azure Data Factory.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LinkedServiceAzureDatabricksSpec defines the desired state of LinkedServiceAzureDatabricks",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "accessTokenSecretRef": {
              "description": "Authenticate to ADB via an access token.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "adbDomain": {
              "description": "The domain URL of the databricks instance.",
              "type": "string"
            },
            "additionalProperties": {
              "description": "A map of additional properties to associate with the Data Factory Linked Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "annotations": {
              "description": "List of tags that can be used for describing the Data Factory Linked Service.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dataFactoryId": {
              "description": "The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.",
              "type": "string"
            },
            "dataFactoryIdRef": {
              "description": "Reference to a Factory in datafactory to populate dataFactoryId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "dataFactoryIdSelector": {
              "description": "Selector for a Factory in datafactory to populate dataFactoryId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "The description for the Data Factory Linked Service.",
              "type": "string"
            },
            "existingClusterId": {
              "description": "The cluster_id of an existing cluster within the linked ADB instance.",
              "type": "string"
            },
            "instancePool": {
              "description": "Leverages an instance pool within the linked ADB instance as one instance_pool block defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clusterVersion": {
                    "description": "Spark version of a the cluster.",
                    "type": "string"
                  },
                  "instancePoolId": {
                    "description": "Identifier of the instance pool within the linked ADB instance.",
                    "type": "string"
                  },
                  "maxNumberOfWorkers": {
                    "description": "The max number of worker nodes. Set this value if you want to enable autoscaling between the min_number_of_workers and this value. Omit this value to use a fixed number of workers defined in the min_number_of_workers property.",
                    "type": "number"
                  },
                  "minNumberOfWorkers": {
                    "description": "The minimum number of worker nodes. Defaults to 1.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "integrationRuntimeName": {
              "description": "The integration runtime reference to associate with the Data Factory Linked Service.",
              "type": "string"
            },
            "keyVaultPassword": {
              "description": "Authenticate to ADB via Azure Key Vault Linked Service as defined in the key_vault_password block below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "linkedServiceName": {
                    "description": "Specifies the name of an existing Key Vault Data Factory Linked Service.",
                    "type": "string"
                  },
                  "secretName": {
                    "description": "Specifies the secret name in Azure Key Vault that stores ADB access token.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "msiWorkSpaceResourceId": {
              "description": "Authenticate to ADB via managed service identity.",
              "type": "string"
            },
            "msiWorkSpaceResourceIdRef": {
              "description": "Reference to a Workspace in databricks to populate msiWorkSpaceResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "msiWorkSpaceResourceIdSelector": {
              "description": "Selector for a Workspace in databricks to populate msiWorkSpaceResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "newClusterConfig": {
              "description": "Creates new clusters within the linked ADB instance as defined in the new_cluster_config block below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clusterVersion": {
                    "description": "Spark version of a the cluster.",
                    "type": "string"
                  },
                  "customTags": {
                    "description": "Tags for the cluster resource.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "driverNodeType": {
                    "description": "Driver node type for the cluster.",
                    "type": "string"
                  },
                  "initScripts": {
                    "description": "User defined initialization scripts for the cluster.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "logDestination": {
                    "description": "Location to deliver Spark driver, worker, and event logs.",
                    "type": "string"
                  },
                  "maxNumberOfWorkers": {
                    "description": "Specifies the maximum number of worker nodes. It should be between 1 and 25000.",
                    "type": "number"
                  },
                  "minNumberOfWorkers": {
                    "description": "Specifies the minimum number of worker nodes. It should be between 1 and 25000. It defaults to 1.",
                    "type": "number"
                  },
                  "nodeType": {
                    "description": "Node type for the new cluster.",
                    "type": "string"
                  },
                  "sparkConfig": {
                    "description": "User-specified Spark configuration variables key-value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "sparkEnvironmentVariables": {
                    "description": "User-specified Spark environment variables key-value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  }
                },
                "additionalProperties": false
              }
            },
            "parameters": {
              "description": "A map of parameters to associate with the Data Factory Linked Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "adbDomain": {
              "description": "The domain URL of the databricks instance.",
              "type": "string"
            },
            "additionalProperties": {
              "description": "A map of additional properties to associate with the Data Factory Linked Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "annotations": {
              "description": "List of tags that can be used for describing the Data Factory Linked Service.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "description": "The description for the Data Factory Linked Service.",
              "type": "string"
            },
            "existingClusterId": {
              "description": "The cluster_id of an existing cluster within the linked ADB instance.",
              "type": "string"
            },
            "instancePool": {
              "description": "Leverages an instance pool within the linked ADB instance as one instance_pool block defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clusterVersion": {
                    "description": "Spark version of a the cluster.",
                    "type": "string"
                  },
                  "instancePoolId": {
                    "description": "Identifier of the instance pool within the linked ADB instance.",
                    "type": "string"
                  },
                  "maxNumberOfWorkers": {
                    "description": "The max number of worker nodes. Set this value if you want to enable autoscaling between the min_number_of_workers and this value. Omit this value to use a fixed number of workers defined in the min_number_of_workers property.",
                    "type": "number"
                  },
                  "minNumberOfWorkers": {
                    "description": "The minimum number of worker nodes. Defaults to 1.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "integrationRuntimeName": {
              "description": "The integration runtime reference to associate with the Data Factory Linked Service.",
              "type": "string"
            },
            "keyVaultPassword": {
              "description": "Authenticate to ADB via Azure Key Vault Linked Service as defined in the key_vault_password block below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "linkedServiceName": {
                    "description": "Specifies the name of an existing Key Vault Data Factory Linked Service.",
                    "type": "string"
                  },
                  "secretName": {
                    "description": "Specifies the secret name in Azure Key Vault that stores ADB access token.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "msiWorkSpaceResourceId": {
              "description": "Authenticate to ADB via managed service identity.",
              "type": "string"
            },
            "msiWorkSpaceResourceIdRef": {
              "description": "Reference to a Workspace in databricks to populate msiWorkSpaceResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "msiWorkSpaceResourceIdSelector": {
              "description": "Selector for a Workspace in databricks to populate msiWorkSpaceResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "newClusterConfig": {
              "description": "Creates new clusters within the linked ADB instance as defined in the new_cluster_config block below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clusterVersion": {
                    "description": "Spark version of a the cluster.",
                    "type": "string"
                  },
                  "customTags": {
                    "description": "Tags for the cluster resource.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "driverNodeType": {
                    "description": "Driver node type for the cluster.",
                    "type": "string"
                  },
                  "initScripts": {
                    "description": "User defined initialization scripts for the cluster.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "logDestination": {
                    "description": "Location to deliver Spark driver, worker, and event logs.",
                    "type": "string"
                  },
                  "maxNumberOfWorkers": {
                    "description": "Specifies the maximum number of worker nodes. It should be between 1 and 25000.",
                    "type": "number"
                  },
                  "minNumberOfWorkers": {
                    "description": "Specifies the minimum number of worker nodes. It should be between 1 and 25000. It defaults to 1.",
                    "type": "number"
                  },
                  "nodeType": {
                    "description": "Node type for the new cluster.",
                    "type": "string"
                  },
                  "sparkConfig": {
                    "description": "User-specified Spark configuration variables key-value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "sparkEnvironmentVariables": {
                    "description": "User-specified Spark environment variables key-value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  }
                },
                "additionalProperties": false
              }
            },
            "parameters": {
              "description": "A map of parameters to associate with the Data Factory Linked Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.adbDomain) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.adbDomain))",
          "message": "spec.forProvider.adbDomain is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LinkedServiceAzureDatabricksStatus defines the observed state of LinkedServiceAzureDatabricks.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "adbDomain": {
              "description": "The domain URL of the databricks instance.",
              "type": "string"
            },
            "additionalProperties": {
              "description": "A map of additional properties to associate with the Data Factory Linked Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "annotations": {
              "description": "List of tags that can be used for describing the Data Factory Linked Service.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "dataFactoryId": {
              "description": "The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.",
              "type": "string"
            },
            "description": {
              "description": "The description for the Data Factory Linked Service.",
              "type": "string"
            },
            "existingClusterId": {
              "description": "The cluster_id of an existing cluster within the linked ADB instance.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Data Factory Linked Service.",
              "type": "string"
            },
            "instancePool": {
              "description": "Leverages an instance pool within the linked ADB instance as one instance_pool block defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clusterVersion": {
                    "description": "Spark version of a the cluster.",
                    "type": "string"
                  },
                  "instancePoolId": {
                    "description": "Identifier of the instance pool within the linked ADB instance.",
                    "type": "string"
                  },
                  "maxNumberOfWorkers": {
                    "description": "The max number of worker nodes. Set this value if you want to enable autoscaling between the min_number_of_workers and this value. Omit this value to use a fixed number of workers defined in the min_number_of_workers property.",
                    "type": "number"
                  },
                  "minNumberOfWorkers": {
                    "description": "The minimum number of worker nodes. Defaults to 1.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "integrationRuntimeName": {
              "description": "The integration runtime reference to associate with the Data Factory Linked Service.",
              "type": "string"
            },
            "keyVaultPassword": {
              "description": "Authenticate to ADB via Azure Key Vault Linked Service as defined in the key_vault_password block below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "linkedServiceName": {
                    "description": "Specifies the name of an existing Key Vault Data Factory Linked Service.",
                    "type": "string"
                  },
                  "secretName": {
                    "description": "Specifies the secret name in Azure Key Vault that stores ADB access token.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "msiWorkSpaceResourceId": {
              "description": "Authenticate to ADB via managed service identity.",
              "type": "string"
            },
            "newClusterConfig": {
              "description": "Creates new clusters within the linked ADB instance as defined in the new_cluster_config block below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clusterVersion": {
                    "description": "Spark version of a the cluster.",
                    "type": "string"
                  },
                  "customTags": {
                    "description": "Tags for the cluster resource.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "driverNodeType": {
                    "description": "Driver node type for the cluster.",
                    "type": "string"
                  },
                  "initScripts": {
                    "description": "User defined initialization scripts for the cluster.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "logDestination": {
                    "description": "Location to deliver Spark driver, worker, and event logs.",
                    "type": "string"
                  },
                  "maxNumberOfWorkers": {
                    "description": "Specifies the maximum number of worker nodes. It should be between 1 and 25000.",
                    "type": "number"
                  },
                  "minNumberOfWorkers": {
                    "description": "Specifies the minimum number of worker nodes. It should be between 1 and 25000. It defaults to 1.",
                    "type": "number"
                  },
                  "nodeType": {
                    "description": "Node type for the new cluster.",
                    "type": "string"
                  },
                  "sparkConfig": {
                    "description": "User-specified Spark configuration variables key-value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "sparkEnvironmentVariables": {
                    "description": "User-specified Spark environment variables key-value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  }
                },
                "additionalProperties": false
              }
            },
            "parameters": {
              "description": "A map of parameters to associate with the Data Factory Linked Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
