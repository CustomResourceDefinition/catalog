{
  "description": "ManagedSubscription defines a Subscription managed by the API manager as the result of a pre-negotiation with its\nAPI consumers. This subscription grant consuming access to a set of APIs to a set of Applications.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "The desired behavior of this ManagedSubscription.",
      "type": "object",
      "required": [
        "apiPlan"
      ],
      "properties": {
        "apiBundles": {
          "description": "APIBundles defines a set of APIBundle that will be accessible.\nMultiple ManagedSubscriptions can select the same APIBundles.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "description": "APIBundleReference references an APIBundle.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name of the APIBundle.",
                "type": "string",
                "maxLength": 253
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(x, self.exists_one(y, x.name == y.name))",
              "message": "duplicated apiBundles"
            }
          ]
        },
        "apiPlan": {
          "description": "APIPlan defines which APIPlan will be used.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the APIPlan.",
              "type": "string",
              "maxLength": 253
            }
          },
          "additionalProperties": false
        },
        "apiSelector": {
          "description": "APISelector selects the APIs that will be accessible.\nMultiple ManagedSubscriptions can select the same set of APIs.\nThis field is optional and follows standard label selector semantics.\nAn empty APISelector matches any API.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "apis": {
          "description": "APIs defines a set of APIs that will be accessible.\nMultiple ManagedSubscriptions can select the same APIs.\nWhen combined with APISelector, this set of APIs is appended to the matching APIs.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "description": "APIReference references an API.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name of the API.",
                "type": "string",
                "maxLength": 253
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(x, self.exists_one(y, x.name == y.name))",
              "message": "duplicated apis"
            }
          ]
        },
        "applications": {
          "description": "Applications references the Applications that will gain access to the specified APIs.\nMultiple ManagedSubscriptions can select the same AppID.\nDeprecated: Use ManagedApplications instead.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "description": "ApplicationReference references an Application.",
            "type": "object",
            "required": [
              "appId"
            ],
            "properties": {
              "appId": {
                "description": "AppID is the public identifier of the application.\nIn the case of OIDC, it corresponds to the clientId.",
                "type": "string",
                "maxLength": 253
              }
            },
            "additionalProperties": false
          }
        },
        "claims": {
          "description": "Claims specifies an expression that validate claims in order to authorize the request.",
          "type": "string"
        },
        "managedApplications": {
          "description": "ManagedApplications references the ManagedApplications that will gain access to the specified APIs.\nMultiple ManagedSubscriptions can select the same ManagedApplication.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "description": "ManagedApplicationReference references a ManagedApplication.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name is the name of the ManagedApplication.",
                "type": "string",
                "maxLength": 253
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(x, self.exists_one(y, x.name == y.name))",
              "message": "duplicated managed applications"
            }
          ]
        },
        "operationFilter": {
          "description": "OperationFilter specifies the allowed operations on APIs and APIVersions.\nIf not set, all operations are available.\nAn empty OperationFilter prohibits all operations.",
          "type": "object",
          "properties": {
            "include": {
              "description": "Include defines the names of OperationSets that will be accessible.",
              "type": "array",
              "maxItems": 100,
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "weight": {
          "description": "Weight specifies the evaluation order of the APIPlan.\nWhen multiple ManagedSubscriptions targets the same API and Application with different APIPlan,\nthe APIPlan with the highest weight will be enforced. If weights are equal, alphabetical order is used.",
          "type": "integer",
          "x-kubernetes-validations": [
            {
              "rule": "self \u003e= 0",
              "message": "must be a positive number"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The current status of this ManagedSubscription.",
      "type": "object",
      "properties": {
        "hash": {
          "description": "Hash is a hash representing the ManagedSubscription.",
          "type": "string"
        },
        "syncedAt": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
