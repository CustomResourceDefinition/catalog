{
  "description": "APIPortalAuth defines the authentication configuration for an APIPortal.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "The desired behavior of this APIPortalAuth.",
      "type": "object",
      "required": [
        "oidc"
      ],
      "properties": {
        "oidc": {
          "description": "OIDC configures the OIDC authentication.",
          "type": "object",
          "required": [
            "claims",
            "issuerUrl",
            "secretName"
          ],
          "properties": {
            "claims": {
              "description": "Claims configures JWT claim mappings for user attributes.",
              "type": "object",
              "required": [
                "groups"
              ],
              "properties": {
                "company": {
                  "description": "Company is the JWT claim for user company.",
                  "type": "string"
                },
                "email": {
                  "description": "Email is the JWT claim for user email.",
                  "type": "string"
                },
                "firstname": {
                  "description": "Firstname is the JWT claim for user first name.",
                  "type": "string"
                },
                "groups": {
                  "description": "Groups is the JWT claim for user groups. This field is required for authorization.",
                  "type": "string"
                },
                "lastname": {
                  "description": "Lastname is the JWT claim for user last name.",
                  "type": "string"
                },
                "userId": {
                  "description": "UserID is the JWT claim for user ID mapping.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "issuerUrl": {
              "description": "IssuerURL is the OIDC provider issuer URL.",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "isURL(self)",
                  "message": "must be a valid URL"
                }
              ]
            },
            "scopes": {
              "description": "Scopes is a list of OAuth2 scopes.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "secretName": {
              "description": "SecretName is the name of the Kubernetes Secret containing clientId and clientSecret keys.",
              "type": "string",
              "maxLength": 253
            },
            "syncedAttributes": {
              "description": "SyncedAttributes is a list of additional attributes to sync from the OIDC provider.\nEach attribute must correspond to a configured claim field.",
              "type": "array",
              "maxItems": 6,
              "items": {
                "type": "string",
                "enum": [
                  "groups",
                  "userId",
                  "firstname",
                  "lastname",
                  "email",
                  "company"
                ]
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The current status of this APIPortalAuth.",
      "type": "object",
      "properties": {
        "hash": {
          "description": "Hash is a hash representing the APIPortalAuth.",
          "type": "string"
        },
        "syncedAt": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
