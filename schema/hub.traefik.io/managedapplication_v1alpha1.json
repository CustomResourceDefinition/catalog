{
  "description": "ManagedApplication represents a managed application.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ManagedApplicationSpec describes the ManagedApplication.",
      "type": "object",
      "required": [
        "appId",
        "owner"
      ],
      "properties": {
        "apiKeys": {
          "description": "APIKeys references the API keys used to authenticate the application when calling APIs.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "object",
            "properties": {
              "secretName": {
                "description": "SecretName references the name of the secret containing the API key.",
                "type": "string",
                "maxLength": 253
              },
              "suspended": {
                "type": "boolean"
              },
              "title": {
                "type": "string"
              },
              "value": {
                "description": "Value is the API key value.",
                "type": "string",
                "maxLength": 4096
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "[has(self.secretName), has(self.value)].filter(x, x).size() \u003c= 1",
                "message": "secretName and value are mutually exclusive"
              }
            ]
          }
        },
        "appId": {
          "description": "AppID is the identifier of the ManagedApplication.\nIt should be unique.",
          "type": "string",
          "maxLength": 253
        },
        "notes": {
          "description": "Notes contains notes about application.",
          "type": "string"
        },
        "owner": {
          "description": "Owner represents the owner of the ManagedApplication.\nIt should be:\n- `sub` when using OIDC\n- `externalID` when using external IDP",
          "type": "string",
          "maxLength": 253
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The current status of this ManagedApplication.",
      "type": "object",
      "properties": {
        "apiKeyVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hash": {
          "description": "Hash is a hash representing the ManagedApplication.",
          "type": "string"
        },
        "syncedAt": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
