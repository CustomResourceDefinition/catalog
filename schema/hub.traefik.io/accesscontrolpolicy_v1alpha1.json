{
  "description": "AccessControlPolicy defines an access control policy.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AccessControlPolicySpec configures an access control policy.",
      "type": "object",
      "properties": {
        "apiKey": {
          "description": "AccessControlPolicyAPIKey configure an APIKey control policy.",
          "type": "object",
          "required": [
            "keySource"
          ],
          "properties": {
            "forwardHeaders": {
              "description": "ForwardHeaders instructs the middleware to forward key metadata as header values upon successful authentication.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "keySource": {
              "description": "KeySource defines how to extract API keys from requests.",
              "type": "object",
              "properties": {
                "cookie": {
                  "description": "Cookie is the name of a cookie.",
                  "type": "string"
                },
                "header": {
                  "description": "Header is the name of a header.",
                  "type": "string"
                },
                "headerAuthScheme": {
                  "description": "HeaderAuthScheme sets an optional auth scheme when Header is set to \"Authorization\".\nIf set, this scheme is removed from the token, and all requests not including it are dropped.",
                  "type": "string"
                },
                "query": {
                  "description": "Query is the name of a query parameter.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keys": {
              "description": "Keys define the set of authorized keys to access a protected resource.",
              "type": "array",
              "items": {
                "description": "AccessControlPolicyAPIKeyKey defines an API key.",
                "type": "object",
                "required": [
                  "id",
                  "value"
                ],
                "properties": {
                  "id": {
                    "description": "ID is the unique identifier of the key.",
                    "type": "string"
                  },
                  "metadata": {
                    "description": "Metadata holds arbitrary metadata for this key, can be used by ForwardHeaders.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "value": {
                    "description": "Value is the SHAKE-256 hash (using 64 bytes) of the API key.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "basicAuth": {
          "description": "AccessControlPolicyBasicAuth holds the HTTP basic authentication configuration.",
          "type": "object",
          "properties": {
            "forwardUsernameHeader": {
              "type": "string"
            },
            "realm": {
              "type": "string"
            },
            "stripAuthorizationHeader": {
              "type": "boolean"
            },
            "users": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "jwt": {
          "description": "AccessControlPolicyJWT configures a JWT access control policy.",
          "type": "object",
          "properties": {
            "claims": {
              "type": "string"
            },
            "forwardHeaders": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "jwksFile": {
              "type": "string"
            },
            "jwksUrl": {
              "type": "string"
            },
            "publicKey": {
              "type": "string"
            },
            "signingSecret": {
              "type": "string"
            },
            "signingSecretBase64Encoded": {
              "type": "boolean"
            },
            "stripAuthorizationHeader": {
              "type": "boolean"
            },
            "tokenQueryKey": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "oAuthIntro": {
          "description": "AccessControlOAuthIntro configures an OAuth 2.0 Token Introspection access control policy.",
          "type": "object",
          "required": [
            "clientConfig",
            "tokenSource"
          ],
          "properties": {
            "claims": {
              "type": "string"
            },
            "clientConfig": {
              "description": "AccessControlOAuthIntroClientConfig configures the OAuth 2.0 client for issuing token introspection requests.",
              "type": "object",
              "required": [
                "url"
              ],
              "properties": {
                "headers": {
                  "description": "Headers to set when sending requests to the Authorization Server.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "maxRetries": {
                  "description": "MaxRetries defines the number of retries for introspection requests.",
                  "type": "integer",
                  "default": 3
                },
                "timeoutSeconds": {
                  "description": "TimeoutSeconds configures the maximum amount of seconds to wait before giving up on requests.",
                  "type": "integer",
                  "default": 5
                },
                "tls": {
                  "description": "TLS configures TLS communication with the Authorization Server.",
                  "type": "object",
                  "properties": {
                    "ca": {
                      "description": "CA sets the CA bundle used to sign the Authorization Server certificate.",
                      "type": "string"
                    },
                    "insecureSkipVerify": {
                      "description": "InsecureSkipVerify skips the Authorization Server certificate validation.\nFor testing purposes only, do not use in production.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "tokenTypeHint": {
                  "description": "TokenTypeHint is a hint to pass to the Authorization Server.\nSee https://tools.ietf.org/html/rfc7662#section-2.1 for more information.",
                  "type": "string"
                },
                "url": {
                  "description": "URL of the Authorization Server.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "forwardHeaders": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "tokenSource": {
              "description": "TokenSource describes how to extract tokens from HTTP requests.\nIf multiple sources are set, the order is the following: header \u003e query \u003e cookie.",
              "type": "object",
              "properties": {
                "cookie": {
                  "description": "Cookie is the name of a cookie.",
                  "type": "string"
                },
                "header": {
                  "description": "Header is the name of a header.",
                  "type": "string"
                },
                "headerAuthScheme": {
                  "description": "HeaderAuthScheme sets an optional auth scheme when Header is set to \"Authorization\".\nIf set, this scheme is removed from the token, and all requests not including it are dropped.",
                  "type": "string"
                },
                "query": {
                  "description": "Query is the name of a query parameter.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "oidc": {
          "description": "AccessControlPolicyOIDC holds the OIDC authentication configuration.",
          "type": "object",
          "properties": {
            "authParams": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "claims": {
              "type": "string"
            },
            "clientId": {
              "type": "string"
            },
            "disableAuthRedirectionPaths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "forwardHeaders": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "issuer": {
              "type": "string"
            },
            "logoutUrl": {
              "type": "string"
            },
            "redirectUrl": {
              "type": "string"
            },
            "scopes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "secret": {
              "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret\nin any namespace",
              "type": "object",
              "properties": {
                "name": {
                  "description": "name is unique within a namespace to reference a secret resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "namespace defines the space within which the secret name must be unique.",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "session": {
              "description": "Session holds session configuration.",
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "refresh": {
                  "type": "boolean"
                },
                "sameSite": {
                  "type": "string"
                },
                "secure": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "stateCookie": {
              "description": "StateCookie holds state cookie configuration.",
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "sameSite": {
                  "type": "string"
                },
                "secure": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "oidcGoogle": {
          "description": "AccessControlPolicyOIDCGoogle holds the Google OIDC authentication configuration.",
          "type": "object",
          "properties": {
            "authParams": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "clientId": {
              "type": "string"
            },
            "emails": {
              "description": "Emails are the allowed emails to connect.",
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            "forwardHeaders": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "logoutUrl": {
              "type": "string"
            },
            "redirectUrl": {
              "type": "string"
            },
            "secret": {
              "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret\nin any namespace",
              "type": "object",
              "properties": {
                "name": {
                  "description": "name is unique within a namespace to reference a secret resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "namespace defines the space within which the secret name must be unique.",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "session": {
              "description": "Session holds session configuration.",
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "refresh": {
                  "type": "boolean"
                },
                "sameSite": {
                  "type": "string"
                },
                "secure": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "stateCookie": {
              "description": "StateCookie holds state cookie configuration.",
              "type": "object",
              "properties": {
                "domain": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "sameSite": {
                  "type": "string"
                },
                "secure": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The current status of this access control policy.",
      "type": "object",
      "properties": {
        "specHash": {
          "type": "string"
        },
        "syncedAt": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
