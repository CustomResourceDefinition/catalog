{
  "description": "APIPortal defines a developer portal for accessing the documentation of APIs.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "The desired behavior of this APIPortal.",
      "type": "object",
      "required": [
        "trustedUrls"
      ],
      "properties": {
        "auth": {
          "description": "Auth references the APIPortalAuth resource for authentication configuration.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the APIPortalAuth resource.",
              "type": "string",
              "maxLength": 253
            }
          },
          "additionalProperties": false
        },
        "description": {
          "description": "Description of the APIPortal.",
          "type": "string"
        },
        "title": {
          "description": "Title is the public facing name of the APIPortal.",
          "type": "string"
        },
        "trustedUrls": {
          "description": "TrustedURLs are the urls that are trusted by the OAuth 2.0 authorization server.",
          "type": "array",
          "maxItems": 1,
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(x, isURL(x))",
              "message": "must be a valid URLs"
            }
          ]
        },
        "ui": {
          "description": "UI holds the UI customization options.",
          "type": "object",
          "properties": {
            "logoUrl": {
              "description": "LogoURL is the public URL of the logo.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "The current status of this APIPortal.",
      "type": "object",
      "properties": {
        "hash": {
          "description": "Hash is a hash representing the APIPortal.",
          "type": "string"
        },
        "oidc": {
          "description": "OIDC is the OIDC configuration for accessing the exposed APIPortal WebUI.",
          "type": "object",
          "properties": {
            "clientId": {
              "description": "ClientID is the OIDC ClientID for accessing the exposed APIPortal WebUI.",
              "type": "string"
            },
            "companyClaim": {
              "description": "CompanyClaim is the name of the JWT claim containing the user company.",
              "type": "string"
            },
            "emailClaim": {
              "description": "EmailClaim is the name of the JWT claim containing the user email.",
              "type": "string"
            },
            "firstnameClaim": {
              "description": "FirstnameClaim is the name of the JWT claim containing the user firstname.",
              "type": "string"
            },
            "generic": {
              "description": "Generic indicates whether or not the APIPortal authentication relies on Generic OIDC.",
              "type": "boolean"
            },
            "groupsClaim": {
              "description": "GroupsClaim is the name of the JWT claim containing the user groups.",
              "type": "string"
            },
            "issuer": {
              "description": "Issuer is the OIDC issuer for accessing the exposed APIPortal WebUI.",
              "type": "string"
            },
            "lastnameClaim": {
              "description": "LastnameClaim is the name of the JWT claim containing the user lastname.",
              "type": "string"
            },
            "scopes": {
              "description": "Scopes is the OIDC scopes for getting user attributes during the authentication to the exposed APIPortal WebUI.",
              "type": "string"
            },
            "secretName": {
              "description": "SecretName is the name of the secret containing the OIDC ClientSecret for accessing the exposed APIPortal WebUI.",
              "type": "string"
            },
            "syncedAttributes": {
              "description": "SyncedAttributes configure the user attributes to sync.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "userIdClaim": {
              "description": "UserIDClaim is the name of the JWT claim containing the user ID.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "syncedAt": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
