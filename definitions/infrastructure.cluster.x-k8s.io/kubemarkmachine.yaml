apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  labels:
    cluster.x-k8s.io/v1alpha4: v1alpha4
    cluster.x-k8s.io/v1beta1: v1alpha4
  name: kubemarkmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: KubemarkMachine
    listKind: KubemarkMachineList
    plural: kubemarkmachines
    singular: kubemarkmachine
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: KubemarkMachine is the Schema for the kubemarkmachines API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KubemarkMachineSpec defines the desired state of KubemarkMachine.
            properties:
              extraMounts:
                description: |-
                  ExtraMounts describes additional mount points for the node container
                  These may be used to bind a hostPath
                items:
                  description: |-
                    Mount specifies a host volume to mount into a container.
                    This is a simplified version of kind v1alpha4.Mount types.
                  properties:
                    containerPath:
                      description: Path of the mount within the container.
                      type: string
                    hostPath:
                      description: |-
                        Path of the mount on the host. If the hostPath doesn't exist, then runtimes
                        should report error. If the hostpath is a symbolic link, runtimes should
                        follow the symlink and mount the real destination to container.
                      type: string
                    name:
                      description: Name of the mount.
                      type: string
                    type:
                      description: |-
                        Type for HostPath Volume
                        Defaults to ""
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                        validations taken from https://github.com/kubernetes/api/blob/master/core/v1/types.go#L664
                      enum:
                      - ""
                      - DirectoryOrCreate
                      - Directory
                      - FileOrCreate
                      - File
                      - Socket
                      - CharDevice
                      - BlockDevice
                      type: string
                  required:
                  - containerPath
                  - hostPath
                  - name
                  type: object
                type: array
              kubemarkHollowPodClusterSecretRef:
                description: KubemarkHollowPodClusterSecretRef is a reference to a
                  secret with a kubeconfig for an external cluster used for kubemark
                  pods.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              kubemarkOptions:
                description: |-
                  KubemarkOptions are API representations of command line flags that
                  will be passed to the `kubemark` binary.
                properties:
                  extendedResources:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      ExtendedResources is a map of resource-type:value pairs that describe
                      resources which the result machine and node will advertise as capacity.
                      These will only be used with Kubernetes v1.22+.
                      Defaults to {"cpu": "1", "memory": "4G"}
                    type: object
                  nodeLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      NodeLabels is a map of labels to that will be applied created nodes.
                      Labels applied this way will be injected as command line flags to the
                      kubemark process.
                      Defaults to no labels
                    type: object
                  registerWithTaints:
                    description: |-
                      RegisterWithTaints is an array of Taints that will be applied to created
                      nodes. Taints applied this way will be injected as command line flags to
                      the kubemark process.
                      Defaults to no taints
                    items:
                      description: |-
                        The node this Taint is attached to has the "effect" on
                        any pod that does not tolerate the Taint.
                      properties:
                        effect:
                          description: |-
                            Required. The effect of the taint on pods
                            that do not tolerate the taint.
                            Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Required. The taint key to be applied to a
                            node.
                          type: string
                        timeAdded:
                          description: |-
                            TimeAdded represents the time at which the taint was added.
                            It is only written for NoExecute taints.
                          format: date-time
                          type: string
                        value:
                          description: The taint value corresponding to the taint
                            key.
                          type: string
                      required:
                      - effect
                      - key
                      type: object
                    type: array
                type: object
              providerID:
                description: ProviderID will be the kubemark pod name in ProviderID
                  format (kubemark:////<podname>)
                type: string
            type: object
          status:
            description: KubemarkMachineStatus defines the observed state of KubemarkMachine.
            properties:
              conditions:
                description: Conditions defines current service state of the DockerMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
