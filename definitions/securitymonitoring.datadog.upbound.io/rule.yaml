---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: rules.securitymonitoring.datadog.upbound.io
spec:
  group: securitymonitoring.datadog.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - datadog
    kind: Rule
    listKind: RuleList
    plural: rules
    singular: rule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Rule is the Schema for the Rules API. Provides a Datadog Security
          Monitoring Rule API resource. This can be used to create and manage Datadog
          security monitoring rules. To change settings for a default rule use datadog_security_default_rule
          instead.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RuleSpec defines the desired state of Rule
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  case:
                    description: '(Block List, Max: 10) Cases for generating signals.
                      (see below for nested schema) Cases for generating signals.'
                    items:
                      properties:
                        condition:
                          description: (String) A rule case contains logical operations
                            (>,>=, &&, ||) to determine if a signal should be generated
                            based on the event counts in the previously defined queries.
                            A rule case contains logical operations (`>`,`>=`, `&&`,
                            `||`) to determine if a signal should be generated based
                            on the event counts in the previously defined queries.
                          type: string
                        name:
                          description: (String) The name of the rule. Name of the
                            case.
                          type: string
                        notifications:
                          description: (List of String) Notification targets for each
                            rule case. Notification targets for each rule case.
                          items:
                            type: string
                          type: array
                        status:
                          description: (String) Severity of the Security Signal. Valid
                            values are info, low, medium, high, critical. Severity
                            of the Security Signal. Valid values are `info`, `low`,
                            `medium`, `high`, `critical`.
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: (Boolean) Whether the rule is enabled. Defaults to
                      true. Whether the rule is enabled. Defaults to `true`.
                    type: boolean
                  filter:
                    description: (Block List) Additional queries to filter matched
                      events before they are processed. (see below for nested schema)
                      Additional queries to filter matched events before they are
                      processed.
                    items:
                      properties:
                        action:
                          description: (String) The type of filtering action. Valid
                            values are require, suppress. The type of filtering action.
                            Valid values are `require`, `suppress`.
                          type: string
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) Query
                            for selecting logs to apply the filtering action.
                          type: string
                      type: object
                    type: array
                  hasExtendedTitle:
                    description: by values in their title. Defaults to false. Whether
                      the notifications include the triggering group-by values in
                      their title. Defaults to `false`.
                    type: boolean
                  message:
                    description: (String) Message for generated signals. Message for
                      generated signals.
                    type: string
                  name:
                    description: (String) The name of the rule. The name of the rule.
                    type: string
                  options:
                    description: '(Block List, Max: 1) Options on rules. (see below
                      for nested schema) Options on rules.'
                    items:
                      properties:
                        decreaseCriticalityBasedOnEnv:
                          description: production environments have a lower severity
                            than what is defined by the rule case, which can reduce
                            noise. The decrement is applied when the environment tag
                            of the signal starts with staging, test, or dev. Only
                            available when the rule type is log_detection. Defaults
                            to false. If true, signals in non-production environments
                            have a lower severity than what is defined by the rule
                            case, which can reduce noise. The decrement is applied
                            when the environment tag of the signal starts with `staging`,
                            `test`, or `dev`. Only available when the rule type is
                            `log_detection`. Defaults to `false`.
                          type: boolean
                        detectionMethod:
                          description: (String) The detection method. Valid values
                            are threshold, new_value, anomaly_detection, impossible_travel,
                            hardcoded, third_party. Defaults to "threshold". The detection
                            method. Valid values are `threshold`, `new_value`, `anomaly_detection`,
                            `impossible_travel`, `hardcoded`, `third_party`. Defaults
                            to `"threshold"`.
                          type: string
                        evaluationWindow:
                          description: (Number) A time window is specified to match
                            when at least one of the cases matches true. This is a
                            sliding window and evaluates in real time. Valid values
                            are 0, 60, 300, 600, 900, 1800, 3600, 7200. A time window
                            is specified to match when at least one of the cases matches
                            true. This is a sliding window and evaluates in real time.
                            Valid values are `0`, `60`, `300`, `600`, `900`, `1800`,
                            `3600`, `7200`.
                          type: number
                        impossibleTravelOptions:
                          description: '(Block List, Max: 1) Options for rules using
                            the impossible travel detection method. (see below for
                            nested schema) Options for rules using the impossible
                            travel detection method.'
                          items:
                            properties:
                              baselineUserLocations:
                                description: (Boolean) If true, signals are suppressed
                                  for the first 24 hours. During that time, Datadog
                                  learns the user's regular access locations. This
                                  can be helpful to reduce noise and infer VPN usage
                                  or credentialed API access. Defaults to false. If
                                  true, signals are suppressed for the first 24 hours.
                                  During that time, Datadog learns the user's regular
                                  access locations. This can be helpful to reduce
                                  noise and infer VPN usage or credentialed API access.
                                  Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        keepAlive:
                          description: (Number) Once a signal is generated, the signal
                            will remain “open” if a case is matched at least once
                            within this keep alive window (in seconds). Valid values
                            are 0, 60, 300, 600, 900, 1800, 3600, 7200, 10800, 21600.
                            Once a signal is generated, the signal will remain “open”
                            if a case is matched at least once within this keep alive
                            window (in seconds). Valid values are `0`, `60`, `300`,
                            `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`.
                          type: number
                        maxSignalDuration:
                          description: (Number) A signal will “close” regardless of
                            the query being matched once the time exceeds the maximum
                            duration (in seconds). This time is calculated from the
                            first seen timestamp. Valid values are 0, 60, 300, 600,
                            900, 1800, 3600, 7200, 10800, 21600, 43200, 86400. A signal
                            will “close” regardless of the query being matched once
                            the time exceeds the maximum duration (in seconds). This
                            time is calculated from the first seen timestamp. Valid
                            values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`,
                            `7200`, `10800`, `21600`, `43200`, `86400`.
                          type: number
                        newValueOptions:
                          description: '(Block List, Max: 1) New value rules specific
                            options. (see below for nested schema) New value rules
                            specific options.'
                          items:
                            properties:
                              forgetAfter:
                                description: (Number) The duration in days after which
                                  a learned value is forgotten. Valid values are 1,
                                  2, 7, 14, 21, 28. The duration in days after which
                                  a learned value is forgotten. Valid values are `1`,
                                  `2`, `7`, `14`, `21`, `28`.
                                type: number
                              learningDuration:
                                description: (Number) The duration in days during
                                  which values are learned, and after which signals
                                  will be generated for values that weren't learned.
                                  If set to 0, a signal will be generated for all
                                  new values after the first value is learned. Valid
                                  values are 0, 1, 7. Defaults to 1. The duration
                                  in days during which values are learned, and after
                                  which signals will be generated for values that
                                  weren't learned. If set to 0, a signal will be generated
                                  for all new values after the first value is learned.
                                  Valid values are `0`, `1`, `7`. Defaults to `1`.
                                type: number
                              learningMethod:
                                description: (String) The learning method used to
                                  determine when signals should be generated for values
                                  that weren't learned. Valid values are duration,
                                  threshold. Defaults to "duration". The learning
                                  method used to determine when signals should be
                                  generated for values that weren't learned. Valid
                                  values are `duration`, `threshold`. Defaults to
                                  `"duration"`.
                                type: string
                              learningThreshold:
                                description: (Number) A number of occurrences after
                                  which signals are generated for values that weren't
                                  learned. Valid values are 0, 1. Defaults to 0. A
                                  number of occurrences after which signals are generated
                                  for values that weren't learned. Valid values are
                                  `0`, `1`. Defaults to `0`.
                                type: number
                            type: object
                          type: array
                        thirdPartyRuleOptions:
                          description: party detection method. (see below for nested
                            schema) Options for rules using the third-party detection
                            method.
                          items:
                            properties:
                              defaultNotifications:
                                description: party cases match. Notification targets
                                  for the default rule case, when none of the third-party
                                  cases match.
                                items:
                                  type: string
                                type: array
                              defaultStatus:
                                description: party cases match. Valid values are info,
                                  low, medium, high, critical. Severity of the default
                                  rule case, when none of the third-party cases match.
                                  Valid values are `info`, `low`, `medium`, `high`,
                                  `critical`.
                                type: string
                              rootQuery:
                                description: party case queries. Each of them can
                                  have different group by fields, to aggregate differently
                                  based on the type of alert. (see below for nested
                                  schema) Queries to be combined with third-party
                                  case queries. Each of them can have different group
                                  by fields, to aggregate differently based on the
                                  type of alert.
                                items:
                                  properties:
                                    groupByFields:
                                      description: (List of String) Fields to group
                                        by. If empty, each log triggers a signal.
                                        Fields to group by. If empty, each log triggers
                                        a signal.
                                      items:
                                        type: string
                                      type: array
                                    query:
                                      description: (Block List) Queries for selecting
                                        logs which are part of the rule. (see below
                                        for nested schema) Query to filter logs.
                                      type: string
                                  type: object
                                type: array
                              signalTitleTemplate:
                                description: (String) A template for the signal title;
                                  if omitted, the title is generated based on the
                                  case name. A template for the signal title; if omitted,
                                  the title is generated based on the case name.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  query:
                    description: (Block List) Queries for selecting logs which are
                      part of the rule. (see below for nested schema) Queries for
                      selecting logs which are part of the rule.
                    items:
                      properties:
                        agentRule:
                          description: (Block List, Deprecated) Deprecated. It won't
                            be applied anymore. Deprecated. agent_rule has been deprecated
                            in favor of new Agent Rule resource. (see below for nested
                            schema) **Deprecated**. It won't be applied anymore. **Deprecated.**
                            `agent_rule` has been deprecated in favor of new Agent
                            Rule resource.
                          items:
                            properties:
                              agentRuleId:
                                description: (String) Deprecated. It won't be applied
                                  anymore. **Deprecated**. It won't be applied anymore.
                                type: string
                              expression:
                                description: (String) Deprecated. It won't be applied
                                  anymore. **Deprecated**. It won't be applied anymore.
                                type: string
                            type: object
                          type: array
                        aggregation:
                          description: (String) The aggregation type. For Signal Correlation
                            rules, it must be event_count. Valid values are count,
                            cardinality, sum, max, new_value, geo_data, event_count,
                            none. Defaults to "count". The aggregation type. For Signal
                            Correlation rules, it must be event_count. Valid values
                            are `count`, `cardinality`, `sum`, `max`, `new_value`,
                            `geo_data`, `event_count`, `none`. Defaults to `"count"`.
                          type: string
                        distinctFields:
                          description: (List of String) Field for which the cardinality
                            is measured. Sent as an array. Field for which the cardinality
                            is measured. Sent as an array.
                          items:
                            type: string
                          type: array
                        groupByFields:
                          description: (List of String) Fields to group by. If empty,
                            each log triggers a signal. Fields to group by.
                          items:
                            type: string
                          type: array
                        metric:
                          description: (String, Deprecated) The target field to aggregate
                            over when using the sum, max, or geo_data aggregations.
                            Deprecated. Configure metrics instead. This attribute
                            will be removed in the next major version of the provider.
                            The target field to aggregate over when using the `sum`,
                            `max`, or `geo_data` aggregations. **Deprecated.** Configure
                            `metrics` instead. This attribute will be removed in the
                            next major version of the provider.
                          type: string
                        metrics:
                          description: (List of String) Group of target fields to
                            aggregate over when using the sum, max, geo_data, or new_value
                            aggregations. The sum, max, and geo_data aggregations
                            only accept one value in this list, whereas the new_value
                            aggregation accepts up to five values. Group of target
                            fields to aggregate over when using the `sum`, `max`,
                            `geo_data`, or `new_value` aggregations. The `sum`, `max`,
                            and `geo_data` aggregations only accept one value in this
                            list, whereas the `new_value` aggregation accepts up to
                            five values.
                          items:
                            type: string
                          type: array
                        name:
                          description: (String) The name of the rule. Name of the
                            query. Not compatible with `new_value` aggregations.
                          type: string
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) Query
                            to run on logs.
                          type: string
                      type: object
                    type: array
                  signalQuery:
                    description: (Block List) Queries for selecting logs which are
                      part of the rule. (see below for nested schema) Queries for
                      selecting logs which are part of the rule.
                    items:
                      properties:
                        aggregation:
                          description: (String) The aggregation type. For Signal Correlation
                            rules, it must be event_count. Valid values are count,
                            cardinality, sum, max, new_value, geo_data, event_count,
                            none. Defaults to "count". The aggregation type. For Signal
                            Correlation rules, it must be event_count. Valid values
                            are `count`, `cardinality`, `sum`, `max`, `new_value`,
                            `geo_data`, `event_count`, `none`. Defaults to `"event_count"`.
                          type: string
                        correlatedByFields:
                          description: (List of String) Fields to correlate by. Fields
                            to correlate by.
                          items:
                            type: string
                          type: array
                        correlatedQueryIndex:
                          description: projected per query attributes of the rule.
                            Defaults to "". Index of the rule query used to retrieve
                            the correlated field. An empty string applies correlation
                            on the non-projected per query attributes of the rule.
                            Defaults to `""`.
                          type: string
                        defaultRuleId:
                          description: ONLY. Default Rule ID of the signal to correlate.
                            This value is READ-ONLY.
                          type: string
                        name:
                          description: (String) The name of the rule. Name of the
                            query. Not compatible with `new_value` aggregations.
                          type: string
                        ruleId:
                          description: (String) Rule ID of the signal to correlate.
                            Rule ID of the signal to correlate.
                          type: string
                      type: object
                    type: array
                  tags:
                    description: (Set of String) Tags for generated signals. Tags
                      for generated signals.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  thirdPartyCase:
                    description: party rules. Only required and accepted for third-party
                      rules (see below for nested schema) Cases for generating signals
                      for third-party rules. Only required and accepted for third-party
                      rules
                    items:
                      properties:
                        name:
                          description: (String) The name of the rule. Name of the
                            case.
                          type: string
                        notifications:
                          description: (List of String) Notification targets for each
                            rule case. Notification targets for each rule case.
                          items:
                            type: string
                          type: array
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) A
                            query to associate a third-party event to this case.
                          type: string
                        status:
                          description: (String) Severity of the Security Signal. Valid
                            values are info, low, medium, high, critical. Severity
                            of the Security Signal. Valid values are `info`, `low`,
                            `medium`, `high`, `critical`.
                          type: string
                      type: object
                    type: array
                  type:
                    description: (String) The rule type. Valid values are application_security,
                      log_detection, workload_security, signal_correlation. Defaults
                      to "log_detection". The rule type. Valid values are `application_security`,
                      `log_detection`, `workload_security`, `signal_correlation`.
                      Defaults to `"log_detection"`.
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  case:
                    description: '(Block List, Max: 10) Cases for generating signals.
                      (see below for nested schema) Cases for generating signals.'
                    items:
                      properties:
                        condition:
                          description: (String) A rule case contains logical operations
                            (>,>=, &&, ||) to determine if a signal should be generated
                            based on the event counts in the previously defined queries.
                            A rule case contains logical operations (`>`,`>=`, `&&`,
                            `||`) to determine if a signal should be generated based
                            on the event counts in the previously defined queries.
                          type: string
                        name:
                          description: (String) The name of the rule. Name of the
                            case.
                          type: string
                        notifications:
                          description: (List of String) Notification targets for each
                            rule case. Notification targets for each rule case.
                          items:
                            type: string
                          type: array
                        status:
                          description: (String) Severity of the Security Signal. Valid
                            values are info, low, medium, high, critical. Severity
                            of the Security Signal. Valid values are `info`, `low`,
                            `medium`, `high`, `critical`.
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: (Boolean) Whether the rule is enabled. Defaults to
                      true. Whether the rule is enabled. Defaults to `true`.
                    type: boolean
                  filter:
                    description: (Block List) Additional queries to filter matched
                      events before they are processed. (see below for nested schema)
                      Additional queries to filter matched events before they are
                      processed.
                    items:
                      properties:
                        action:
                          description: (String) The type of filtering action. Valid
                            values are require, suppress. The type of filtering action.
                            Valid values are `require`, `suppress`.
                          type: string
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) Query
                            for selecting logs to apply the filtering action.
                          type: string
                      type: object
                    type: array
                  hasExtendedTitle:
                    description: by values in their title. Defaults to false. Whether
                      the notifications include the triggering group-by values in
                      their title. Defaults to `false`.
                    type: boolean
                  message:
                    description: (String) Message for generated signals. Message for
                      generated signals.
                    type: string
                  name:
                    description: (String) The name of the rule. The name of the rule.
                    type: string
                  options:
                    description: '(Block List, Max: 1) Options on rules. (see below
                      for nested schema) Options on rules.'
                    items:
                      properties:
                        decreaseCriticalityBasedOnEnv:
                          description: production environments have a lower severity
                            than what is defined by the rule case, which can reduce
                            noise. The decrement is applied when the environment tag
                            of the signal starts with staging, test, or dev. Only
                            available when the rule type is log_detection. Defaults
                            to false. If true, signals in non-production environments
                            have a lower severity than what is defined by the rule
                            case, which can reduce noise. The decrement is applied
                            when the environment tag of the signal starts with `staging`,
                            `test`, or `dev`. Only available when the rule type is
                            `log_detection`. Defaults to `false`.
                          type: boolean
                        detectionMethod:
                          description: (String) The detection method. Valid values
                            are threshold, new_value, anomaly_detection, impossible_travel,
                            hardcoded, third_party. Defaults to "threshold". The detection
                            method. Valid values are `threshold`, `new_value`, `anomaly_detection`,
                            `impossible_travel`, `hardcoded`, `third_party`. Defaults
                            to `"threshold"`.
                          type: string
                        evaluationWindow:
                          description: (Number) A time window is specified to match
                            when at least one of the cases matches true. This is a
                            sliding window and evaluates in real time. Valid values
                            are 0, 60, 300, 600, 900, 1800, 3600, 7200. A time window
                            is specified to match when at least one of the cases matches
                            true. This is a sliding window and evaluates in real time.
                            Valid values are `0`, `60`, `300`, `600`, `900`, `1800`,
                            `3600`, `7200`.
                          type: number
                        impossibleTravelOptions:
                          description: '(Block List, Max: 1) Options for rules using
                            the impossible travel detection method. (see below for
                            nested schema) Options for rules using the impossible
                            travel detection method.'
                          items:
                            properties:
                              baselineUserLocations:
                                description: (Boolean) If true, signals are suppressed
                                  for the first 24 hours. During that time, Datadog
                                  learns the user's regular access locations. This
                                  can be helpful to reduce noise and infer VPN usage
                                  or credentialed API access. Defaults to false. If
                                  true, signals are suppressed for the first 24 hours.
                                  During that time, Datadog learns the user's regular
                                  access locations. This can be helpful to reduce
                                  noise and infer VPN usage or credentialed API access.
                                  Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        keepAlive:
                          description: (Number) Once a signal is generated, the signal
                            will remain “open” if a case is matched at least once
                            within this keep alive window (in seconds). Valid values
                            are 0, 60, 300, 600, 900, 1800, 3600, 7200, 10800, 21600.
                            Once a signal is generated, the signal will remain “open”
                            if a case is matched at least once within this keep alive
                            window (in seconds). Valid values are `0`, `60`, `300`,
                            `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`.
                          type: number
                        maxSignalDuration:
                          description: (Number) A signal will “close” regardless of
                            the query being matched once the time exceeds the maximum
                            duration (in seconds). This time is calculated from the
                            first seen timestamp. Valid values are 0, 60, 300, 600,
                            900, 1800, 3600, 7200, 10800, 21600, 43200, 86400. A signal
                            will “close” regardless of the query being matched once
                            the time exceeds the maximum duration (in seconds). This
                            time is calculated from the first seen timestamp. Valid
                            values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`,
                            `7200`, `10800`, `21600`, `43200`, `86400`.
                          type: number
                        newValueOptions:
                          description: '(Block List, Max: 1) New value rules specific
                            options. (see below for nested schema) New value rules
                            specific options.'
                          items:
                            properties:
                              forgetAfter:
                                description: (Number) The duration in days after which
                                  a learned value is forgotten. Valid values are 1,
                                  2, 7, 14, 21, 28. The duration in days after which
                                  a learned value is forgotten. Valid values are `1`,
                                  `2`, `7`, `14`, `21`, `28`.
                                type: number
                              learningDuration:
                                description: (Number) The duration in days during
                                  which values are learned, and after which signals
                                  will be generated for values that weren't learned.
                                  If set to 0, a signal will be generated for all
                                  new values after the first value is learned. Valid
                                  values are 0, 1, 7. Defaults to 1. The duration
                                  in days during which values are learned, and after
                                  which signals will be generated for values that
                                  weren't learned. If set to 0, a signal will be generated
                                  for all new values after the first value is learned.
                                  Valid values are `0`, `1`, `7`. Defaults to `1`.
                                type: number
                              learningMethod:
                                description: (String) The learning method used to
                                  determine when signals should be generated for values
                                  that weren't learned. Valid values are duration,
                                  threshold. Defaults to "duration". The learning
                                  method used to determine when signals should be
                                  generated for values that weren't learned. Valid
                                  values are `duration`, `threshold`. Defaults to
                                  `"duration"`.
                                type: string
                              learningThreshold:
                                description: (Number) A number of occurrences after
                                  which signals are generated for values that weren't
                                  learned. Valid values are 0, 1. Defaults to 0. A
                                  number of occurrences after which signals are generated
                                  for values that weren't learned. Valid values are
                                  `0`, `1`. Defaults to `0`.
                                type: number
                            type: object
                          type: array
                        thirdPartyRuleOptions:
                          description: party detection method. (see below for nested
                            schema) Options for rules using the third-party detection
                            method.
                          items:
                            properties:
                              defaultNotifications:
                                description: party cases match. Notification targets
                                  for the default rule case, when none of the third-party
                                  cases match.
                                items:
                                  type: string
                                type: array
                              defaultStatus:
                                description: party cases match. Valid values are info,
                                  low, medium, high, critical. Severity of the default
                                  rule case, when none of the third-party cases match.
                                  Valid values are `info`, `low`, `medium`, `high`,
                                  `critical`.
                                type: string
                              rootQuery:
                                description: party case queries. Each of them can
                                  have different group by fields, to aggregate differently
                                  based on the type of alert. (see below for nested
                                  schema) Queries to be combined with third-party
                                  case queries. Each of them can have different group
                                  by fields, to aggregate differently based on the
                                  type of alert.
                                items:
                                  properties:
                                    groupByFields:
                                      description: (List of String) Fields to group
                                        by. If empty, each log triggers a signal.
                                        Fields to group by. If empty, each log triggers
                                        a signal.
                                      items:
                                        type: string
                                      type: array
                                    query:
                                      description: (Block List) Queries for selecting
                                        logs which are part of the rule. (see below
                                        for nested schema) Query to filter logs.
                                      type: string
                                  type: object
                                type: array
                              signalTitleTemplate:
                                description: (String) A template for the signal title;
                                  if omitted, the title is generated based on the
                                  case name. A template for the signal title; if omitted,
                                  the title is generated based on the case name.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  query:
                    description: (Block List) Queries for selecting logs which are
                      part of the rule. (see below for nested schema) Queries for
                      selecting logs which are part of the rule.
                    items:
                      properties:
                        agentRule:
                          description: (Block List, Deprecated) Deprecated. It won't
                            be applied anymore. Deprecated. agent_rule has been deprecated
                            in favor of new Agent Rule resource. (see below for nested
                            schema) **Deprecated**. It won't be applied anymore. **Deprecated.**
                            `agent_rule` has been deprecated in favor of new Agent
                            Rule resource.
                          items:
                            properties:
                              agentRuleId:
                                description: (String) Deprecated. It won't be applied
                                  anymore. **Deprecated**. It won't be applied anymore.
                                type: string
                              expression:
                                description: (String) Deprecated. It won't be applied
                                  anymore. **Deprecated**. It won't be applied anymore.
                                type: string
                            type: object
                          type: array
                        aggregation:
                          description: (String) The aggregation type. For Signal Correlation
                            rules, it must be event_count. Valid values are count,
                            cardinality, sum, max, new_value, geo_data, event_count,
                            none. Defaults to "count". The aggregation type. For Signal
                            Correlation rules, it must be event_count. Valid values
                            are `count`, `cardinality`, `sum`, `max`, `new_value`,
                            `geo_data`, `event_count`, `none`. Defaults to `"count"`.
                          type: string
                        distinctFields:
                          description: (List of String) Field for which the cardinality
                            is measured. Sent as an array. Field for which the cardinality
                            is measured. Sent as an array.
                          items:
                            type: string
                          type: array
                        groupByFields:
                          description: (List of String) Fields to group by. If empty,
                            each log triggers a signal. Fields to group by.
                          items:
                            type: string
                          type: array
                        metric:
                          description: (String, Deprecated) The target field to aggregate
                            over when using the sum, max, or geo_data aggregations.
                            Deprecated. Configure metrics instead. This attribute
                            will be removed in the next major version of the provider.
                            The target field to aggregate over when using the `sum`,
                            `max`, or `geo_data` aggregations. **Deprecated.** Configure
                            `metrics` instead. This attribute will be removed in the
                            next major version of the provider.
                          type: string
                        metrics:
                          description: (List of String) Group of target fields to
                            aggregate over when using the sum, max, geo_data, or new_value
                            aggregations. The sum, max, and geo_data aggregations
                            only accept one value in this list, whereas the new_value
                            aggregation accepts up to five values. Group of target
                            fields to aggregate over when using the `sum`, `max`,
                            `geo_data`, or `new_value` aggregations. The `sum`, `max`,
                            and `geo_data` aggregations only accept one value in this
                            list, whereas the `new_value` aggregation accepts up to
                            five values.
                          items:
                            type: string
                          type: array
                        name:
                          description: (String) The name of the rule. Name of the
                            query. Not compatible with `new_value` aggregations.
                          type: string
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) Query
                            to run on logs.
                          type: string
                      type: object
                    type: array
                  signalQuery:
                    description: (Block List) Queries for selecting logs which are
                      part of the rule. (see below for nested schema) Queries for
                      selecting logs which are part of the rule.
                    items:
                      properties:
                        aggregation:
                          description: (String) The aggregation type. For Signal Correlation
                            rules, it must be event_count. Valid values are count,
                            cardinality, sum, max, new_value, geo_data, event_count,
                            none. Defaults to "count". The aggregation type. For Signal
                            Correlation rules, it must be event_count. Valid values
                            are `count`, `cardinality`, `sum`, `max`, `new_value`,
                            `geo_data`, `event_count`, `none`. Defaults to `"event_count"`.
                          type: string
                        correlatedByFields:
                          description: (List of String) Fields to correlate by. Fields
                            to correlate by.
                          items:
                            type: string
                          type: array
                        correlatedQueryIndex:
                          description: projected per query attributes of the rule.
                            Defaults to "". Index of the rule query used to retrieve
                            the correlated field. An empty string applies correlation
                            on the non-projected per query attributes of the rule.
                            Defaults to `""`.
                          type: string
                        defaultRuleId:
                          description: ONLY. Default Rule ID of the signal to correlate.
                            This value is READ-ONLY.
                          type: string
                        name:
                          description: (String) The name of the rule. Name of the
                            query. Not compatible with `new_value` aggregations.
                          type: string
                        ruleId:
                          description: (String) Rule ID of the signal to correlate.
                            Rule ID of the signal to correlate.
                          type: string
                      type: object
                    type: array
                  tags:
                    description: (Set of String) Tags for generated signals. Tags
                      for generated signals.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  thirdPartyCase:
                    description: party rules. Only required and accepted for third-party
                      rules (see below for nested schema) Cases for generating signals
                      for third-party rules. Only required and accepted for third-party
                      rules
                    items:
                      properties:
                        name:
                          description: (String) The name of the rule. Name of the
                            case.
                          type: string
                        notifications:
                          description: (List of String) Notification targets for each
                            rule case. Notification targets for each rule case.
                          items:
                            type: string
                          type: array
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) A
                            query to associate a third-party event to this case.
                          type: string
                        status:
                          description: (String) Severity of the Security Signal. Valid
                            values are info, low, medium, high, critical. Severity
                            of the Security Signal. Valid values are `info`, `low`,
                            `medium`, `high`, `critical`.
                          type: string
                      type: object
                    type: array
                  type:
                    description: (String) The rule type. Valid values are application_security,
                      log_detection, workload_security, signal_correlation. Defaults
                      to "log_detection". The rule type. Valid values are `application_security`,
                      `log_detection`, `workload_security`, `signal_correlation`.
                      Defaults to `"log_detection"`.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.message is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.message)
                || (has(self.initProvider) && has(self.initProvider.message))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
          status:
            description: RuleStatus defines the observed state of Rule.
            properties:
              atProvider:
                properties:
                  case:
                    description: '(Block List, Max: 10) Cases for generating signals.
                      (see below for nested schema) Cases for generating signals.'
                    items:
                      properties:
                        condition:
                          description: (String) A rule case contains logical operations
                            (>,>=, &&, ||) to determine if a signal should be generated
                            based on the event counts in the previously defined queries.
                            A rule case contains logical operations (`>`,`>=`, `&&`,
                            `||`) to determine if a signal should be generated based
                            on the event counts in the previously defined queries.
                          type: string
                        name:
                          description: (String) The name of the rule. Name of the
                            case.
                          type: string
                        notifications:
                          description: (List of String) Notification targets for each
                            rule case. Notification targets for each rule case.
                          items:
                            type: string
                          type: array
                        status:
                          description: (String) Severity of the Security Signal. Valid
                            values are info, low, medium, high, critical. Severity
                            of the Security Signal. Valid values are `info`, `low`,
                            `medium`, `high`, `critical`.
                          type: string
                      type: object
                    type: array
                  enabled:
                    description: (Boolean) Whether the rule is enabled. Defaults to
                      true. Whether the rule is enabled. Defaults to `true`.
                    type: boolean
                  filter:
                    description: (Block List) Additional queries to filter matched
                      events before they are processed. (see below for nested schema)
                      Additional queries to filter matched events before they are
                      processed.
                    items:
                      properties:
                        action:
                          description: (String) The type of filtering action. Valid
                            values are require, suppress. The type of filtering action.
                            Valid values are `require`, `suppress`.
                          type: string
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) Query
                            for selecting logs to apply the filtering action.
                          type: string
                      type: object
                    type: array
                  hasExtendedTitle:
                    description: by values in their title. Defaults to false. Whether
                      the notifications include the triggering group-by values in
                      their title. Defaults to `false`.
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  message:
                    description: (String) Message for generated signals. Message for
                      generated signals.
                    type: string
                  name:
                    description: (String) The name of the rule. The name of the rule.
                    type: string
                  options:
                    description: '(Block List, Max: 1) Options on rules. (see below
                      for nested schema) Options on rules.'
                    items:
                      properties:
                        decreaseCriticalityBasedOnEnv:
                          description: production environments have a lower severity
                            than what is defined by the rule case, which can reduce
                            noise. The decrement is applied when the environment tag
                            of the signal starts with staging, test, or dev. Only
                            available when the rule type is log_detection. Defaults
                            to false. If true, signals in non-production environments
                            have a lower severity than what is defined by the rule
                            case, which can reduce noise. The decrement is applied
                            when the environment tag of the signal starts with `staging`,
                            `test`, or `dev`. Only available when the rule type is
                            `log_detection`. Defaults to `false`.
                          type: boolean
                        detectionMethod:
                          description: (String) The detection method. Valid values
                            are threshold, new_value, anomaly_detection, impossible_travel,
                            hardcoded, third_party. Defaults to "threshold". The detection
                            method. Valid values are `threshold`, `new_value`, `anomaly_detection`,
                            `impossible_travel`, `hardcoded`, `third_party`. Defaults
                            to `"threshold"`.
                          type: string
                        evaluationWindow:
                          description: (Number) A time window is specified to match
                            when at least one of the cases matches true. This is a
                            sliding window and evaluates in real time. Valid values
                            are 0, 60, 300, 600, 900, 1800, 3600, 7200. A time window
                            is specified to match when at least one of the cases matches
                            true. This is a sliding window and evaluates in real time.
                            Valid values are `0`, `60`, `300`, `600`, `900`, `1800`,
                            `3600`, `7200`.
                          type: number
                        impossibleTravelOptions:
                          description: '(Block List, Max: 1) Options for rules using
                            the impossible travel detection method. (see below for
                            nested schema) Options for rules using the impossible
                            travel detection method.'
                          items:
                            properties:
                              baselineUserLocations:
                                description: (Boolean) If true, signals are suppressed
                                  for the first 24 hours. During that time, Datadog
                                  learns the user's regular access locations. This
                                  can be helpful to reduce noise and infer VPN usage
                                  or credentialed API access. Defaults to false. If
                                  true, signals are suppressed for the first 24 hours.
                                  During that time, Datadog learns the user's regular
                                  access locations. This can be helpful to reduce
                                  noise and infer VPN usage or credentialed API access.
                                  Defaults to `false`.
                                type: boolean
                            type: object
                          type: array
                        keepAlive:
                          description: (Number) Once a signal is generated, the signal
                            will remain “open” if a case is matched at least once
                            within this keep alive window (in seconds). Valid values
                            are 0, 60, 300, 600, 900, 1800, 3600, 7200, 10800, 21600.
                            Once a signal is generated, the signal will remain “open”
                            if a case is matched at least once within this keep alive
                            window (in seconds). Valid values are `0`, `60`, `300`,
                            `600`, `900`, `1800`, `3600`, `7200`, `10800`, `21600`.
                          type: number
                        maxSignalDuration:
                          description: (Number) A signal will “close” regardless of
                            the query being matched once the time exceeds the maximum
                            duration (in seconds). This time is calculated from the
                            first seen timestamp. Valid values are 0, 60, 300, 600,
                            900, 1800, 3600, 7200, 10800, 21600, 43200, 86400. A signal
                            will “close” regardless of the query being matched once
                            the time exceeds the maximum duration (in seconds). This
                            time is calculated from the first seen timestamp. Valid
                            values are `0`, `60`, `300`, `600`, `900`, `1800`, `3600`,
                            `7200`, `10800`, `21600`, `43200`, `86400`.
                          type: number
                        newValueOptions:
                          description: '(Block List, Max: 1) New value rules specific
                            options. (see below for nested schema) New value rules
                            specific options.'
                          items:
                            properties:
                              forgetAfter:
                                description: (Number) The duration in days after which
                                  a learned value is forgotten. Valid values are 1,
                                  2, 7, 14, 21, 28. The duration in days after which
                                  a learned value is forgotten. Valid values are `1`,
                                  `2`, `7`, `14`, `21`, `28`.
                                type: number
                              learningDuration:
                                description: (Number) The duration in days during
                                  which values are learned, and after which signals
                                  will be generated for values that weren't learned.
                                  If set to 0, a signal will be generated for all
                                  new values after the first value is learned. Valid
                                  values are 0, 1, 7. Defaults to 1. The duration
                                  in days during which values are learned, and after
                                  which signals will be generated for values that
                                  weren't learned. If set to 0, a signal will be generated
                                  for all new values after the first value is learned.
                                  Valid values are `0`, `1`, `7`. Defaults to `1`.
                                type: number
                              learningMethod:
                                description: (String) The learning method used to
                                  determine when signals should be generated for values
                                  that weren't learned. Valid values are duration,
                                  threshold. Defaults to "duration". The learning
                                  method used to determine when signals should be
                                  generated for values that weren't learned. Valid
                                  values are `duration`, `threshold`. Defaults to
                                  `"duration"`.
                                type: string
                              learningThreshold:
                                description: (Number) A number of occurrences after
                                  which signals are generated for values that weren't
                                  learned. Valid values are 0, 1. Defaults to 0. A
                                  number of occurrences after which signals are generated
                                  for values that weren't learned. Valid values are
                                  `0`, `1`. Defaults to `0`.
                                type: number
                            type: object
                          type: array
                        thirdPartyRuleOptions:
                          description: party detection method. (see below for nested
                            schema) Options for rules using the third-party detection
                            method.
                          items:
                            properties:
                              defaultNotifications:
                                description: party cases match. Notification targets
                                  for the default rule case, when none of the third-party
                                  cases match.
                                items:
                                  type: string
                                type: array
                              defaultStatus:
                                description: party cases match. Valid values are info,
                                  low, medium, high, critical. Severity of the default
                                  rule case, when none of the third-party cases match.
                                  Valid values are `info`, `low`, `medium`, `high`,
                                  `critical`.
                                type: string
                              rootQuery:
                                description: party case queries. Each of them can
                                  have different group by fields, to aggregate differently
                                  based on the type of alert. (see below for nested
                                  schema) Queries to be combined with third-party
                                  case queries. Each of them can have different group
                                  by fields, to aggregate differently based on the
                                  type of alert.
                                items:
                                  properties:
                                    groupByFields:
                                      description: (List of String) Fields to group
                                        by. If empty, each log triggers a signal.
                                        Fields to group by. If empty, each log triggers
                                        a signal.
                                      items:
                                        type: string
                                      type: array
                                    query:
                                      description: (Block List) Queries for selecting
                                        logs which are part of the rule. (see below
                                        for nested schema) Query to filter logs.
                                      type: string
                                  type: object
                                type: array
                              signalTitleTemplate:
                                description: (String) A template for the signal title;
                                  if omitted, the title is generated based on the
                                  case name. A template for the signal title; if omitted,
                                  the title is generated based on the case name.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  query:
                    description: (Block List) Queries for selecting logs which are
                      part of the rule. (see below for nested schema) Queries for
                      selecting logs which are part of the rule.
                    items:
                      properties:
                        agentRule:
                          description: (Block List, Deprecated) Deprecated. It won't
                            be applied anymore. Deprecated. agent_rule has been deprecated
                            in favor of new Agent Rule resource. (see below for nested
                            schema) **Deprecated**. It won't be applied anymore. **Deprecated.**
                            `agent_rule` has been deprecated in favor of new Agent
                            Rule resource.
                          items:
                            properties:
                              agentRuleId:
                                description: (String) Deprecated. It won't be applied
                                  anymore. **Deprecated**. It won't be applied anymore.
                                type: string
                              expression:
                                description: (String) Deprecated. It won't be applied
                                  anymore. **Deprecated**. It won't be applied anymore.
                                type: string
                            type: object
                          type: array
                        aggregation:
                          description: (String) The aggregation type. For Signal Correlation
                            rules, it must be event_count. Valid values are count,
                            cardinality, sum, max, new_value, geo_data, event_count,
                            none. Defaults to "count". The aggregation type. For Signal
                            Correlation rules, it must be event_count. Valid values
                            are `count`, `cardinality`, `sum`, `max`, `new_value`,
                            `geo_data`, `event_count`, `none`. Defaults to `"count"`.
                          type: string
                        distinctFields:
                          description: (List of String) Field for which the cardinality
                            is measured. Sent as an array. Field for which the cardinality
                            is measured. Sent as an array.
                          items:
                            type: string
                          type: array
                        groupByFields:
                          description: (List of String) Fields to group by. If empty,
                            each log triggers a signal. Fields to group by.
                          items:
                            type: string
                          type: array
                        metric:
                          description: (String, Deprecated) The target field to aggregate
                            over when using the sum, max, or geo_data aggregations.
                            Deprecated. Configure metrics instead. This attribute
                            will be removed in the next major version of the provider.
                            The target field to aggregate over when using the `sum`,
                            `max`, or `geo_data` aggregations. **Deprecated.** Configure
                            `metrics` instead. This attribute will be removed in the
                            next major version of the provider.
                          type: string
                        metrics:
                          description: (List of String) Group of target fields to
                            aggregate over when using the sum, max, geo_data, or new_value
                            aggregations. The sum, max, and geo_data aggregations
                            only accept one value in this list, whereas the new_value
                            aggregation accepts up to five values. Group of target
                            fields to aggregate over when using the `sum`, `max`,
                            `geo_data`, or `new_value` aggregations. The `sum`, `max`,
                            and `geo_data` aggregations only accept one value in this
                            list, whereas the `new_value` aggregation accepts up to
                            five values.
                          items:
                            type: string
                          type: array
                        name:
                          description: (String) The name of the rule. Name of the
                            query. Not compatible with `new_value` aggregations.
                          type: string
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) Query
                            to run on logs.
                          type: string
                      type: object
                    type: array
                  signalQuery:
                    description: (Block List) Queries for selecting logs which are
                      part of the rule. (see below for nested schema) Queries for
                      selecting logs which are part of the rule.
                    items:
                      properties:
                        aggregation:
                          description: (String) The aggregation type. For Signal Correlation
                            rules, it must be event_count. Valid values are count,
                            cardinality, sum, max, new_value, geo_data, event_count,
                            none. Defaults to "count". The aggregation type. For Signal
                            Correlation rules, it must be event_count. Valid values
                            are `count`, `cardinality`, `sum`, `max`, `new_value`,
                            `geo_data`, `event_count`, `none`. Defaults to `"event_count"`.
                          type: string
                        correlatedByFields:
                          description: (List of String) Fields to correlate by. Fields
                            to correlate by.
                          items:
                            type: string
                          type: array
                        correlatedQueryIndex:
                          description: projected per query attributes of the rule.
                            Defaults to "". Index of the rule query used to retrieve
                            the correlated field. An empty string applies correlation
                            on the non-projected per query attributes of the rule.
                            Defaults to `""`.
                          type: string
                        defaultRuleId:
                          description: ONLY. Default Rule ID of the signal to correlate.
                            This value is READ-ONLY.
                          type: string
                        name:
                          description: (String) The name of the rule. Name of the
                            query. Not compatible with `new_value` aggregations.
                          type: string
                        ruleId:
                          description: (String) Rule ID of the signal to correlate.
                            Rule ID of the signal to correlate.
                          type: string
                      type: object
                    type: array
                  tags:
                    description: (Set of String) Tags for generated signals. Tags
                      for generated signals.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  thirdPartyCase:
                    description: party rules. Only required and accepted for third-party
                      rules (see below for nested schema) Cases for generating signals
                      for third-party rules. Only required and accepted for third-party
                      rules
                    items:
                      properties:
                        name:
                          description: (String) The name of the rule. Name of the
                            case.
                          type: string
                        notifications:
                          description: (List of String) Notification targets for each
                            rule case. Notification targets for each rule case.
                          items:
                            type: string
                          type: array
                        query:
                          description: (Block List) Queries for selecting logs which
                            are part of the rule. (see below for nested schema) A
                            query to associate a third-party event to this case.
                          type: string
                        status:
                          description: (String) Severity of the Security Signal. Valid
                            values are info, low, medium, high, critical. Severity
                            of the Security Signal. Valid values are `info`, `low`,
                            `medium`, `high`, `critical`.
                          type: string
                      type: object
                    type: array
                  type:
                    description: (String) The rule type. Valid values are application_security,
                      log_detection, workload_security, signal_correlation. Defaults
                      to "log_detection". The rule type. Valid values are `application_security`,
                      `log_detection`, `workload_security`, `signal_correlation`.
                      Defaults to `"log_detection"`.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

