---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: connectclusterclasses.core.cpc.platform.confluent.io
spec:
  group: core.cpc.platform.confluent.io
  names:
    categories:
    - all
    - confluent
    - cpc
    - cpccore
    - cpcclass
    kind: ConnectClusterClass
    listKind: ConnectClusterClassList
    plural: connectclusterclasses
    shortNames:
    - ccc
    - connectclusterclass
    singular: connectclusterclass
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ConnectClusterClass is the Schema for the connectclusterclasses
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ConnectClusterClassSpec defines the desired state of ConnectClusterClass
            properties:
              provisioner:
                description: provisioner defines how Connect clusters should be provisioned
                properties:
                  ccloudRef:
                    description: ccloudRef refers to the ConfluentCloudSet CR that
                      is used to get client configurations to a cluster in confluent
                      cloud
                    properties:
                      name:
                        description: Name is the name of the referenced CR
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      namespace:
                        description: Namespace of the CR. Defaults to the current
                          namespace of the CR making the reference
                        maxLength: 255
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  cfk:
                    description: cfk refers to a CFK managed and deployed connect
                      cluster
                    properties:
                      configOverrides:
                        description: configOverrides specifies configs to override
                          the server/JVM/log4j/peer properties for the Zookeeper cluster.
                          A change to this property will roll the cluster.
                        properties:
                          jvm:
                            description: jvm is a list of JVM configuration supported
                              by the Confluent Platform component. This will either
                              add or update the existing configuration.
                            items:
                              type: string
                            type: array
                          log4j:
                            description: log4j is a list of Log4J configuration supported
                              by the Confluent Platform component. This will either
                              add or update the existing configuration.
                            items:
                              type: string
                            type: array
                          server:
                            description: server is a list of server configuration
                              supported by the Confluent Platform component. This
                              will either add or update existing configuration.
                            items:
                              type: string
                            type: array
                        type: object
                      connectConverter:
                        description: connectConverter supports configuring a particular
                          data format when writing to or reading from Kafka cluster.
                        properties:
                          key:
                            description: key specifies the supported key converters
                              package for the Confluent Platform. For the supported
                              converter types, see https://docs.confluent.io/current/connect/concepts.html#connect-converters.
                              The default value is `org.apache.kafka.connect.json.JsonConverter`.
                            minLength: 1
                            type: string
                          value:
                            description: value specifies the supported value converters
                              package for the Confluent Platform. For the supported
                              converter types, see https://docs.confluent.io/current/connect/concepts.html#connect-converters.
                              The default value is `org.apache.kafka.connect.json.JsonConverter`.
                            minLength: 1
                            type: string
                        type: object
                      connectorOverridePolicy:
                        description: 'connectorOverridePolicy allows the policy to
                          permit per-connector override configuration for producer/consumer/admin
                          prefix. More info: https://docs.confluent.io/platform/current/connect/security.html#separate-principals'
                        enum:
                        - All
                        - Principal
                        type: string
                      connectorPlugins:
                        description: connectorPlugins specifies the connector plugins
                          allowed to be installed in its connect clusters.
                        properties:
                          confluentHubPlugins:
                            description: confluentHubPlugins specifies the list connector
                              plugins from Confluent Hub.
                            items:
                              description: ConfluentHubPlugin contains the required
                                information to get the connector plugin from Confluent
                                Hub.
                              properties:
                                name:
                                  description: name specifies the name of the connector
                                    plugin.
                                  minLength: 1
                                  type: string
                                owner:
                                  description: owner specifies the individual or organization
                                    that provides the connector plugin, for example,
                                    `confluentinc`.
                                  minLength: 1
                                  type: string
                                version:
                                  description: version specifies the version of the
                                    connector plugin, which can be either the version
                                    of the plugin or the literal `latest`.
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - owner
                              - version
                              type: object
                            type: array
                          storageLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: storageLimit specifies the max amount of
                              node volume that can be used to store connector plugins.
                              The default value is `4G`.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          urlPlugins:
                            description: urlPlugins specifies the list of connector
                              plugins from external URLs.
                            items:
                              description: URLPlugin defines the information to get
                                the connector plugin from an external URL.
                              properties:
                                archivePath:
                                  description: archivePath specifies the archive path
                                    of the connector plugin. Currently, only support
                                    ZIP archives.
                                  minLength: 1
                                  pattern: ^https?://.*
                                  type: string
                                checksum:
                                  description: checksum defines the sha512sum checksum
                                    of the connector plugin's remote file. It is used
                                    to verify the remote file after it is downloaded.
                                  type: string
                                name:
                                  description: name specifies the connector plugin
                                    name.
                                  minLength: 1
                                  type: string
                              required:
                              - archivePath
                              - checksum
                              - name
                              type: object
                            type: array
                        type: object
                      enableSchemas:
                        default: true
                        description: enableSchemas indicates whether to enable scheme
                          or not.
                        type: boolean
                      image:
                        description: image defines the image to use for zookeeper
                          clusters.
                        properties:
                          application:
                            description: application defines the image to use for
                              the cluster application image. If not configured, we
                              will assume the tag to be the version in the ConfluentPlatformBlueprint
                              and registry to be docker.io.
                            properties:
                              registry:
                                description: registry is the registry where the image
                                  is hosted. Required only if we have more than one
                                  registry configured in ConfluentPlatformBlueprint
                                  API
                                minLength: 1
                                type: string
                              repository:
                                description: repository is the repository of where
                                  the image is hosted. If not configured, it will
                                  come from in ConfluentPlatformBlueprint API resource
                                minLength: 1
                                type: string
                              tag:
                                description: tag is the tag of the image. If not configured,
                                  it will come from in ConfluentPlatformBlueprint
                                  API resource
                                minLength: 1
                                type: string
                            type: object
                          init:
                            description: init defines the image to use for the cluster
                              init container. If not configured, we will assume the
                              tag to be the latest init container image and registry
                              to be to be docker.io.
                            properties:
                              registry:
                                description: registry is the registry where the image
                                  is hosted. Required only if we have more than one
                                  registry configured in ConfluentPlatformBlueprint
                                  API
                                minLength: 1
                                type: string
                              repository:
                                description: repository is the repository of where
                                  the image is hosted. If not configured, it will
                                  come from in ConfluentPlatformBlueprint API resource
                                minLength: 1
                                type: string
                              tag:
                                description: tag is the tag of the image. If not configured,
                                  it will come from in ConfluentPlatformBlueprint
                                  API resource
                                minLength: 1
                                type: string
                            type: object
                        type: object
                      internalTopicReplicationFactor:
                        default: 3
                        description: internalTopicReplicationFactor represents the
                          replication factor for connect internal topics. The minimum
                          is 1.
                        format: int32
                        minimum: 1
                        type: integer
                      k8s:
                        description: k8s defines configurations for CFK created internal
                          k8s objects
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: annotations is the annotations to inject
                              on CFK created k8s resources.
                            type: object
                            x-kubernetes-map-type: granular
                          headlessService:
                            description: headlessService defines configurations for
                              CFK created headless services.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: annotations is a map of string key and
                                  value pairs. It specifies the annotations to be
                                  added to the CFK-created headless service. These
                                  annotations are merged with the injectAnnotations
                                  and take precedence.
                                type: object
                                x-kubernetes-map-type: granular
                              labels:
                                additionalProperties:
                                  type: string
                                description: labels is a map of string key and value
                                  pairs. It specifies the labels to be added to the
                                  CFK-created headless service. These labels are merged
                                  with the injectLabels and take precedence.
                                type: object
                                x-kubernetes-map-type: granular
                              publishNotReadyAddresses:
                                description: publishNotReadyAddresses specifies the
                                  publishNotReadyAddresses field. For Kafka, this
                                  value must be true. The default value is true.
                                type: boolean
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: labels is the labels to inject on CFK created
                              k8s resources.
                            type: object
                            x-kubernetes-map-type: granular
                          oneReplicaPerNode:
                            description: oneReplicaPerNode controls whether to run
                              1 pod per node using the pod anti-affinity capability.
                              Enabling this configuration in an existing cluster will
                              roll the cluster.
                            type: boolean
                          podTemplate:
                            description: podTemplate specifies the statefulset pod
                              template configuration.
                            properties:
                              affinity:
                                description: 'affinity specifies a group of affinity
                                  scheduling rules. More info: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity.'
                                properties:
                                  nodeAffinity:
                                    description: Describes node affinity scheduling
                                      rules for the pod.
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node matches the corresponding matchExpressions;
                                          the node(s) with the highest sum are the
                                          most preferred.
                                        items:
                                          description: An empty preferred scheduling
                                            term matches all objects with implicit
                                            weight 0 (i.e. it's a no-op). A null preferred
                                            scheduling term matches no objects (i.e.
                                            is also a no-op).
                                          properties:
                                            preference:
                                              description: A node selector term, associated
                                                with the corresponding weight.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            weight:
                                              description: Weight associated with
                                                matching the corresponding nodeSelectorTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - preference
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to an update),
                                          the system may or may not try to eventually
                                          evict the pod from its node.
                                        properties:
                                          nodeSelectorTerms:
                                            description: Required. A list of node
                                              selector terms. The terms are ORed.
                                            items:
                                              description: A null or empty node selector
                                                term matches no objects. The requirements
                                                of them are ANDed. The TopologySelectorTerm
                                                type implements a subset of the NodeSelectorTerm.
                                              properties:
                                                matchExpressions:
                                                  description: A list of node selector
                                                    requirements by node's labels.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchFields:
                                                  description: A list of node selector
                                                    requirements by node's fields.
                                                  items:
                                                    description: A node selector requirement
                                                      is a selector that contains
                                                      values, a key, and an operator
                                                      that relates the key and values.
                                                    properties:
                                                      key:
                                                        description: The label key
                                                          that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: Represents a
                                                          key's relationship to a
                                                          set of values. Valid operators
                                                          are In, NotIn, Exists, DoesNotExist.
                                                          Gt, and Lt.
                                                        type: string
                                                      values:
                                                        description: An array of string
                                                          values. If the operator
                                                          is In or NotIn, the values
                                                          array must be non-empty.
                                                          If the operator is Exists
                                                          or DoesNotExist, the values
                                                          array must be empty. If
                                                          the operator is Gt or Lt,
                                                          the values array must have
                                                          a single element, which
                                                          will be interpreted as an
                                                          integer. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            type: array
                                        required:
                                        - nodeSelectorTerms
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  podAffinity:
                                    description: Describes pod affinity scheduling
                                      rules (e.g. co-locate this pod in the same node,
                                      zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          affinity expressions specified by this field,
                                          but it may choose a node that violates one
                                          or more of the expressions. The node that
                                          is most preferred is the one with the greatest
                                          sum of weights, i.e. for each node that
                                          meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          affinity expressions, etc.), compute a sum
                                          by iterating through the elements of this
                                          field and adding "weight" to the sum if
                                          the node has pods which matches the corresponding
                                          podAffinityTerm; the node(s) with the highest
                                          sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the affinity requirements specified
                                          by this field cease to be met at some point
                                          during pod execution (e.g. due to a pod
                                          label update), the system may or may not
                                          try to eventually evict the pod from its
                                          node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                  podAntiAffinity:
                                    description: Describes pod anti-affinity scheduling
                                      rules (e.g. avoid putting this pod in the same
                                      node, zone, etc. as some other pod(s)).
                                    properties:
                                      preferredDuringSchedulingIgnoredDuringExecution:
                                        description: The scheduler will prefer to
                                          schedule pods to nodes that satisfy the
                                          anti-affinity expressions specified by this
                                          field, but it may choose a node that violates
                                          one or more of the expressions. The node
                                          that is most preferred is the one with the
                                          greatest sum of weights, i.e. for each node
                                          that meets all of the scheduling requirements
                                          (resource request, requiredDuringScheduling
                                          anti-affinity expressions, etc.), compute
                                          a sum by iterating through the elements
                                          of this field and adding "weight" to the
                                          sum if the node has pods which matches the
                                          corresponding podAffinityTerm; the node(s)
                                          with the highest sum are the most preferred.
                                        items:
                                          description: The weights of all of the matched
                                            WeightedPodAffinityTerm fields are added
                                            per-node to find the most preferred node(s)
                                          properties:
                                            podAffinityTerm:
                                              description: Required. A pod affinity
                                                term, associated with the corresponding
                                                weight.
                                              properties:
                                                labelSelector:
                                                  description: A label query over
                                                    a set of resources, in this case
                                                    pods.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaceSelector:
                                                  description: A label query over
                                                    the set of namespaces that the
                                                    term applies to. The term is applied
                                                    to the union of the namespaces
                                                    selected by this field and the
                                                    ones listed in the namespaces
                                                    field. null selector and null
                                                    or empty namespaces list means
                                                    "this pod's namespace". An empty
                                                    selector ({}) matches all namespaces.
                                                  properties:
                                                    matchExpressions:
                                                      description: matchExpressions
                                                        is a list of label selector
                                                        requirements. The requirements
                                                        are ANDed.
                                                      items:
                                                        description: A label selector
                                                          requirement is a selector
                                                          that contains values, a
                                                          key, and an operator that
                                                          relates the key and values.
                                                        properties:
                                                          key:
                                                            description: key is the
                                                              label key that the selector
                                                              applies to.
                                                            type: string
                                                          operator:
                                                            description: operator
                                                              represents a key's relationship
                                                              to a set of values.
                                                              Valid operators are
                                                              In, NotIn, Exists and
                                                              DoesNotExist.
                                                            type: string
                                                          values:
                                                            description: values is
                                                              an array of string values.
                                                              If the operator is In
                                                              or NotIn, the values
                                                              array must be non-empty.
                                                              If the operator is Exists
                                                              or DoesNotExist, the
                                                              values array must be
                                                              empty. This array is
                                                              replaced during a strategic
                                                              merge patch.
                                                            items:
                                                              type: string
                                                            type: array
                                                        required:
                                                        - key
                                                        - operator
                                                        type: object
                                                      type: array
                                                    matchLabels:
                                                      additionalProperties:
                                                        type: string
                                                      description: matchLabels is
                                                        a map of {key,value} pairs.
                                                        A single {key,value} in the
                                                        matchLabels map is equivalent
                                                        to an element of matchExpressions,
                                                        whose key field is "key",
                                                        the operator is "In", and
                                                        the values array contains
                                                        only "value". The requirements
                                                        are ANDed.
                                                      type: object
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                namespaces:
                                                  description: namespaces specifies
                                                    a static list of namespace names
                                                    that the term applies to. The
                                                    term is applied to the union of
                                                    the namespaces listed in this
                                                    field and the ones selected by
                                                    namespaceSelector. null or empty
                                                    namespaces list and null namespaceSelector
                                                    means "this pod's namespace".
                                                  items:
                                                    type: string
                                                  type: array
                                                topologyKey:
                                                  description: This pod should be
                                                    co-located (affinity) or not co-located
                                                    (anti-affinity) with the pods
                                                    matching the labelSelector in
                                                    the specified namespaces, where
                                                    co-located is defined as running
                                                    on a node whose value of the label
                                                    with key topologyKey matches that
                                                    of any node on which any of the
                                                    selected pods is running. Empty
                                                    topologyKey is not allowed.
                                                  type: string
                                              required:
                                              - topologyKey
                                              type: object
                                            weight:
                                              description: weight associated with
                                                matching the corresponding podAffinityTerm,
                                                in the range 1-100.
                                              format: int32
                                              type: integer
                                          required:
                                          - podAffinityTerm
                                          - weight
                                          type: object
                                        type: array
                                      requiredDuringSchedulingIgnoredDuringExecution:
                                        description: If the anti-affinity requirements
                                          specified by this field are not met at scheduling
                                          time, the pod will not be scheduled onto
                                          the node. If the anti-affinity requirements
                                          specified by this field cease to be met
                                          at some point during pod execution (e.g.
                                          due to a pod label update), the system may
                                          or may not try to eventually evict the pod
                                          from its node. When there are multiple elements,
                                          the lists of nodes corresponding to each
                                          podAffinityTerm are intersected, i.e. all
                                          terms must be satisfied.
                                        items:
                                          description: Defines a set of pods (namely
                                            those matching the labelSelector relative
                                            to the given namespace(s)) that this pod
                                            should be co-located (affinity) or not
                                            co-located (anti-affinity) with, where
                                            co-located is defined as running on a
                                            node whose value of the label with key
                                            <topologyKey> matches that of any node
                                            on which a pod of the set of pods is running
                                          properties:
                                            labelSelector:
                                              description: A label query over a set
                                                of resources, in this case pods.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaceSelector:
                                              description: A label query over the
                                                set of namespaces that the term applies
                                                to. The term is applied to the union
                                                of the namespaces selected by this
                                                field and the ones listed in the namespaces
                                                field. null selector and null or empty
                                                namespaces list means "this pod's
                                                namespace". An empty selector ({})
                                                matches all namespaces.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            namespaces:
                                              description: namespaces specifies a
                                                static list of namespace names that
                                                the term applies to. The term is applied
                                                to the union of the namespaces listed
                                                in this field and the ones selected
                                                by namespaceSelector. null or empty
                                                namespaces list and null namespaceSelector
                                                means "this pod's namespace".
                                              items:
                                                type: string
                                              type: array
                                            topologyKey:
                                              description: This pod should be co-located
                                                (affinity) or not co-located (anti-affinity)
                                                with the pods matching the labelSelector
                                                in the specified namespaces, where
                                                co-located is defined as running on
                                                a node whose value of the label with
                                                key topologyKey matches that of any
                                                node on which any of the selected
                                                pods is running. Empty topologyKey
                                                is not allowed.
                                              type: string
                                          required:
                                          - topologyKey
                                          type: object
                                        type: array
                                    type: object
                                type: object
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'annotations is a map of string key and
                                  value pairs stored with the resource and may be
                                  set by external tools to store and retrieve arbitrary
                                  metadata. They are not queryable and should be preserved
                                  when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations.'
                                type: object
                                x-kubernetes-map-type: granular
                              envVars:
                                description: 'envVars contain environment variables
                                  to be injected into containers. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container.'
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: 'Variable references $(VAR_NAME)
                                        are expanded using the previously defined
                                        environment variables in the container and
                                        any service environment variables. If a variable
                                        cannot be resolved, the reference in the input
                                        string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the
                                        $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                                        produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded,
                                        regardless of whether the variable exists
                                        or not. Defaults to "".'
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        fieldRef:
                                          description: 'Selects a field of the pod:
                                            supports metadata.name, metadata.namespace,
                                            `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                            spec.nodeName, spec.serviceAccountName,
                                            status.hostIP, status.podIP, status.podIPs.'
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        resourceFieldRef:
                                          description: 'Selects a resource of the
                                            container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage,
                                            requests.cpu, requests.memory and requests.ephemeral-storage)
                                            are currently supported.'
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: 'Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                TODO: Add other useful fields. apiVersion,
                                                kind, uid?'
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'labels is a map of string key and value
                                  pairs that can be used to organize and categorize
                                  (scope and select) objects. More info: http://kubernetes.io/docs/user-guide/labels.'
                                type: object
                                x-kubernetes-map-type: granular
                              podSecurityContext:
                                description: PodSecurityContext holds pod-level security
                                  attributes and common container settings. Some fields
                                  are also present in container.securityContext.  Field
                                  values of container.securityContext take precedence
                                  over field values of PodSecurityContext.
                                properties:
                                  fsGroup:
                                    description: "A special supplemental group that
                                      applies to all containers in a pod. Some volume
                                      types allow the Kubelet to change the ownership
                                      of that volume to be owned by the pod: \n 1.
                                      The owning GID will be the FSGroup 2. The setgid
                                      bit is set (new files created in the volume
                                      will be owned by FSGroup) 3. The permission
                                      bits are OR'd with rw-rw---- \n If unset, the
                                      Kubelet will not modify the ownership and permissions
                                      of any volume. Note that this field cannot be
                                      set when spec.os.name is windows."
                                    format: int64
                                    type: integer
                                  fsGroupChangePolicy:
                                    description: 'fsGroupChangePolicy defines behavior
                                      of changing ownership and permission of the
                                      volume before being exposed inside Pod. This
                                      field will only apply to volume types which
                                      support fsGroup based ownership(and permissions).
                                      It will have no effect on ephemeral volume types
                                      such as: secret, configmaps and emptydir. Valid
                                      values are "OnRootMismatch" and "Always". If
                                      not specified, "Always" is used. Note that this
                                      field cannot be set when spec.os.name is windows.'
                                    type: string
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in SecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in SecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence for that
                                      container. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to all containers. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in SecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence for that container. Note that this
                                      field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by the
                                      containers in this pod. Note that this field
                                      cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  supplementalGroups:
                                    description: A list of groups applied to the first
                                      process run in each container, in addition to
                                      the container's primary GID.  If unspecified,
                                      no groups will be added to any container. Note
                                      that this field cannot be set when spec.os.name
                                      is windows.
                                    items:
                                      format: int64
                                      type: integer
                                    type: array
                                  sysctls:
                                    description: Sysctls hold a list of namespaced
                                      sysctls used for the pod. Pods with unsupported
                                      sysctls (by the container runtime) might fail
                                      to launch. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    items:
                                      description: Sysctl defines a kernel parameter
                                        to be set
                                      properties:
                                        name:
                                          description: Name of a property to set
                                          type: string
                                        value:
                                          description: Value of a property to set
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      within a container's SecurityContext will be
                                      used. If set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              priorityClassName:
                                description: priorityClassName specifies the priority
                                  class for the pod (if any).
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              probe:
                                description: probe contains the fields for standard
                                  Kubernetes readiness/liveness probe configuration.
                                properties:
                                  liveness:
                                    description: liveness configures the Kubernetes
                                      probe settings. The changes will override the
                                      existing default configuration.
                                    properties:
                                      failureThreshold:
                                        description: failureThreshold is the minimum
                                          consecutive failures for the probe to be
                                          considered failed. Confluent Platform components
                                          come with the right configuration, and this
                                          setting is not required to change most of
                                          the time.
                                        format: int32
                                        type: integer
                                      initialDelaySeconds:
                                        description: initialDelaySeconds is the number
                                          of seconds after the container has started
                                          and before probes are initiated. Confluent
                                          Platform components come with the right
                                          configuration, and this setting is not required
                                          to change most of the time.
                                        format: int32
                                        type: integer
                                      periodSeconds:
                                        description: periodSeconds specifies how often
                                          to perform the probe. Confluent Platform
                                          components come with the right configuration,
                                          and this setting is not required to change
                                          most of the time.
                                        format: int32
                                        type: integer
                                      successThreshold:
                                        description: successThreshold is the minimum
                                          consecutive successes for the probe to be
                                          considered successful after having failed.
                                          The default values is `1`. Must be `1` for
                                          liveness and startup. The minimum value
                                          is `1`.
                                        format: int32
                                        type: integer
                                      timeoutSeconds:
                                        description: timeoutSeconds is the number
                                          of seconds after which the probe times out.
                                          Confluent Platform components come with
                                          the right configuration, and this setting
                                          is not required to change most of the time.
                                        format: int32
                                        type: integer
                                    type: object
                                  readiness:
                                    description: readiness configures the Kubernetes
                                      probe setting. The changes will override the
                                      existing default configuration.
                                    properties:
                                      failureThreshold:
                                        description: failureThreshold is the minimum
                                          consecutive failures for the probe to be
                                          considered failed. Confluent Platform components
                                          come with the right configuration, and this
                                          setting is not required to change most of
                                          the time.
                                        format: int32
                                        type: integer
                                      initialDelaySeconds:
                                        description: initialDelaySeconds is the number
                                          of seconds after the container has started
                                          and before probes are initiated. Confluent
                                          Platform components come with the right
                                          configuration, and this setting is not required
                                          to change most of the time.
                                        format: int32
                                        type: integer
                                      periodSeconds:
                                        description: periodSeconds specifies how often
                                          to perform the probe. Confluent Platform
                                          components come with the right configuration,
                                          and this setting is not required to change
                                          most of the time.
                                        format: int32
                                        type: integer
                                      successThreshold:
                                        description: successThreshold is the minimum
                                          consecutive successes for the probe to be
                                          considered successful after having failed.
                                          The default values is `1`. Must be `1` for
                                          liveness and startup. The minimum value
                                          is `1`.
                                        format: int32
                                        type: integer
                                      timeoutSeconds:
                                        description: timeoutSeconds is the number
                                          of seconds after which the probe times out.
                                          Confluent Platform components come with
                                          the right configuration, and this setting
                                          is not required to change most of the time.
                                        format: int32
                                        type: integer
                                    type: object
                                type: object
                              resources:
                                description: resources describe the compute resource
                                  requirements.
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Limits describes the maximum amount
                                      of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is
                                      omitted for a container, it defaults to Limits
                                      if that is explicitly specified, otherwise to
                                      an implementation-defined value. More info:
                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                    type: object
                                type: object
                              securityContext:
                                description: SecurityContext holds security configuration
                                  that will be applied to a container. Some fields
                                  are present in both SecurityContext and PodSecurityContext.  When
                                  both are set, the values in SecurityContext take
                                  precedence.
                                properties:
                                  allowPrivilegeEscalation:
                                    description: 'AllowPrivilegeEscalation controls
                                      whether a process can gain more privileges than
                                      its parent process. This bool directly controls
                                      if the no_new_privs flag will be set on the
                                      container process. AllowPrivilegeEscalation
                                      is true always when the container is: 1) run
                                      as Privileged 2) has CAP_SYS_ADMIN Note that
                                      this field cannot be set when spec.os.name is
                                      windows.'
                                    type: boolean
                                  capabilities:
                                    description: The capabilities to add/drop when
                                      running containers. Defaults to the default
                                      set of capabilities granted by the container
                                      runtime. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: Run container in privileged mode.
                                      Processes in privileged containers are essentially
                                      equivalent to root on the host. Defaults to
                                      false. Note that this field cannot be set when
                                      spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: procMount denotes the type of proc
                                      mount to use for the containers. The default
                                      is DefaultProcMount which uses the container
                                      runtime defaults for readonly paths and masked
                                      paths. This requires the ProcMountType feature
                                      flag to be enabled. Note that this field cannot
                                      be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: Whether this container has a read-only
                                      root filesystem. Default is false. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    type: boolean
                                  runAsGroup:
                                    description: The GID to run the entrypoint of
                                      the container process. Uses runtime default
                                      if unset. May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: Indicates that the container must
                                      run as a non-root user. If true, the Kubelet
                                      will validate the image at runtime to ensure
                                      that it does not run as UID 0 (root) and fail
                                      to start the container if it does. If unset
                                      or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set
                                      in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence.
                                    type: boolean
                                  runAsUser:
                                    description: The UID to run the entrypoint of
                                      the container process. Defaults to user specified
                                      in image metadata if unspecified. May also be
                                      set in PodSecurityContext.  If set in both SecurityContext
                                      and PodSecurityContext, the value specified
                                      in SecurityContext takes precedence. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: The SELinux context to be applied
                                      to the container. If unspecified, the container
                                      runtime will allocate a random SELinux context
                                      for each container.  May also be set in PodSecurityContext.  If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: The seccomp options to use by this
                                      container. If seccomp options are provided at
                                      both the pod & container level, the container
                                      options override the pod options. Note that
                                      this field cannot be set when spec.os.name is
                                      windows.
                                    properties:
                                      localhostProfile:
                                        description: localhostProfile indicates a
                                          profile defined in a file on the node should
                                          be used. The profile must be preconfigured
                                          on the node to work. Must be a descending
                                          path, relative to the kubelet's configured
                                          seccomp profile location. Must only be set
                                          if type is "Localhost".
                                        type: string
                                      type:
                                        description: "type indicates which kind of
                                          seccomp profile will be applied. Valid options
                                          are: \n Localhost - a profile defined in
                                          a file on the node should be used. RuntimeDefault
                                          - the container runtime default profile
                                          should be used. Unconfined - no profile
                                          should be applied."
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: The Windows specific settings applied
                                      to all containers. If unspecified, the options
                                      from the PodSecurityContext will be used. If
                                      set in both SecurityContext and PodSecurityContext,
                                      the value specified in SecurityContext takes
                                      precedence. Note that this field cannot be set
                                      when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: GMSACredentialSpec is where the
                                          GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                          inlines the contents of the GMSA credential
                                          spec named by the GMSACredentialSpecName
                                          field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: HostProcess determines if a container
                                          should be run as a 'Host Process' container.
                                          This field is alpha-level and will only
                                          be honored by components that enable the
                                          WindowsHostProcessContainers feature flag.
                                          Setting this field without the feature flag
                                          will result in errors when validating the
                                          Pod. All of a Pod's containers must have
                                          the same effective HostProcess value (it
                                          is not allowed to have a mix of HostProcess
                                          containers and non-HostProcess containers).  In
                                          addition, if HostProcess is true then HostNetwork
                                          must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: The UserName in Windows to run
                                          the entrypoint of the container process.
                                          Defaults to the user specified in image
                                          metadata if unspecified. May also be set
                                          in PodSecurityContext. If set in both SecurityContext
                                          and PodSecurityContext, the value specified
                                          in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                              serviceAccountName:
                                description: 'ServiceAccountName is the name of the
                                  service account used to run this pod. More info:
                                  https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account.'
                                type: string
                              terminationGracePeriodSeconds:
                                description: terminationGracePeriodSeconds is the
                                  grace period before the pod is deleted.
                                format: int64
                                type: integer
                              tolerations:
                                description: tolerations specify the pods to schedule
                                  onto the nodes with matching taints, using the triple
                                  `<key,value,effect>` and the matching operator `<operator>`.
                                items:
                                  description: The pod this Toleration is attached
                                    to tolerates any taint that matches the triple
                                    <key,value,effect> using the matching operator
                                    <operator>.
                                  properties:
                                    effect:
                                      description: Effect indicates the taint effect
                                        to match. Empty means match all taint effects.
                                        When specified, allowed values are NoSchedule,
                                        PreferNoSchedule and NoExecute.
                                      type: string
                                    key:
                                      description: Key is the taint key that the toleration
                                        applies to. Empty means match all taint keys.
                                        If the key is empty, operator must be Exists;
                                        this combination means to match all values
                                        and all keys.
                                      type: string
                                    operator:
                                      description: Operator represents a key's relationship
                                        to the value. Valid operators are Exists and
                                        Equal. Defaults to Equal. Exists is equivalent
                                        to wildcard for value, so that a pod can tolerate
                                        all taints of a particular category.
                                      type: string
                                    tolerationSeconds:
                                      description: TolerationSeconds represents the
                                        period of time the toleration (which must
                                        be of effect NoExecute, otherwise this field
                                        is ignored) tolerates the taint. By default,
                                        it is not set, which means tolerate the taint
                                        forever (do not evict). Zero and negative
                                        values will be treated as 0 (evict immediately)
                                        by the system.
                                      format: int64
                                      type: integer
                                    value:
                                      description: Value is the taint value the toleration
                                        matches to. If the operator is Exists, the
                                        value should be empty, otherwise just a regular
                                        string.
                                      type: string
                                  type: object
                                type: array
                              topologySpreadConstraints:
                                description: topologySpreadConstraints describe how
                                  a group of pods ought to spread across topology
                                  domains. Scheduler will schedule pods based on the
                                  constraints. All topologySpreadConstraints are ANDed.
                                items:
                                  description: TopologySpreadConstraint specifies
                                    how to spread matching pods among the given topology.
                                  properties:
                                    labelSelector:
                                      description: LabelSelector is used to find matching
                                        pods. Pods that match this label selector
                                        are counted to determine the number of pods
                                        in their corresponding topology domain.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: MatchLabelKeys is a set of pod
                                        label keys to select the pods over which spreading
                                        will be calculated. The keys are used to lookup
                                        values from the incoming pod labels, those
                                        key-value labels are ANDed with labelSelector
                                        to select the group of existing pods over
                                        which spreading will be calculated for the
                                        incoming pod. Keys that don't exist in the
                                        incoming pod labels will be ignored. A null
                                        or empty list means only match against labelSelector.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    maxSkew:
                                      description: 'MaxSkew describes the degree to
                                        which pods may be unevenly distributed. When
                                        `whenUnsatisfiable=DoNotSchedule`, it is the
                                        maximum permitted difference between the number
                                        of matching pods in the target topology and
                                        the global minimum. The global minimum is
                                        the minimum number of matching pods in an
                                        eligible domain or zero if the number of eligible
                                        domains is less than MinDomains. For example,
                                        in a 3-zone cluster, MaxSkew is set to 1,
                                        and pods with the same labelSelector spread
                                        as 2/2/1: In this case, the global minimum
                                        is 1. | zone1 | zone2 | zone3 | |  P P  |  P
                                        P  |   P   | - if MaxSkew is 1, incoming pod
                                        can only be scheduled to zone3 to become 2/2/2;
                                        scheduling it onto zone1(zone2) would make
                                        the ActualSkew(3-1) on zone1(zone2) violate
                                        MaxSkew(1). - if MaxSkew is 2, incoming pod
                                        can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                        it is used to give higher precedence to topologies
                                        that satisfy it. It''s a required field. Default
                                        value is 1 and 0 is not allowed.'
                                      format: int32
                                      type: integer
                                    minDomains:
                                      description: "MinDomains indicates a minimum
                                        number of eligible domains. When the number
                                        of eligible domains with matching topology
                                        keys is less than minDomains, Pod Topology
                                        Spread treats \"global minimum\" as 0, and
                                        then the calculation of Skew is performed.
                                        And when the number of eligible domains with
                                        matching topology keys equals or greater than
                                        minDomains, this value has no effect on scheduling.
                                        As a result, when the number of eligible domains
                                        is less than minDomains, scheduler won't schedule
                                        more than maxSkew Pods to those domains. If
                                        value is nil, the constraint behaves as if
                                        MinDomains is equal to 1. Valid values are
                                        integers greater than 0. When value is not
                                        nil, WhenUnsatisfiable must be DoNotSchedule.
                                        \n For example, in a 3-zone cluster, MaxSkew
                                        is set to 2, MinDomains is set to 5 and pods
                                        with the same labelSelector spread as 2/2/2:
                                        | zone1 | zone2 | zone3 | |  P P  |  P P  |
                                        \ P P  | The number of domains is less than
                                        5(MinDomains), so \"global minimum\" is treated
                                        as 0. In this situation, new pod with the
                                        same labelSelector cannot be scheduled, because
                                        computed skew will be 3(3 - 0) if new Pod
                                        is scheduled to any of the three zones, it
                                        will violate MaxSkew. \n This is a beta field
                                        and requires the MinDomainsInPodTopologySpread
                                        feature gate to be enabled (enabled by default)."
                                      format: int32
                                      type: integer
                                    nodeAffinityPolicy:
                                      description: "NodeAffinityPolicy indicates how
                                        we will treat Pod's nodeAffinity/nodeSelector
                                        when calculating pod topology spread skew.
                                        Options are: - Honor: only nodes matching
                                        nodeAffinity/nodeSelector are included in
                                        the calculations. - Ignore: nodeAffinity/nodeSelector
                                        are ignored. All nodes are included in the
                                        calculations. \n If this value is nil, the
                                        behavior is equivalent to the Honor policy.
                                        This is a alpha-level feature enabled by the
                                        NodeInclusionPolicyInPodTopologySpread feature
                                        flag."
                                      type: string
                                    nodeTaintsPolicy:
                                      description: "NodeTaintsPolicy indicates how
                                        we will treat node taints when calculating
                                        pod topology spread skew. Options are: - Honor:
                                        nodes without taints, along with tainted nodes
                                        for which the incoming pod has a toleration,
                                        are included. - Ignore: node taints are ignored.
                                        All nodes are included. \n If this value is
                                        nil, the behavior is equivalent to the Ignore
                                        policy. This is a alpha-level feature enabled
                                        by the NodeInclusionPolicyInPodTopologySpread
                                        feature flag."
                                      type: string
                                    topologyKey:
                                      description: TopologyKey is the key of node
                                        labels. Nodes that have a label with this
                                        key and identical values are considered to
                                        be in the same topology. We consider each
                                        <key, value> as a "bucket", and try to put
                                        balanced number of pods into each bucket.
                                        We define a domain as a particular instance
                                        of a topology. Also, we define an eligible
                                        domain as a domain whose nodes meet the requirements
                                        of nodeAffinityPolicy and nodeTaintsPolicy.
                                        e.g. If TopologyKey is "kubernetes.io/hostname",
                                        each Node is a domain of that topology. And,
                                        if TopologyKey is "topology.kubernetes.io/zone",
                                        each zone is a domain of that topology. It's
                                        a required field.
                                      type: string
                                    whenUnsatisfiable:
                                      description: 'WhenUnsatisfiable indicates how
                                        to deal with a pod if it doesn''t satisfy
                                        the spread constraint. - DoNotSchedule (default)
                                        tells the scheduler not to schedule it. -
                                        ScheduleAnyway tells the scheduler to schedule
                                        the pod in any location, but giving higher
                                        precedence to topologies that would help reduce
                                        the skew. A constraint is considered "Unsatisfiable"
                                        for an incoming pod if and only if every possible
                                        node assignment for that pod would violate
                                        "MaxSkew" on some topology. For example, in
                                        a 3-zone cluster, MaxSkew is set to 1, and
                                        pods with the same labelSelector spread as
                                        3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   |
                                        If WhenUnsatisfiable is set to DoNotSchedule,
                                        incoming pod can only be scheduled to zone2(zone3)
                                        to become 3/2/1(3/1/2) as ActualSkew(2-1)
                                        on zone2(zone3) satisfies MaxSkew(1). In other
                                        words, the cluster can still be imbalanced,
                                        but scheduler won''t make it *more* imbalanced.
                                        It''s a required field.'
                                      type: string
                                  required:
                                  - maxSkew
                                  - topologyKey
                                  - whenUnsatisfiable
                                  type: object
                                type: array
                            type: object
                          pullImagePolicy:
                            default: IfNotPresent
                            description: pullImagePolicy is the policy for pods pulling
                              images.
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                            type: string
                        type: object
                      maxReplicas:
                        description: maxReplicas specifies the maxReplicas allowed
                          for clusters using this class.
                        format: int32
                        minimum: 1
                        type: integer
                      metrics:
                        description: metrics specify the security settings for the
                          metric services.
                        properties:
                          authentication:
                            description: authentication specifies the authentication
                              configuration for the metrics.
                            properties:
                              type:
                                description: type specifies the metrics authentication
                                  method. The valid option is `mtls`.
                                enum:
                                - mtls
                                type: string
                            required:
                            - type
                            type: object
                          prometheus:
                            description: prometheus specifies the configuration overrides
                              for the JMX-Prometheus exporter.
                            properties:
                              blacklist:
                                items:
                                  type: string
                                type: array
                              rules:
                                items:
                                  description: Rule defines the Prometheus Exporter
                                    rule override.
                                  properties:
                                    attrNameSnakeCase:
                                      type: boolean
                                    cache:
                                      type: boolean
                                    help:
                                      minLength: 1
                                      type: string
                                    labels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                      x-kubernetes-map-type: granular
                                    name:
                                      minLength: 1
                                      type: string
                                    pattern:
                                      minLength: 1
                                      type: string
                                    type:
                                      minLength: 1
                                      type: string
                                    value:
                                      minLength: 1
                                      type: string
                                    valueFactor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      default: 1
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type: array
                              whitelist:
                                items:
                                  type: string
                                type: array
                            type: object
                          tls:
                            description: tls specifies the TLS configuration for the
                              metrics.
                            properties:
                              directoryPathInContainer:
                                description: directoryPathInContainer specifies the
                                  directory path in the container where `keystore.jks`,
                                  `truststore.jks`, and `jksPassword.txt` keys are
                                  mounted. `truststore.jks` is not configured and
                                  can be ignored when the `ignoreTrustStoreConfig`
                                  field is set to `true`.
                                minLength: 1
                                type: string
                              enabled:
                                description: enabled specifies to enable the TLS configuration
                                  for the Confluent component.
                                type: boolean
                              ignoreTrustStoreConfig:
                                description: ignoreTrustStoreConfig indicates whether
                                  to ignore the truststore configuration for the Confluent
                                  component.
                                type: boolean
                              jksPassword:
                                description: jksPassword references the secret containing
                                  the JKS password.
                                properties:
                                  secretRef:
                                    description: 'secretRef references the name of
                                      the secret containing the JKS password. More
                                      info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates'
                                    maxLength: 30
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                required:
                                - secretRef
                                type: object
                              secretRef:
                                description: 'secretRef references the secret containing
                                  the certificates. More info: https://docs.confluent.io/operator/current/co-network-encryption.html#configure-user-provided-tls-certificates'
                                maxLength: 30
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - enabled
                            type: object
                        type: object
                      replicas:
                        description: replicas specifies the default replica number
                          for zookeeper clusters.
                        format: int32
                        minimum: 1
                        type: integer
                    required:
                    - replicas
                    type: object
                  type:
                    description: type is the type of provisioner for the connect cluster.
                      Valid options are `ccloud` and `cfk` and defaults to `cfk`
                    enum:
                    - cfk
                    - ccloud
                    type: string
                required:
                - type
                type: object
            required:
            - provisioner
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true

