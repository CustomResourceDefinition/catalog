---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: streams.jetstream.nats.io
spec:
  group: jetstream.nats.io
  scope: Namespaced
  names:
    kind: Stream
    singular: stream
    plural: streams
  versions:
  - name: v1beta2
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              name:
                description: A unique name for the Stream.
                type: string
                pattern: '^[^.*>]*$'
                minLength: 1
              description:
                description: The description of the stream.
                type: string
              subjects:
                description: A list of subjects to consume, supports wildcards.
                type: array
                minLength: 1
                items:
                  type: string
                  minLength: 1
              retention:
                description: How messages are retained in the Stream, once this is exceeded old messages are removed.
                type: string
                enum:
                - limits
                - interest
                - workqueue
                default: limits
              maxConsumers:
                description: How many Consumers can be defined for a given Stream. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              maxMsgs:
                description: How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              maxBytes:
                description: How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              discard:
                description: When a Stream reach it's limits either old messages are deleted or new ones are denied.
                type: string
                enum:
                - old
                - new
                default: old
              discardPerSubject:
                description: Applies discard policy on a per-subject basis. Requires discard policy 'new' and 'maxMsgs' to be set.
                type: boolean
                default: false
              maxAge:
                description: Maximum age of any message in the stream, expressed in Go's time.Duration format. Empty for unlimited.
                type: string
                default: ''
              maxMsgsPerSubject:
                description: The maximum number of messages per subject.
                type: integer
                default: 0
              maxMsgSize:
                description: The largest message that will be accepted by the Stream. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              storage:
                description: The storage backend to use for the Stream.
                type: string
                enum:
                - file
                - memory
                default: memory
              replicas:
                description: How many replicas to keep for each message.
                type: integer
                minimum: 1
                default: 1
              noAck:
                description: Disables acknowledging messages that are received by the Stream.
                type: boolean
                default: false
              duplicateWindow:
                description: The duration window to track duplicate messages for.
                type: string
              placement:
                description: A stream's placement.
                type: object
                properties:
                  cluster:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
              mirror:
                description: A stream mirror.
                type: object
                properties:
                  name:
                    type: string
                  optStartSeq:
                    type: integer
                  optStartTime:
                    description: Time format must be RFC3339.
                    type: string
                  filterSubject:
                    type: string
                  externalApiPrefix:
                    type: string
                  externalDeliverPrefix:
                    type: string
                  subjectTransforms:
                    description: List of subject transforms for this mirror.
                    type: array
                    items:
                      description: A subject transform pair.
                      type: object
                      properties:
                        source:
                          description: Source subject.
                          type: string
                        dest:
                          description: Destination subject.
                          type: string
              sources:
                description: A stream's sources.
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    optStartSeq:
                      type: integer
                    optStartTime:
                      description: Time format must be RFC3339.
                      type: string
                    filterSubject:
                      type: string
                    externalApiPrefix:
                      type: string
                    externalDeliverPrefix:
                      type: string
                    subjectTransforms:
                      description: List of subject transforms for this mirror.
                      type: array
                      items:
                        description: A subject transform pair.
                        type: object
                        properties:
                          source:
                            description: Source subject.
                            type: string
                          dest:
                            description: Destination subject.
                            type: string
              sealed:
                description: Seal an existing stream so no new messages may be added.
                type: boolean
                default: false
              denyDelete:
                description: When true, restricts the ability to delete messages from a stream via the API. Cannot be changed once set to true.
                type: boolean
                default: false
              denyPurge:
                description: When true, restricts the ability to purge a stream via the API. Cannot be changed once set to true.
                type: boolean
                default: false
              allowRollup:
                description: When true, allows the use of the Nats-Rollup header to replace all contents of a stream, or subject in a stream, with a single new message.
                type: boolean
                default: false
              compression:
                description: Stream specific compression.
                type: string
                enum:
                - s2
                - none
                - ''
                default: ''
              firstSequence:
                description: Sequence number from which the Stream will start.
                type: number
                default: 0
              subjectTransform:
                description: SubjectTransform is for applying a subject transform (to matching messages) when a new message is received.
                type: object
                properties:
                  source:
                    type: string
                    description: Source subject.
                  dest:
                    type: string
                    description: Destination subject to transform into.
              republish:
                description: Republish configuration of the stream.
                type: object
                properties:
                  destination:
                    type: string
                    description: Messages will be additionally published to this subject.
                  source:
                    type: string
                    description: Messages will be published from this subject to the destination subject.
              allowDirect:
                description: When true, allow higher performance, direct access to get individual messages.
                type: boolean
                default: false
              mirrorDirect:
                description: When true, enables direct access to messages from the origin stream.
                type: boolean
                default: false
              allowMsgTtl:
                description: When true, allows header initiated per-message TTLs. If disabled, then the `NATS-TTL` header will be ignored.
                type: boolean
                default: false
              subjectDeleteMarkerTtl:
                description: Enables and sets a duration for adding server markers for delete, purge and max age limits.
                type: string
                default: ''
              consumerLimits:
                type: object
                properties:
                  inactiveThreshold:
                    description: The duration of inactivity after which a consumer is considered inactive.
                    type: string
                  maxAckPending:
                    description: Maximum number of outstanding unacknowledged messages.
                    type: integer
              metadata:
                description: Additional Stream metadata.
                type: object
                additionalProperties:
                  type: string
              account:
                description: Name of the account to which the Stream belongs.
                type: string
                pattern: '^[^.*>]*$'
              creds:
                description: NATS user credentials for connecting to servers. Please make sure your controller has mounted the creds on this path.
                type: string
                default: ''
              nkey:
                description: NATS user NKey for connecting to servers.
                type: string
                default: ''
              preventDelete:
                description: When true, the managed Stream will not be deleted when the resource is deleted.
                type: boolean
                default: false
              preventUpdate:
                description: When true, the managed Stream will not be updated when the resource is updated.
                type: boolean
                default: false
              servers:
                description: A list of servers for creating stream.
                type: array
                items:
                  type: string
                default: []
              tls:
                description: A client's TLS certs and keys.
                type: object
                properties:
                  clientCert:
                    description: A client's cert filepath. Should be mounted.
                    type: string
                  clientKey:
                    description: A client's key filepath. Should be mounted.
                    type: string
                  rootCas:
                    description: A list of filepaths to CAs. Should be mounted.
                    type: array
                    items:
                      type: string
              tlsFirst:
                description: When true, the KV Store will initiate TLS before server INFO.
                type: boolean
                default: false
              jsDomain:
                description: The JetStream domain to use for the stream.
                type: string
          status:
            type: object
            properties:
              observedGeneration:
                type: integer
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                    lastTransitionTime:
                      type: string
                    reason:
                      type: string
                    message:
                      type: string
    additionalPrinterColumns:
    - name: State
      type: string
      description: The current state of the stream.
      jsonPath: .status.conditions[?(@.type == 'Ready')].reason
    - name: Stream Name
      type: string
      description: The name of the JetStream Stream.
      jsonPath: .spec.name
    - name: Subjects
      type: string
      description: The subjects this Stream produces.
      jsonPath: .spec.subjects
  - name: v1beta1
    served: false
    storage: false
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              name:
                description: A unique name for the Stream.
                type: string
                pattern: '^[^.*>]*$'
                minLength: 1
              subjects:
                description: A list of subjects to consume, supports wildcards.
                type: array
                minLength: 1
                items:
                  type: string
                  minLength: 1
              retention:
                description: How messages are retained in the Stream, once this is exceeded old messages are removed.
                type: string
                enum:
                - limits
                - interest
                - workqueue
                default: limits
              maxConsumers:
                description: How many Consumers can be defined for a given Stream. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              maxMsgs:
                description: How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              maxBytes:
                description: How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              maxAge:
                description: Maximum age of any message in the stream, expressed in Go's time.Duration format. Empty for unlimited.
                type: string
                default: ''
              maxMsgSize:
                description: The largest message that will be accepted by the Stream. -1 for unlimited.
                type: integer
                minimum: -1
                default: -1
              storage:
                description: The storage backend to use for the Stream.
                type: string
                enum:
                - file
                - memory
                default: memory
              replicas:
                description: How many replicas to keep for each message.
                type: integer
                minimum: 1
                default: 1
              noAck:
                description: Disables acknowledging messages that are received by the Stream.
                type: boolean
                default: false
              discard:
                description: When a Stream reach it's limits either old messages are deleted or new ones are denied.
                type: string
                enum:
                - old
                - new
                default: old
              duplicateWindow:
                description: The duration window to track duplicate messages for.
                type: string
              description:
                description: The description of the stream.
                type: string
              maxMsgsPerSubject:
                description: The maximum number of messages per subject.
                type: integer
                default: 0
              mirror:
                description: A stream mirror.
                type: object
                properties:
                  name:
                    type: string
                  optStartSeq:
                    type: integer
                  optStartTime:
                    description: Time format must be RFC3339.
                    type: string
                  filterSubject:
                    type: string
                  externalApiPrefix:
                    type: string
                  externalDeliverPrefix:
                    type: string
              placement:
                description: A stream's placement.
                type: object
                properties:
                  cluster:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
              sources:
                description: A stream's sources.
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    optStartSeq:
                      type: integer
                    optStartTime:
                      description: Time format must be RFC3339.
                      type: string
                    filterSubject:
                      type: string
                    externalApiPrefix:
                      type: string
                    externalDeliverPrefix:
                      type: string
          status:
            type: object
            properties:
              observedGeneration:
                type: integer
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    status:
                      type: string
                    lastTransitionTime:
                      type: string
                    reason:
                      type: string
                    message:
                      type: string
    additionalPrinterColumns:
    - name: State
      type: string
      description: The current state of the stream.
      jsonPath: .status.conditions[?(@.type == 'Ready')].reason
    - name: Stream Name
      type: string
      description: The name of the JetStream Stream.
      jsonPath: .spec.name
    - name: Subjects
      type: string
      description: The subjects this Stream produces.
      jsonPath: .spec.subjects
