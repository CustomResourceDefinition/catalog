apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  name: githubidentityproviders.idp.supervisor.pinniped.dev
spec:
  group: idp.supervisor.pinniped.dev
  names:
    categories:
    - pinniped
    - pinniped-idp
    - pinniped-idps
    kind: GitHubIdentityProvider
    listKind: GitHubIdentityProviderList
    plural: githubidentityproviders
    singular: githubidentityprovider
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.githubAPI.host
      name: Host
      type: string
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              allowAuthentication:
                properties:
                  organizations:
                    properties:
                      allowed:
                        items:
                          type: string
                        maxItems: 64
                        type: array
                        x-kubernetes-list-type: set
                      policy:
                        default: OnlyUsersFromAllowedOrganizations
                        enum:
                        - OnlyUsersFromAllowedOrganizations
                        - AllGitHubUsers
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: spec.allowAuthentication.organizations.policy must
                        be 'OnlyUsersFromAllowedOrganizations' when spec.allowAuthentication.organizations.allowed
                        has organizations listed
                      rule: '!(has(self.allowed) && size(self.allowed) > 0 && self.policy
                        == ''AllGitHubUsers'')'
                    - message: spec.allowAuthentication.organizations.policy must
                        be 'AllGitHubUsers' when spec.allowAuthentication.organizations.allowed
                        is empty
                      rule: '!((!has(self.allowed) || size(self.allowed) == 0) &&
                        self.policy == ''OnlyUsersFromAllowedOrganizations'')'
                required:
                - organizations
                type: object
              claims:
                default: {}
                properties:
                  groups:
                    default: slug
                    enum:
                    - name
                    - slug
                    type: string
                  username:
                    default: login:id
                    enum:
                    - id
                    - login
                    - login:id
                    type: string
                type: object
              client:
                properties:
                  secretName:
                    minLength: 1
                    type: string
                required:
                - secretName
                type: object
              githubAPI:
                default: {}
                properties:
                  host:
                    default: github.com
                    minLength: 1
                    type: string
                  tls:
                    properties:
                      certificateAuthorityData:
                        type: string
                      certificateAuthorityDataSource:
                        properties:
                          key:
                            minLength: 1
                            type: string
                          kind:
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                          name:
                            minLength: 1
                            type: string
                        required:
                        - key
                        - kind
                        - name
                        type: object
                    type: object
                type: object
            required:
            - allowAuthentication
            - client
            type: object
          status:
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              phase:
                default: Pending
                enum:
                - Pending
                - Ready
                - Error
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
