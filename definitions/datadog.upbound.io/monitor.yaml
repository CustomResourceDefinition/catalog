---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: monitors.datadog.upbound.io
spec:
  group: datadog.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - datadog
    kind: Monitor
    listKind: MonitorList
    plural: monitors
    singular: monitor
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Monitor is the Schema for the Monitors API. Provides a Datadog
          monitor resource. This can be used to create and manage Datadog monitors.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonitorSpec defines the desired state of Monitor
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  enableLogsSample:
                    description: (Boolean) A boolean indicating whether or not to
                      include a list of log values which triggered the alert. This
                      is only used by log monitors. Defaults to false. A boolean indicating
                      whether or not to include a list of log values which triggered
                      the alert. This is only used by log monitors. Defaults to `false`.
                    type: boolean
                  escalationMessage:
                    description: notification. Supports the @username notification
                      allowed elsewhere. A message to include with a re-notification.
                      Supports the `@username` notification allowed elsewhere.
                    type: string
                  evaluationDelay:
                    description: "negative integer. (Only applies to metric alert)
                      Time (in seconds) to delay evaluation, as a non-negative integer.
                      \n For example, if the value is set to `300` (5min), the `timeframe`
                      is set to `last_5m` and the time is 7:00, the monitor will evaluate
                      data from 6:50 to 6:55. This is useful for AWS CloudWatch and
                      other backfilled metrics to ensure the monitor will always have
                      data during evaluation."
                    type: number
                  forceDelete:
                    description: (Boolean) A boolean indicating whether this monitor
                      can be deleted even if it’s referenced by other resources (e.g.
                      SLO, composite monitor). A boolean indicating whether this monitor
                      can be deleted even if it’s referenced by other resources (e.g.
                      SLO, composite monitor).
                    type: boolean
                  groupRetentionDuration:
                    description: '(String) The time span after which groups with missing
                      data are dropped from the monitor state. The minimum value is
                      one hour, and the maximum value is 72 hours. Example values
                      are: 60m, 1h, and 2d. This option is only available for APM
                      Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs,
                      and RUM monitors. The time span after which groups with missing
                      data are dropped from the monitor state. The minimum value is
                      one hour, and the maximum value is 72 hours. Example values
                      are: 60m, 1h, and 2d. This option is only available for APM
                      Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs,
                      and RUM monitors.'
                    type: string
                  groupbySimpleMonitor:
                    description: (Boolean) Whether or not to trigger one alert if
                      any source breaches a threshold. This is only used by log monitors.
                      Defaults to false. Whether or not to trigger one alert if any
                      source breaches a threshold. This is only used by log monitors.
                      Defaults to `false`.
                    type: boolean
                  includeTags:
                    description: (Boolean) A boolean indicating whether notifications
                      from this monitor automatically insert its triggering tags into
                      the title. Defaults to true. A boolean indicating whether notifications
                      from this monitor automatically insert its triggering tags into
                      the title. Defaults to `true`.
                    type: boolean
                  locked:
                    description: (Boolean, Deprecated) A boolean indicating whether
                      changes to this monitor should be restricted to the creator
                      or admins. Defaults to false. Deprecated. Use restricted_roles.
                      A boolean indicating whether changes to this monitor should
                      be restricted to the creator or admins. Defaults to `false`.
                      **Deprecated.** Use `restricted_roles`.
                    type: boolean
                  message:
                    description: "(String) A message to include with notifications
                      for this monitor. A message to include with notifications for
                      this monitor. \n Email notifications can be sent to specific
                      users by using the same `@username` notation as events."
                    type: string
                  monitorThresholdWindows:
                    description: '(Block List, Max: 1) A mapping containing recovery_window
                      and trigger_window values, e.g. last_15m . Can only be used
                      for, and are required for, anomaly monitors. (see below for
                      nested schema) A mapping containing `recovery_window` and `trigger_window`
                      values, e.g. `last_15m` . Can only be used for, and are required
                      for, anomaly monitors.'
                    items:
                      properties:
                        recoveryWindow:
                          description: (String) Describes how long an anomalous metric
                            must be normal before the alert recovers. Describes how
                            long an anomalous metric must be normal before the alert
                            recovers.
                          type: string
                        triggerWindow:
                          description: (String) Describes how long a metric must be
                            anomalous before an alert triggers. Describes how long
                            a metric must be anomalous before an alert triggers.
                          type: string
                      type: object
                    type: array
                  monitorThresholds:
                    description: '(Block List, Max: 1) Alert thresholds of the monitor.
                      (see below for nested schema) Alert thresholds of the monitor.'
                    items:
                      properties:
                        critical:
                          description: (String) The monitor CRITICAL threshold. Must
                            be a number. The monitor `CRITICAL` threshold. Must be
                            a number.
                          type: string
                        criticalRecovery:
                          description: (String) The monitor CRITICAL recovery threshold.
                            Must be a number. The monitor `CRITICAL` recovery threshold.
                            Must be a number.
                          type: string
                        ok:
                          description: (String) The monitor OK threshold. Only supported
                            in monitor type service check. Must be a number. The monitor
                            `OK` threshold. Only supported in monitor type `service
                            check`. Must be a number.
                          type: string
                        unknown:
                          description: (String) The monitor UNKNOWN threshold. Only
                            supported in monitor type service check. Must be a number.
                            The monitor `UNKNOWN` threshold. Only supported in monitor
                            type `service check`. Must be a number.
                          type: string
                        warning:
                          description: (String) The monitor WARNING threshold. Must
                            be a number. The monitor `WARNING` threshold. Must be
                            a number.
                          type: string
                        warningRecovery:
                          description: (String) The monitor WARNING recovery threshold.
                            Must be a number. The monitor `WARNING` recovery threshold.
                            Must be a number.
                          type: string
                      type: object
                    type: array
                  name:
                    description: (String) Name of Datadog monitor. Name of Datadog
                      monitor.
                    type: string
                  newGroupDelay:
                    description: "(Number) The time (in seconds) to skip evaluations
                      for new groups. The time (in seconds) to skip evaluations for
                      new groups. \n `new_group_delay` overrides `new_host_delay`
                      if it is set to a nonzero value."
                    type: number
                  newHostDelay:
                    description: negative integer. This value is ignored for simple
                      monitors and monitors not grouped by host. The only case when
                      this should be used is to override the default and set new_host_delay
                      to zero for monitors grouped by host. Deprecated. Use new_group_delay
                      except when setting new_host_delay to zero. Defaults to 300.
                      **Deprecated**. See `new_group_delay`. Time (in seconds) to
                      allow a host to boot and applications to fully start before
                      starting the evaluation of monitor results. Should be a non-negative
                      integer. This value is ignored for simple monitors and monitors
                      not grouped by host. The only case when this should be used
                      is to override the default and set `new_host_delay` to zero
                      for monitors grouped by host. **Deprecated.** Use `new_group_delay`
                      except when setting `new_host_delay` to zero. Defaults to `300`.
                    type: number
                  noDataTimeframe:
                    description: "(Number) The number of minutes before a monitor
                      will notify when data stops reporting. The number of minutes
                      before a monitor will notify when data stops reporting. \n We
                      recommend at least 2x the monitor timeframe for metric alerts
                      or 2 minutes for service checks. Defaults to `10`."
                    type: number
                  notificationPresetName:
                    description: (String) Toggles the display of additional content
                      sent in the monitor notification. Valid values are show_all,
                      hide_query, hide_handles, hide_all. Toggles the display of additional
                      content sent in the monitor notification. Valid values are `show_all`,
                      `hide_query`, `hide_handles`, `hide_all`.
                    type: string
                  notifyAudit:
                    description: (Boolean) A boolean indicating whether tagged users
                      will be notified on changes to this monitor. Defaults to false.
                      A boolean indicating whether tagged users will be notified on
                      changes to this monitor. Defaults to `false`.
                    type: boolean
                  notifyBy:
                    description: alert. Controls what granularity a monitor alerts
                      on. Only available for monitors with groupings. For instance,
                      a monitor grouped by `cluster`, `namespace`, and `pod` can be
                      configured to only notify on each new `cluster` violating the
                      alert conditions by setting `notify_by` to `['cluster']`. Tags
                      mentioned in `notify_by` must be a subset of the grouping tags
                      in the query. For example, a query grouped by `cluster` and
                      `namespace` cannot notify on `region`. Setting `notify_by` to
                      `[*]` configures the monitor to notify as a simple-alert.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  notifyNoData:
                    description: (Boolean) A boolean indicating whether this monitor
                      will notify when data stops reporting. Defaults to false. A
                      boolean indicating whether this monitor will notify when data
                      stops reporting. Defaults to `false`.
                    type: boolean
                  onMissingData:
                    description: '(String) Controls how groups or monitors are treated
                      if an evaluation does not return any data points. The default
                      option results in different behavior depending on the monitor
                      query type. For monitors using Count queries, an empty monitor
                      evaluation is treated as 0 and is compared to the threshold
                      conditions. For monitors using any query type other than Count,
                      for example Gauge, Measure, or Rate, the monitor shows the last
                      known status. This option is only available for APM Trace Analytics,
                      Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.
                      Valid values are: show_no_data, show_and_notify_no_data, resolve,
                      and default. Controls how groups or monitors are treated if
                      an evaluation does not return any data points. The default option
                      results in different behavior depending on the monitor query
                      type. For monitors using `Count` queries, an empty monitor evaluation
                      is treated as 0 and is compared to the threshold conditions.
                      For monitors using any query type other than `Count`, for example
                      `Gauge`, `Measure`, or `Rate`, the monitor shows the last known
                      status. This option is only available for APM Trace Analytics,
                      Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.
                      Valid values are: `show_no_data`, `show_and_notify_no_data`,
                      `resolve`, and `default`.'
                    type: string
                  priority:
                    description: (Number) Integer from 1 (high) to 5 (low) indicating
                      alert severity. Integer from 1 (high) to 5 (low) indicating
                      alert severity.
                    type: number
                  query:
                    description: "(String) The monitor query to notify on. Note this
                      is not the same query you see in the UI and the syntax is different
                      depending on the monitor type, please see the API Reference
                      for details. The monitor query to notify on. Note this is not
                      the same query you see in the UI and the syntax is different
                      depending on the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor)
                      for details. \n **Note:** APM latency data is now available
                      as Distribution Metrics. We strongly recommend updating monitor
                      definitions to query the new metrics.datadoghq.com/tracing/guide/ddsketch_trace_metrics/)."
                    type: string
                  renotifyInterval:
                    description: notify on the current status. It will only re-notify
                      if it's not resolved. The number of minutes after the last notification
                      before a monitor will re-notify on the current status. It will
                      only re-notify if it's not resolved.
                    type: number
                  renotifyOccurrences:
                    description: notification messages that should be sent on the
                      current status. The number of re-notification messages that
                      should be sent on the current status.
                    type: number
                  renotifyStatuses:
                    description: notification messages should be sent. Valid values
                      are alert, warn, no data. The types of statuses for which re-notification
                      messages should be sent. Valid values are `alert`, `warn`, `no
                      data`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  requireFullWindow:
                    description: (Boolean) A boolean indicating whether this monitor
                      needs a full window of data before it's evaluated. Datadog strongly
                      recommends you set this to false for sparse metrics, otherwise
                      some evaluations may be skipped. If there's a custom_schedule
                      set, require_full_window must be false and will be ignored.
                      Defaults to true. A boolean indicating whether this monitor
                      needs a full window of data before it's evaluated. Datadog strongly
                      recommends you set this to `false` for sparse metrics, otherwise
                      some evaluations may be skipped. If there's a custom_schedule
                      set, `require_full_window` must be false and will be ignored.
                      Defaults to `true`.
                    type: boolean
                  restrictedRoles:
                    description: (Set of String) A list of unique role identifiers
                      to define which roles are allowed to edit the monitor. Editing
                      a monitor includes any updates to the monitor configuration,
                      monitor deletion, and muting of the monitor for any amount of
                      time. Roles unique identifiers can be pulled from the Roles
                      API in the data.id field. A list of unique role identifiers
                      to define which roles are allowed to edit the monitor. Editing
                      a monitor includes any updates to the monitor configuration,
                      monitor deletion, and muting of the monitor for any amount of
                      time. Roles unique identifiers can be pulled from the [Roles
                      API](https://docs.datadoghq.com/api/latest/roles/#list-roles)
                      in the `data.id` field.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  schedulingOptions:
                    description: (Block List) Configuration options for scheduling.
                      (see below for nested schema) Configuration options for scheduling.
                    items:
                      properties:
                        customSchedule:
                          description: (Block List) Configuration options for the
                            custom schedules. If start is omitted, the monitor creation
                            time will be used. (see below for nested schema) Configuration
                            options for the custom schedules. If `start` is omitted,
                            the monitor creation time will be used.
                          items:
                            properties:
                              recurrence:
                                description: '(Block List, Min: 1, Max: 1) A list
                                  of recurrence definitions. Length must be 1. (see
                                  below for nested schema) A list of recurrence definitions.
                                  Length must be 1.'
                                items:
                                  properties:
                                    rrule:
                                      description: (String) Must be a valid rrule.
                                        See API docs for supported fields Must be
                                        a valid `rrule`. See API docs for supported
                                        fields
                                      type: string
                                    start:
                                      description: MM-DDThh:mm:ss' Time to start recurrence
                                        cycle. Similar to DTSTART. Expected format
                                        'YYYY-MM-DDThh:mm:ss'
                                      type: string
                                    timezone:
                                      description: '(String) ''tz database'' format.
                                        Example: America/New_York or UTC ''tz database''
                                        format. Example: `America/New_York` or `UTC`'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        evaluationWindow:
                          description: (Block List) Configuration options for the
                            evaluation window. If hour_starts is set, no other fields
                            may be set. Otherwise, day_starts and month_starts must
                            be set together. (see below for nested schema) Configuration
                            options for the evaluation window. If `hour_starts` is
                            set, no other fields may be set. Otherwise, `day_starts`
                            and `month_starts` must be set together.
                          items:
                            properties:
                              dayStarts:
                                description: (String) The time of the day at which
                                  a one day cumulative evaluation window starts. Must
                                  be defined in UTC time in HH:mm format. The time
                                  of the day at which a one day cumulative evaluation
                                  window starts. Must be defined in UTC time in `HH:mm`
                                  format.
                                type: string
                              hourStarts:
                                description: (Number) The minute of the hour at which
                                  a one hour cumulative evaluation window starts.
                                  Must be between 0 and 59. The minute of the hour
                                  at which a one hour cumulative evaluation window
                                  starts. Must be between 0 and 59.
                                type: number
                              monthStarts:
                                description: (Number) The day of the month at which
                                  a one month cumulative evaluation window starts.
                                  Must be a value of 1. The day of the month at which
                                  a one month cumulative evaluation window starts.
                                  Must be a value of 1.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    description: '(Set of String) A list of tags to associate with
                      your monitor. This can help you categorize and filter monitors
                      in the manage monitors page of the UI. Note: it''s not currently
                      possible to filter by these tags when querying via the API A
                      list of tags to associate with your monitor. This can help you
                      categorize and filter monitors in the manage monitors page of
                      the UI. Note: it''s not currently possible to filter by these
                      tags when querying via the API'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  timeoutH:
                    description: (Number) The number of hours of the monitor not reporting
                      data before it automatically resolves from a triggered state.
                      The minimum allowed value is 0 hours. The maximum allowed value
                      is 24 hours. The number of hours of the monitor not reporting
                      data before it automatically resolves from a triggered state.
                      The minimum allowed value is 0 hours. The maximum allowed value
                      is 24 hours.
                    type: number
                  type:
                    description: 'analytics alert, slo alert, event-v2 alert, audit
                      alert, ci-pipelines alert, ci-tests alert, error-tracking alert,
                      database-monitoring alert. The type of the monitor. The mapping
                      from these types to the types found in the Datadog Web UI can
                      be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor).
                      Note: The monitor type cannot be changed after a monitor is
                      created. Valid values are `composite`, `event alert`, `log alert`,
                      `metric alert`, `process alert`, `query alert`, `rum alert`,
                      `service check`, `synthetics alert`, `trace-analytics alert`,
                      `slo alert`, `event-v2 alert`, `audit alert`, `ci-pipelines
                      alert`, `ci-tests alert`, `error-tracking alert`, `database-monitoring
                      alert`.'
                    type: string
                  validate:
                    description: (Boolean) If set to false, skip the validation call
                      done during plan. If set to `false`, skip the validation call
                      done during plan.
                    type: boolean
                  variables:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        eventQuery:
                          description: (Block List) A timeseries formula and functions
                            events query. (see below for nested schema) A timeseries
                            formula and functions events query.
                          items:
                            properties:
                              compute:
                                description: '(Block List, Min: 1) The compute options.
                                  (see below for nested schema) The compute options.'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String) The aggregation methods
                                        for event platform queries. Valid values are
                                        count, cardinality, median, pc75, pc90, pc95,
                                        pc98, pc99, sum, min, max, avg. The aggregation
                                        methods for event platform queries. Valid
                                        values are `count`, `cardinality`, `median`,
                                        `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`,
                                        `min`, `max`, `avg`.
                                      type: string
                                    interval:
                                      description: (Number) A time interval in milliseconds.
                                        A time interval in milliseconds.
                                      type: number
                                    metric:
                                      description: (String) The measurable attribute
                                        to compute. The measurable attribute to compute.
                                      type: string
                                  type: object
                                type: array
                              dataSource:
                                description: based queries. Valid values are rum,
                                  ci_pipelines, ci_tests, audit, events, logs, spans,
                                  database_queries. The data source for event platform-based
                                  queries. Valid values are `rum`, `ci_pipelines`,
                                  `ci_tests`, `audit`, `events`, `logs`, `spans`,
                                  `database_queries`.
                                type: string
                              groupBy:
                                description: (Block List) Group by options. (see below
                                  for nested schema) Group by options.
                                items:
                                  properties:
                                    facet:
                                      description: (String) The event facet. The event
                                        facet.
                                      type: string
                                    limit:
                                      description: (Number) The number of groups to
                                        return. The number of groups to return.
                                      type: number
                                    sort:
                                      description: '(Block List, Max: 1) The options
                                        for sorting group by results. (see below for
                                        nested schema) The options for sorting group
                                        by results.'
                                      items:
                                        properties:
                                          aggregation:
                                            description: (String) The aggregation
                                              methods for event platform queries.
                                              Valid values are count, cardinality,
                                              median, pc75, pc90, pc95, pc98, pc99,
                                              sum, min, max, avg. The aggregation
                                              methods for the event platform queries.
                                              Valid values are `count`, `cardinality`,
                                              `median`, `pc75`, `pc90`, `pc95`, `pc98`,
                                              `pc99`, `sum`, `min`, `max`, `avg`.
                                            type: string
                                          metric:
                                            description: (String) The measurable attribute
                                              to compute. The metric used for sorting
                                              group by results.
                                            type: string
                                          order:
                                            description: (String) Direction of sort.
                                              Valid values are asc, desc. Direction
                                              of sort. Valid values are `asc`, `desc`.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              indexes:
                                description: (List of String) An array of index names
                                  to query in the stream. An array of index names
                                  to query in the stream.
                                items:
                                  type: string
                                type: array
                              name:
                                description: (String) Name of Datadog monitor. The
                                  name of query for use in formulas.
                                type: string
                              search:
                                description: '(Block List, Min: 1, Max: 1) The search
                                  options. (see below for nested schema) The search
                                  options.'
                                items:
                                  properties:
                                    query:
                                      description: (String) The monitor query to notify
                                        on. Note this is not the same query you see
                                        in the UI and the syntax is different depending
                                        on the monitor type, please see the API Reference
                                        for details. The events search string.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  enableLogsSample:
                    description: (Boolean) A boolean indicating whether or not to
                      include a list of log values which triggered the alert. This
                      is only used by log monitors. Defaults to false. A boolean indicating
                      whether or not to include a list of log values which triggered
                      the alert. This is only used by log monitors. Defaults to `false`.
                    type: boolean
                  escalationMessage:
                    description: notification. Supports the @username notification
                      allowed elsewhere. A message to include with a re-notification.
                      Supports the `@username` notification allowed elsewhere.
                    type: string
                  evaluationDelay:
                    description: "negative integer. (Only applies to metric alert)
                      Time (in seconds) to delay evaluation, as a non-negative integer.
                      \n For example, if the value is set to `300` (5min), the `timeframe`
                      is set to `last_5m` and the time is 7:00, the monitor will evaluate
                      data from 6:50 to 6:55. This is useful for AWS CloudWatch and
                      other backfilled metrics to ensure the monitor will always have
                      data during evaluation."
                    type: number
                  forceDelete:
                    description: (Boolean) A boolean indicating whether this monitor
                      can be deleted even if it’s referenced by other resources (e.g.
                      SLO, composite monitor). A boolean indicating whether this monitor
                      can be deleted even if it’s referenced by other resources (e.g.
                      SLO, composite monitor).
                    type: boolean
                  groupRetentionDuration:
                    description: '(String) The time span after which groups with missing
                      data are dropped from the monitor state. The minimum value is
                      one hour, and the maximum value is 72 hours. Example values
                      are: 60m, 1h, and 2d. This option is only available for APM
                      Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs,
                      and RUM monitors. The time span after which groups with missing
                      data are dropped from the monitor state. The minimum value is
                      one hour, and the maximum value is 72 hours. Example values
                      are: 60m, 1h, and 2d. This option is only available for APM
                      Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs,
                      and RUM monitors.'
                    type: string
                  groupbySimpleMonitor:
                    description: (Boolean) Whether or not to trigger one alert if
                      any source breaches a threshold. This is only used by log monitors.
                      Defaults to false. Whether or not to trigger one alert if any
                      source breaches a threshold. This is only used by log monitors.
                      Defaults to `false`.
                    type: boolean
                  includeTags:
                    description: (Boolean) A boolean indicating whether notifications
                      from this monitor automatically insert its triggering tags into
                      the title. Defaults to true. A boolean indicating whether notifications
                      from this monitor automatically insert its triggering tags into
                      the title. Defaults to `true`.
                    type: boolean
                  locked:
                    description: (Boolean, Deprecated) A boolean indicating whether
                      changes to this monitor should be restricted to the creator
                      or admins. Defaults to false. Deprecated. Use restricted_roles.
                      A boolean indicating whether changes to this monitor should
                      be restricted to the creator or admins. Defaults to `false`.
                      **Deprecated.** Use `restricted_roles`.
                    type: boolean
                  message:
                    description: "(String) A message to include with notifications
                      for this monitor. A message to include with notifications for
                      this monitor. \n Email notifications can be sent to specific
                      users by using the same `@username` notation as events."
                    type: string
                  monitorThresholdWindows:
                    description: '(Block List, Max: 1) A mapping containing recovery_window
                      and trigger_window values, e.g. last_15m . Can only be used
                      for, and are required for, anomaly monitors. (see below for
                      nested schema) A mapping containing `recovery_window` and `trigger_window`
                      values, e.g. `last_15m` . Can only be used for, and are required
                      for, anomaly monitors.'
                    items:
                      properties:
                        recoveryWindow:
                          description: (String) Describes how long an anomalous metric
                            must be normal before the alert recovers. Describes how
                            long an anomalous metric must be normal before the alert
                            recovers.
                          type: string
                        triggerWindow:
                          description: (String) Describes how long a metric must be
                            anomalous before an alert triggers. Describes how long
                            a metric must be anomalous before an alert triggers.
                          type: string
                      type: object
                    type: array
                  monitorThresholds:
                    description: '(Block List, Max: 1) Alert thresholds of the monitor.
                      (see below for nested schema) Alert thresholds of the monitor.'
                    items:
                      properties:
                        critical:
                          description: (String) The monitor CRITICAL threshold. Must
                            be a number. The monitor `CRITICAL` threshold. Must be
                            a number.
                          type: string
                        criticalRecovery:
                          description: (String) The monitor CRITICAL recovery threshold.
                            Must be a number. The monitor `CRITICAL` recovery threshold.
                            Must be a number.
                          type: string
                        ok:
                          description: (String) The monitor OK threshold. Only supported
                            in monitor type service check. Must be a number. The monitor
                            `OK` threshold. Only supported in monitor type `service
                            check`. Must be a number.
                          type: string
                        unknown:
                          description: (String) The monitor UNKNOWN threshold. Only
                            supported in monitor type service check. Must be a number.
                            The monitor `UNKNOWN` threshold. Only supported in monitor
                            type `service check`. Must be a number.
                          type: string
                        warning:
                          description: (String) The monitor WARNING threshold. Must
                            be a number. The monitor `WARNING` threshold. Must be
                            a number.
                          type: string
                        warningRecovery:
                          description: (String) The monitor WARNING recovery threshold.
                            Must be a number. The monitor `WARNING` recovery threshold.
                            Must be a number.
                          type: string
                      type: object
                    type: array
                  name:
                    description: (String) Name of Datadog monitor. Name of Datadog
                      monitor.
                    type: string
                  newGroupDelay:
                    description: "(Number) The time (in seconds) to skip evaluations
                      for new groups. The time (in seconds) to skip evaluations for
                      new groups. \n `new_group_delay` overrides `new_host_delay`
                      if it is set to a nonzero value."
                    type: number
                  newHostDelay:
                    description: negative integer. This value is ignored for simple
                      monitors and monitors not grouped by host. The only case when
                      this should be used is to override the default and set new_host_delay
                      to zero for monitors grouped by host. Deprecated. Use new_group_delay
                      except when setting new_host_delay to zero. Defaults to 300.
                      **Deprecated**. See `new_group_delay`. Time (in seconds) to
                      allow a host to boot and applications to fully start before
                      starting the evaluation of monitor results. Should be a non-negative
                      integer. This value is ignored for simple monitors and monitors
                      not grouped by host. The only case when this should be used
                      is to override the default and set `new_host_delay` to zero
                      for monitors grouped by host. **Deprecated.** Use `new_group_delay`
                      except when setting `new_host_delay` to zero. Defaults to `300`.
                    type: number
                  noDataTimeframe:
                    description: "(Number) The number of minutes before a monitor
                      will notify when data stops reporting. The number of minutes
                      before a monitor will notify when data stops reporting. \n We
                      recommend at least 2x the monitor timeframe for metric alerts
                      or 2 minutes for service checks. Defaults to `10`."
                    type: number
                  notificationPresetName:
                    description: (String) Toggles the display of additional content
                      sent in the monitor notification. Valid values are show_all,
                      hide_query, hide_handles, hide_all. Toggles the display of additional
                      content sent in the monitor notification. Valid values are `show_all`,
                      `hide_query`, `hide_handles`, `hide_all`.
                    type: string
                  notifyAudit:
                    description: (Boolean) A boolean indicating whether tagged users
                      will be notified on changes to this monitor. Defaults to false.
                      A boolean indicating whether tagged users will be notified on
                      changes to this monitor. Defaults to `false`.
                    type: boolean
                  notifyBy:
                    description: alert. Controls what granularity a monitor alerts
                      on. Only available for monitors with groupings. For instance,
                      a monitor grouped by `cluster`, `namespace`, and `pod` can be
                      configured to only notify on each new `cluster` violating the
                      alert conditions by setting `notify_by` to `['cluster']`. Tags
                      mentioned in `notify_by` must be a subset of the grouping tags
                      in the query. For example, a query grouped by `cluster` and
                      `namespace` cannot notify on `region`. Setting `notify_by` to
                      `[*]` configures the monitor to notify as a simple-alert.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  notifyNoData:
                    description: (Boolean) A boolean indicating whether this monitor
                      will notify when data stops reporting. Defaults to false. A
                      boolean indicating whether this monitor will notify when data
                      stops reporting. Defaults to `false`.
                    type: boolean
                  onMissingData:
                    description: '(String) Controls how groups or monitors are treated
                      if an evaluation does not return any data points. The default
                      option results in different behavior depending on the monitor
                      query type. For monitors using Count queries, an empty monitor
                      evaluation is treated as 0 and is compared to the threshold
                      conditions. For monitors using any query type other than Count,
                      for example Gauge, Measure, or Rate, the monitor shows the last
                      known status. This option is only available for APM Trace Analytics,
                      Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.
                      Valid values are: show_no_data, show_and_notify_no_data, resolve,
                      and default. Controls how groups or monitors are treated if
                      an evaluation does not return any data points. The default option
                      results in different behavior depending on the monitor query
                      type. For monitors using `Count` queries, an empty monitor evaluation
                      is treated as 0 and is compared to the threshold conditions.
                      For monitors using any query type other than `Count`, for example
                      `Gauge`, `Measure`, or `Rate`, the monitor shows the last known
                      status. This option is only available for APM Trace Analytics,
                      Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.
                      Valid values are: `show_no_data`, `show_and_notify_no_data`,
                      `resolve`, and `default`.'
                    type: string
                  priority:
                    description: (Number) Integer from 1 (high) to 5 (low) indicating
                      alert severity. Integer from 1 (high) to 5 (low) indicating
                      alert severity.
                    type: number
                  query:
                    description: "(String) The monitor query to notify on. Note this
                      is not the same query you see in the UI and the syntax is different
                      depending on the monitor type, please see the API Reference
                      for details. The monitor query to notify on. Note this is not
                      the same query you see in the UI and the syntax is different
                      depending on the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor)
                      for details. \n **Note:** APM latency data is now available
                      as Distribution Metrics. We strongly recommend updating monitor
                      definitions to query the new metrics.datadoghq.com/tracing/guide/ddsketch_trace_metrics/)."
                    type: string
                  renotifyInterval:
                    description: notify on the current status. It will only re-notify
                      if it's not resolved. The number of minutes after the last notification
                      before a monitor will re-notify on the current status. It will
                      only re-notify if it's not resolved.
                    type: number
                  renotifyOccurrences:
                    description: notification messages that should be sent on the
                      current status. The number of re-notification messages that
                      should be sent on the current status.
                    type: number
                  renotifyStatuses:
                    description: notification messages should be sent. Valid values
                      are alert, warn, no data. The types of statuses for which re-notification
                      messages should be sent. Valid values are `alert`, `warn`, `no
                      data`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  requireFullWindow:
                    description: (Boolean) A boolean indicating whether this monitor
                      needs a full window of data before it's evaluated. Datadog strongly
                      recommends you set this to false for sparse metrics, otherwise
                      some evaluations may be skipped. If there's a custom_schedule
                      set, require_full_window must be false and will be ignored.
                      Defaults to true. A boolean indicating whether this monitor
                      needs a full window of data before it's evaluated. Datadog strongly
                      recommends you set this to `false` for sparse metrics, otherwise
                      some evaluations may be skipped. If there's a custom_schedule
                      set, `require_full_window` must be false and will be ignored.
                      Defaults to `true`.
                    type: boolean
                  restrictedRoles:
                    description: (Set of String) A list of unique role identifiers
                      to define which roles are allowed to edit the monitor. Editing
                      a monitor includes any updates to the monitor configuration,
                      monitor deletion, and muting of the monitor for any amount of
                      time. Roles unique identifiers can be pulled from the Roles
                      API in the data.id field. A list of unique role identifiers
                      to define which roles are allowed to edit the monitor. Editing
                      a monitor includes any updates to the monitor configuration,
                      monitor deletion, and muting of the monitor for any amount of
                      time. Roles unique identifiers can be pulled from the [Roles
                      API](https://docs.datadoghq.com/api/latest/roles/#list-roles)
                      in the `data.id` field.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  schedulingOptions:
                    description: (Block List) Configuration options for scheduling.
                      (see below for nested schema) Configuration options for scheduling.
                    items:
                      properties:
                        customSchedule:
                          description: (Block List) Configuration options for the
                            custom schedules. If start is omitted, the monitor creation
                            time will be used. (see below for nested schema) Configuration
                            options for the custom schedules. If `start` is omitted,
                            the monitor creation time will be used.
                          items:
                            properties:
                              recurrence:
                                description: '(Block List, Min: 1, Max: 1) A list
                                  of recurrence definitions. Length must be 1. (see
                                  below for nested schema) A list of recurrence definitions.
                                  Length must be 1.'
                                items:
                                  properties:
                                    rrule:
                                      description: (String) Must be a valid rrule.
                                        See API docs for supported fields Must be
                                        a valid `rrule`. See API docs for supported
                                        fields
                                      type: string
                                    start:
                                      description: MM-DDThh:mm:ss' Time to start recurrence
                                        cycle. Similar to DTSTART. Expected format
                                        'YYYY-MM-DDThh:mm:ss'
                                      type: string
                                    timezone:
                                      description: '(String) ''tz database'' format.
                                        Example: America/New_York or UTC ''tz database''
                                        format. Example: `America/New_York` or `UTC`'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        evaluationWindow:
                          description: (Block List) Configuration options for the
                            evaluation window. If hour_starts is set, no other fields
                            may be set. Otherwise, day_starts and month_starts must
                            be set together. (see below for nested schema) Configuration
                            options for the evaluation window. If `hour_starts` is
                            set, no other fields may be set. Otherwise, `day_starts`
                            and `month_starts` must be set together.
                          items:
                            properties:
                              dayStarts:
                                description: (String) The time of the day at which
                                  a one day cumulative evaluation window starts. Must
                                  be defined in UTC time in HH:mm format. The time
                                  of the day at which a one day cumulative evaluation
                                  window starts. Must be defined in UTC time in `HH:mm`
                                  format.
                                type: string
                              hourStarts:
                                description: (Number) The minute of the hour at which
                                  a one hour cumulative evaluation window starts.
                                  Must be between 0 and 59. The minute of the hour
                                  at which a one hour cumulative evaluation window
                                  starts. Must be between 0 and 59.
                                type: number
                              monthStarts:
                                description: (Number) The day of the month at which
                                  a one month cumulative evaluation window starts.
                                  Must be a value of 1. The day of the month at which
                                  a one month cumulative evaluation window starts.
                                  Must be a value of 1.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    description: '(Set of String) A list of tags to associate with
                      your monitor. This can help you categorize and filter monitors
                      in the manage monitors page of the UI. Note: it''s not currently
                      possible to filter by these tags when querying via the API A
                      list of tags to associate with your monitor. This can help you
                      categorize and filter monitors in the manage monitors page of
                      the UI. Note: it''s not currently possible to filter by these
                      tags when querying via the API'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  timeoutH:
                    description: (Number) The number of hours of the monitor not reporting
                      data before it automatically resolves from a triggered state.
                      The minimum allowed value is 0 hours. The maximum allowed value
                      is 24 hours. The number of hours of the monitor not reporting
                      data before it automatically resolves from a triggered state.
                      The minimum allowed value is 0 hours. The maximum allowed value
                      is 24 hours.
                    type: number
                  type:
                    description: 'analytics alert, slo alert, event-v2 alert, audit
                      alert, ci-pipelines alert, ci-tests alert, error-tracking alert,
                      database-monitoring alert. The type of the monitor. The mapping
                      from these types to the types found in the Datadog Web UI can
                      be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor).
                      Note: The monitor type cannot be changed after a monitor is
                      created. Valid values are `composite`, `event alert`, `log alert`,
                      `metric alert`, `process alert`, `query alert`, `rum alert`,
                      `service check`, `synthetics alert`, `trace-analytics alert`,
                      `slo alert`, `event-v2 alert`, `audit alert`, `ci-pipelines
                      alert`, `ci-tests alert`, `error-tracking alert`, `database-monitoring
                      alert`.'
                    type: string
                  validate:
                    description: (Boolean) If set to false, skip the validation call
                      done during plan. If set to `false`, skip the validation call
                      done during plan.
                    type: boolean
                  variables:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        eventQuery:
                          description: (Block List) A timeseries formula and functions
                            events query. (see below for nested schema) A timeseries
                            formula and functions events query.
                          items:
                            properties:
                              compute:
                                description: '(Block List, Min: 1) The compute options.
                                  (see below for nested schema) The compute options.'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String) The aggregation methods
                                        for event platform queries. Valid values are
                                        count, cardinality, median, pc75, pc90, pc95,
                                        pc98, pc99, sum, min, max, avg. The aggregation
                                        methods for event platform queries. Valid
                                        values are `count`, `cardinality`, `median`,
                                        `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`,
                                        `min`, `max`, `avg`.
                                      type: string
                                    interval:
                                      description: (Number) A time interval in milliseconds.
                                        A time interval in milliseconds.
                                      type: number
                                    metric:
                                      description: (String) The measurable attribute
                                        to compute. The measurable attribute to compute.
                                      type: string
                                  type: object
                                type: array
                              dataSource:
                                description: based queries. Valid values are rum,
                                  ci_pipelines, ci_tests, audit, events, logs, spans,
                                  database_queries. The data source for event platform-based
                                  queries. Valid values are `rum`, `ci_pipelines`,
                                  `ci_tests`, `audit`, `events`, `logs`, `spans`,
                                  `database_queries`.
                                type: string
                              groupBy:
                                description: (Block List) Group by options. (see below
                                  for nested schema) Group by options.
                                items:
                                  properties:
                                    facet:
                                      description: (String) The event facet. The event
                                        facet.
                                      type: string
                                    limit:
                                      description: (Number) The number of groups to
                                        return. The number of groups to return.
                                      type: number
                                    sort:
                                      description: '(Block List, Max: 1) The options
                                        for sorting group by results. (see below for
                                        nested schema) The options for sorting group
                                        by results.'
                                      items:
                                        properties:
                                          aggregation:
                                            description: (String) The aggregation
                                              methods for event platform queries.
                                              Valid values are count, cardinality,
                                              median, pc75, pc90, pc95, pc98, pc99,
                                              sum, min, max, avg. The aggregation
                                              methods for the event platform queries.
                                              Valid values are `count`, `cardinality`,
                                              `median`, `pc75`, `pc90`, `pc95`, `pc98`,
                                              `pc99`, `sum`, `min`, `max`, `avg`.
                                            type: string
                                          metric:
                                            description: (String) The measurable attribute
                                              to compute. The metric used for sorting
                                              group by results.
                                            type: string
                                          order:
                                            description: (String) Direction of sort.
                                              Valid values are asc, desc. Direction
                                              of sort. Valid values are `asc`, `desc`.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              indexes:
                                description: (List of String) An array of index names
                                  to query in the stream. An array of index names
                                  to query in the stream.
                                items:
                                  type: string
                                type: array
                              name:
                                description: (String) Name of Datadog monitor. The
                                  name of query for use in formulas.
                                type: string
                              search:
                                description: '(Block List, Min: 1, Max: 1) The search
                                  options. (see below for nested schema) The search
                                  options.'
                                items:
                                  properties:
                                    query:
                                      description: (String) The monitor query to notify
                                        on. Note this is not the same query you see
                                        in the UI and the syntax is different depending
                                        on the monitor type, please see the API Reference
                                        for details. The events search string.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.message is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.message)
                || (has(self.initProvider) && has(self.initProvider.message))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.query is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.query)
                || (has(self.initProvider) && has(self.initProvider.query))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: MonitorStatus defines the observed state of Monitor.
            properties:
              atProvider:
                properties:
                  enableLogsSample:
                    description: (Boolean) A boolean indicating whether or not to
                      include a list of log values which triggered the alert. This
                      is only used by log monitors. Defaults to false. A boolean indicating
                      whether or not to include a list of log values which triggered
                      the alert. This is only used by log monitors. Defaults to `false`.
                    type: boolean
                  enableSamples:
                    description: (Boolean) Whether or not a list of samples which
                      triggered the alert is included. This is only used by CI Test
                      and Pipeline monitors. Whether or not a list of samples which
                      triggered the alert is included. This is only used by CI Test
                      and Pipeline monitors.
                    type: boolean
                  escalationMessage:
                    description: notification. Supports the @username notification
                      allowed elsewhere. A message to include with a re-notification.
                      Supports the `@username` notification allowed elsewhere.
                    type: string
                  evaluationDelay:
                    description: "negative integer. (Only applies to metric alert)
                      Time (in seconds) to delay evaluation, as a non-negative integer.
                      \n For example, if the value is set to `300` (5min), the `timeframe`
                      is set to `last_5m` and the time is 7:00, the monitor will evaluate
                      data from 6:50 to 6:55. This is useful for AWS CloudWatch and
                      other backfilled metrics to ensure the monitor will always have
                      data during evaluation."
                    type: number
                  forceDelete:
                    description: (Boolean) A boolean indicating whether this monitor
                      can be deleted even if it’s referenced by other resources (e.g.
                      SLO, composite monitor). A boolean indicating whether this monitor
                      can be deleted even if it’s referenced by other resources (e.g.
                      SLO, composite monitor).
                    type: boolean
                  groupRetentionDuration:
                    description: '(String) The time span after which groups with missing
                      data are dropped from the monitor state. The minimum value is
                      one hour, and the maximum value is 72 hours. Example values
                      are: 60m, 1h, and 2d. This option is only available for APM
                      Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs,
                      and RUM monitors. The time span after which groups with missing
                      data are dropped from the monitor state. The minimum value is
                      one hour, and the maximum value is 72 hours. Example values
                      are: 60m, 1h, and 2d. This option is only available for APM
                      Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs,
                      and RUM monitors.'
                    type: string
                  groupbySimpleMonitor:
                    description: (Boolean) Whether or not to trigger one alert if
                      any source breaches a threshold. This is only used by log monitors.
                      Defaults to false. Whether or not to trigger one alert if any
                      source breaches a threshold. This is only used by log monitors.
                      Defaults to `false`.
                    type: boolean
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  includeTags:
                    description: (Boolean) A boolean indicating whether notifications
                      from this monitor automatically insert its triggering tags into
                      the title. Defaults to true. A boolean indicating whether notifications
                      from this monitor automatically insert its triggering tags into
                      the title. Defaults to `true`.
                    type: boolean
                  locked:
                    description: (Boolean, Deprecated) A boolean indicating whether
                      changes to this monitor should be restricted to the creator
                      or admins. Defaults to false. Deprecated. Use restricted_roles.
                      A boolean indicating whether changes to this monitor should
                      be restricted to the creator or admins. Defaults to `false`.
                      **Deprecated.** Use `restricted_roles`.
                    type: boolean
                  message:
                    description: "(String) A message to include with notifications
                      for this monitor. A message to include with notifications for
                      this monitor. \n Email notifications can be sent to specific
                      users by using the same `@username` notation as events."
                    type: string
                  monitorThresholdWindows:
                    description: '(Block List, Max: 1) A mapping containing recovery_window
                      and trigger_window values, e.g. last_15m . Can only be used
                      for, and are required for, anomaly monitors. (see below for
                      nested schema) A mapping containing `recovery_window` and `trigger_window`
                      values, e.g. `last_15m` . Can only be used for, and are required
                      for, anomaly monitors.'
                    items:
                      properties:
                        recoveryWindow:
                          description: (String) Describes how long an anomalous metric
                            must be normal before the alert recovers. Describes how
                            long an anomalous metric must be normal before the alert
                            recovers.
                          type: string
                        triggerWindow:
                          description: (String) Describes how long a metric must be
                            anomalous before an alert triggers. Describes how long
                            a metric must be anomalous before an alert triggers.
                          type: string
                      type: object
                    type: array
                  monitorThresholds:
                    description: '(Block List, Max: 1) Alert thresholds of the monitor.
                      (see below for nested schema) Alert thresholds of the monitor.'
                    items:
                      properties:
                        critical:
                          description: (String) The monitor CRITICAL threshold. Must
                            be a number. The monitor `CRITICAL` threshold. Must be
                            a number.
                          type: string
                        criticalRecovery:
                          description: (String) The monitor CRITICAL recovery threshold.
                            Must be a number. The monitor `CRITICAL` recovery threshold.
                            Must be a number.
                          type: string
                        ok:
                          description: (String) The monitor OK threshold. Only supported
                            in monitor type service check. Must be a number. The monitor
                            `OK` threshold. Only supported in monitor type `service
                            check`. Must be a number.
                          type: string
                        unknown:
                          description: (String) The monitor UNKNOWN threshold. Only
                            supported in monitor type service check. Must be a number.
                            The monitor `UNKNOWN` threshold. Only supported in monitor
                            type `service check`. Must be a number.
                          type: string
                        warning:
                          description: (String) The monitor WARNING threshold. Must
                            be a number. The monitor `WARNING` threshold. Must be
                            a number.
                          type: string
                        warningRecovery:
                          description: (String) The monitor WARNING recovery threshold.
                            Must be a number. The monitor `WARNING` recovery threshold.
                            Must be a number.
                          type: string
                      type: object
                    type: array
                  name:
                    description: (String) Name of Datadog monitor. Name of Datadog
                      monitor.
                    type: string
                  newGroupDelay:
                    description: "(Number) The time (in seconds) to skip evaluations
                      for new groups. The time (in seconds) to skip evaluations for
                      new groups. \n `new_group_delay` overrides `new_host_delay`
                      if it is set to a nonzero value."
                    type: number
                  newHostDelay:
                    description: negative integer. This value is ignored for simple
                      monitors and monitors not grouped by host. The only case when
                      this should be used is to override the default and set new_host_delay
                      to zero for monitors grouped by host. Deprecated. Use new_group_delay
                      except when setting new_host_delay to zero. Defaults to 300.
                      **Deprecated**. See `new_group_delay`. Time (in seconds) to
                      allow a host to boot and applications to fully start before
                      starting the evaluation of monitor results. Should be a non-negative
                      integer. This value is ignored for simple monitors and monitors
                      not grouped by host. The only case when this should be used
                      is to override the default and set `new_host_delay` to zero
                      for monitors grouped by host. **Deprecated.** Use `new_group_delay`
                      except when setting `new_host_delay` to zero. Defaults to `300`.
                    type: number
                  noDataTimeframe:
                    description: "(Number) The number of minutes before a monitor
                      will notify when data stops reporting. The number of minutes
                      before a monitor will notify when data stops reporting. \n We
                      recommend at least 2x the monitor timeframe for metric alerts
                      or 2 minutes for service checks. Defaults to `10`."
                    type: number
                  notificationPresetName:
                    description: (String) Toggles the display of additional content
                      sent in the monitor notification. Valid values are show_all,
                      hide_query, hide_handles, hide_all. Toggles the display of additional
                      content sent in the monitor notification. Valid values are `show_all`,
                      `hide_query`, `hide_handles`, `hide_all`.
                    type: string
                  notifyAudit:
                    description: (Boolean) A boolean indicating whether tagged users
                      will be notified on changes to this monitor. Defaults to false.
                      A boolean indicating whether tagged users will be notified on
                      changes to this monitor. Defaults to `false`.
                    type: boolean
                  notifyBy:
                    description: alert. Controls what granularity a monitor alerts
                      on. Only available for monitors with groupings. For instance,
                      a monitor grouped by `cluster`, `namespace`, and `pod` can be
                      configured to only notify on each new `cluster` violating the
                      alert conditions by setting `notify_by` to `['cluster']`. Tags
                      mentioned in `notify_by` must be a subset of the grouping tags
                      in the query. For example, a query grouped by `cluster` and
                      `namespace` cannot notify on `region`. Setting `notify_by` to
                      `[*]` configures the monitor to notify as a simple-alert.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  notifyNoData:
                    description: (Boolean) A boolean indicating whether this monitor
                      will notify when data stops reporting. Defaults to false. A
                      boolean indicating whether this monitor will notify when data
                      stops reporting. Defaults to `false`.
                    type: boolean
                  onMissingData:
                    description: '(String) Controls how groups or monitors are treated
                      if an evaluation does not return any data points. The default
                      option results in different behavior depending on the monitor
                      query type. For monitors using Count queries, an empty monitor
                      evaluation is treated as 0 and is compared to the threshold
                      conditions. For monitors using any query type other than Count,
                      for example Gauge, Measure, or Rate, the monitor shows the last
                      known status. This option is only available for APM Trace Analytics,
                      Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.
                      Valid values are: show_no_data, show_and_notify_no_data, resolve,
                      and default. Controls how groups or monitors are treated if
                      an evaluation does not return any data points. The default option
                      results in different behavior depending on the monitor query
                      type. For monitors using `Count` queries, an empty monitor evaluation
                      is treated as 0 and is compared to the threshold conditions.
                      For monitors using any query type other than `Count`, for example
                      `Gauge`, `Measure`, or `Rate`, the monitor shows the last known
                      status. This option is only available for APM Trace Analytics,
                      Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors.
                      Valid values are: `show_no_data`, `show_and_notify_no_data`,
                      `resolve`, and `default`.'
                    type: string
                  priority:
                    description: (Number) Integer from 1 (high) to 5 (low) indicating
                      alert severity. Integer from 1 (high) to 5 (low) indicating
                      alert severity.
                    type: number
                  query:
                    description: "(String) The monitor query to notify on. Note this
                      is not the same query you see in the UI and the syntax is different
                      depending on the monitor type, please see the API Reference
                      for details. The monitor query to notify on. Note this is not
                      the same query you see in the UI and the syntax is different
                      depending on the monitor type, please see the [API Reference](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor)
                      for details. \n **Note:** APM latency data is now available
                      as Distribution Metrics. We strongly recommend updating monitor
                      definitions to query the new metrics.datadoghq.com/tracing/guide/ddsketch_trace_metrics/)."
                    type: string
                  renotifyInterval:
                    description: notify on the current status. It will only re-notify
                      if it's not resolved. The number of minutes after the last notification
                      before a monitor will re-notify on the current status. It will
                      only re-notify if it's not resolved.
                    type: number
                  renotifyOccurrences:
                    description: notification messages that should be sent on the
                      current status. The number of re-notification messages that
                      should be sent on the current status.
                    type: number
                  renotifyStatuses:
                    description: notification messages should be sent. Valid values
                      are alert, warn, no data. The types of statuses for which re-notification
                      messages should be sent. Valid values are `alert`, `warn`, `no
                      data`.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  requireFullWindow:
                    description: (Boolean) A boolean indicating whether this monitor
                      needs a full window of data before it's evaluated. Datadog strongly
                      recommends you set this to false for sparse metrics, otherwise
                      some evaluations may be skipped. If there's a custom_schedule
                      set, require_full_window must be false and will be ignored.
                      Defaults to true. A boolean indicating whether this monitor
                      needs a full window of data before it's evaluated. Datadog strongly
                      recommends you set this to `false` for sparse metrics, otherwise
                      some evaluations may be skipped. If there's a custom_schedule
                      set, `require_full_window` must be false and will be ignored.
                      Defaults to `true`.
                    type: boolean
                  restrictedRoles:
                    description: (Set of String) A list of unique role identifiers
                      to define which roles are allowed to edit the monitor. Editing
                      a monitor includes any updates to the monitor configuration,
                      monitor deletion, and muting of the monitor for any amount of
                      time. Roles unique identifiers can be pulled from the Roles
                      API in the data.id field. A list of unique role identifiers
                      to define which roles are allowed to edit the monitor. Editing
                      a monitor includes any updates to the monitor configuration,
                      monitor deletion, and muting of the monitor for any amount of
                      time. Roles unique identifiers can be pulled from the [Roles
                      API](https://docs.datadoghq.com/api/latest/roles/#list-roles)
                      in the `data.id` field.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  schedulingOptions:
                    description: (Block List) Configuration options for scheduling.
                      (see below for nested schema) Configuration options for scheduling.
                    items:
                      properties:
                        customSchedule:
                          description: (Block List) Configuration options for the
                            custom schedules. If start is omitted, the monitor creation
                            time will be used. (see below for nested schema) Configuration
                            options for the custom schedules. If `start` is omitted,
                            the monitor creation time will be used.
                          items:
                            properties:
                              recurrence:
                                description: '(Block List, Min: 1, Max: 1) A list
                                  of recurrence definitions. Length must be 1. (see
                                  below for nested schema) A list of recurrence definitions.
                                  Length must be 1.'
                                items:
                                  properties:
                                    rrule:
                                      description: (String) Must be a valid rrule.
                                        See API docs for supported fields Must be
                                        a valid `rrule`. See API docs for supported
                                        fields
                                      type: string
                                    start:
                                      description: MM-DDThh:mm:ss' Time to start recurrence
                                        cycle. Similar to DTSTART. Expected format
                                        'YYYY-MM-DDThh:mm:ss'
                                      type: string
                                    timezone:
                                      description: '(String) ''tz database'' format.
                                        Example: America/New_York or UTC ''tz database''
                                        format. Example: `America/New_York` or `UTC`'
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        evaluationWindow:
                          description: (Block List) Configuration options for the
                            evaluation window. If hour_starts is set, no other fields
                            may be set. Otherwise, day_starts and month_starts must
                            be set together. (see below for nested schema) Configuration
                            options for the evaluation window. If `hour_starts` is
                            set, no other fields may be set. Otherwise, `day_starts`
                            and `month_starts` must be set together.
                          items:
                            properties:
                              dayStarts:
                                description: (String) The time of the day at which
                                  a one day cumulative evaluation window starts. Must
                                  be defined in UTC time in HH:mm format. The time
                                  of the day at which a one day cumulative evaluation
                                  window starts. Must be defined in UTC time in `HH:mm`
                                  format.
                                type: string
                              hourStarts:
                                description: (Number) The minute of the hour at which
                                  a one hour cumulative evaluation window starts.
                                  Must be between 0 and 59. The minute of the hour
                                  at which a one hour cumulative evaluation window
                                  starts. Must be between 0 and 59.
                                type: number
                              monthStarts:
                                description: (Number) The day of the month at which
                                  a one month cumulative evaluation window starts.
                                  Must be a value of 1. The day of the month at which
                                  a one month cumulative evaluation window starts.
                                  Must be a value of 1.
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  tags:
                    description: '(Set of String) A list of tags to associate with
                      your monitor. This can help you categorize and filter monitors
                      in the manage monitors page of the UI. Note: it''s not currently
                      possible to filter by these tags when querying via the API A
                      list of tags to associate with your monitor. This can help you
                      categorize and filter monitors in the manage monitors page of
                      the UI. Note: it''s not currently possible to filter by these
                      tags when querying via the API'
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  timeoutH:
                    description: (Number) The number of hours of the monitor not reporting
                      data before it automatically resolves from a triggered state.
                      The minimum allowed value is 0 hours. The maximum allowed value
                      is 24 hours. The number of hours of the monitor not reporting
                      data before it automatically resolves from a triggered state.
                      The minimum allowed value is 0 hours. The maximum allowed value
                      is 24 hours.
                    type: number
                  type:
                    description: 'analytics alert, slo alert, event-v2 alert, audit
                      alert, ci-pipelines alert, ci-tests alert, error-tracking alert,
                      database-monitoring alert. The type of the monitor. The mapping
                      from these types to the types found in the Datadog Web UI can
                      be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/monitors/#create-a-monitor).
                      Note: The monitor type cannot be changed after a monitor is
                      created. Valid values are `composite`, `event alert`, `log alert`,
                      `metric alert`, `process alert`, `query alert`, `rum alert`,
                      `service check`, `synthetics alert`, `trace-analytics alert`,
                      `slo alert`, `event-v2 alert`, `audit alert`, `ci-pipelines
                      alert`, `ci-tests alert`, `error-tracking alert`, `database-monitoring
                      alert`.'
                    type: string
                  validate:
                    description: (Boolean) If set to false, skip the validation call
                      done during plan. If set to `false`, skip the validation call
                      done during plan.
                    type: boolean
                  variables:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        eventQuery:
                          description: (Block List) A timeseries formula and functions
                            events query. (see below for nested schema) A timeseries
                            formula and functions events query.
                          items:
                            properties:
                              compute:
                                description: '(Block List, Min: 1) The compute options.
                                  (see below for nested schema) The compute options.'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String) The aggregation methods
                                        for event platform queries. Valid values are
                                        count, cardinality, median, pc75, pc90, pc95,
                                        pc98, pc99, sum, min, max, avg. The aggregation
                                        methods for event platform queries. Valid
                                        values are `count`, `cardinality`, `median`,
                                        `pc75`, `pc90`, `pc95`, `pc98`, `pc99`, `sum`,
                                        `min`, `max`, `avg`.
                                      type: string
                                    interval:
                                      description: (Number) A time interval in milliseconds.
                                        A time interval in milliseconds.
                                      type: number
                                    metric:
                                      description: (String) The measurable attribute
                                        to compute. The measurable attribute to compute.
                                      type: string
                                  type: object
                                type: array
                              dataSource:
                                description: based queries. Valid values are rum,
                                  ci_pipelines, ci_tests, audit, events, logs, spans,
                                  database_queries. The data source for event platform-based
                                  queries. Valid values are `rum`, `ci_pipelines`,
                                  `ci_tests`, `audit`, `events`, `logs`, `spans`,
                                  `database_queries`.
                                type: string
                              groupBy:
                                description: (Block List) Group by options. (see below
                                  for nested schema) Group by options.
                                items:
                                  properties:
                                    facet:
                                      description: (String) The event facet. The event
                                        facet.
                                      type: string
                                    limit:
                                      description: (Number) The number of groups to
                                        return. The number of groups to return.
                                      type: number
                                    sort:
                                      description: '(Block List, Max: 1) The options
                                        for sorting group by results. (see below for
                                        nested schema) The options for sorting group
                                        by results.'
                                      items:
                                        properties:
                                          aggregation:
                                            description: (String) The aggregation
                                              methods for event platform queries.
                                              Valid values are count, cardinality,
                                              median, pc75, pc90, pc95, pc98, pc99,
                                              sum, min, max, avg. The aggregation
                                              methods for the event platform queries.
                                              Valid values are `count`, `cardinality`,
                                              `median`, `pc75`, `pc90`, `pc95`, `pc98`,
                                              `pc99`, `sum`, `min`, `max`, `avg`.
                                            type: string
                                          metric:
                                            description: (String) The measurable attribute
                                              to compute. The metric used for sorting
                                              group by results.
                                            type: string
                                          order:
                                            description: (String) Direction of sort.
                                              Valid values are asc, desc. Direction
                                              of sort. Valid values are `asc`, `desc`.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              indexes:
                                description: (List of String) An array of index names
                                  to query in the stream. An array of index names
                                  to query in the stream.
                                items:
                                  type: string
                                type: array
                              name:
                                description: (String) Name of Datadog monitor. The
                                  name of query for use in formulas.
                                type: string
                              search:
                                description: '(Block List, Min: 1, Max: 1) The search
                                  options. (see below for nested schema) The search
                                  options.'
                                items:
                                  properties:
                                    query:
                                      description: (String) The monitor query to notify
                                        on. Note this is not the same query you see
                                        in the UI and the syntax is different depending
                                        on the monitor type, please see the API Reference
                                        for details. The events search string.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

