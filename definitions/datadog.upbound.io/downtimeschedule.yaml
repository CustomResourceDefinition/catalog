---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: downtimeschedules.datadog.upbound.io
spec:
  group: datadog.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - datadog
    kind: DowntimeSchedule
    listKind: DowntimeScheduleList
    plural: downtimeschedules
    singular: downtimeschedule
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DowntimeSchedule is the Schema for the DowntimeSchedules API.
          Provides a Datadog DowntimeSchedule resource. This can be used to create
          and manage Datadog downtimes.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DowntimeScheduleSpec defines the desired state of DowntimeSchedule
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  displayTimezone:
                    description: (String) The timezone in which to display the downtime's
                      start and end times in Datadog applications. This is not used
                      as an offset for scheduling. The timezone in which to display
                      the downtime's start and end times in Datadog applications.
                      This is not used as an offset for scheduling.
                    type: string
                  message:
                    description: (String) A message to include with notifications
                      for this downtime. Email notifications can be sent to specific
                      users by using the same @username notation as events. A message
                      to include with notifications for this downtime. Email notifications
                      can be sent to specific users by using the same `@username`
                      notation as events.
                    type: string
                  monitorIdentifier:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      monitorId:
                        description: (Number) ID of the monitor to prevent notifications.
                          ID of the monitor to prevent notifications.
                        type: number
                      monitorTags:
                        description: (Set of String) A list of monitor tags. For example,
                          tags that are applied directly to monitors, not tags that
                          are used in monitor queries (which are filtered by the scope
                          parameter), to which the downtime applies. The resulting
                          downtime applies to monitors that match all provided monitor
                          tags. Setting monitor_tags to [*] configures the downtime
                          to mute all monitors for the given scope. A list of monitor
                          tags. For example, tags that are applied directly to monitors,
                          not tags that are used in monitor queries (which are filtered
                          by the scope parameter), to which the downtime applies.
                          The resulting downtime applies to monitors that match **all**
                          provided monitor tags. Setting `monitor_tags` to `[*]` configures
                          the downtime to mute all monitors for the given scope.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  muteFirstRecoveryNotification:
                    description: (Boolean) If the first recovery notification during
                      a downtime should be muted. If the first recovery notification
                      during a downtime should be muted.
                    type: boolean
                  notifyEndStates:
                    description: (Set of String) States that will trigger a monitor
                      notification when the notify_end_types action occurs. States
                      that will trigger a monitor notification when the `notify_end_types`
                      action occurs.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  notifyEndTypes:
                    description: (Set of String) Actions that will trigger a monitor
                      notification if the downtime is in the notify_end_types state.
                      Actions that will trigger a monitor notification if the downtime
                      is in the `notify_end_types` state.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  oneTimeSchedule:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      end:
                        description: 8601 Datetime to end the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime never
                          ends. ISO-8601 Datetime to end the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime never
                          ends.
                        type: string
                      start:
                        description: 8601 Datetime to start the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime starts
                          the moment it is created. ISO-8601 Datetime to start the
                          downtime. Must include a UTC offset of zero. If not provided,
                          the downtime starts the moment it is created.
                        type: string
                    type: object
                  recurringSchedule:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      recurrence:
                        description: (Block List) (see below for nested schema)
                        items:
                          properties:
                            duration:
                              description: (String) The length of the downtime. Must
                                begin with an integer and end with one of 'm', 'h',
                                d', or 'w'. The length of the downtime. Must begin
                                with an integer and end with one of 'm', 'h', d',
                                or 'w'.
                              type: string
                            rrule:
                              description: '(String) The RRULE standard for defining
                                recurring events. For example, to have a recurring
                                event on the first day of each month, set the type
                                to rrule and set the FREQ to MONTHLY and BYMONTHDAY
                                to 1. Most common rrule options from the iCalendar
                                Spec are supported.  Note: Attributes specifying the
                                duration in RRULE are not supported (for example,
                                DTSTART, DTEND, DURATION). More examples available
                                in this downtime guide. The `RRULE` standard for defining
                                recurring events. For example, to have a recurring
                                event on the first day of each month, set the type
                                to `rrule` and set the `FREQ` to `MONTHLY` and `BYMONTHDAY`
                                to `1`. Most common `rrule` options from the [iCalendar
                                Spec](https://tools.ietf.org/html/rfc5545) are supported.  **Note**:
                                Attributes specifying the duration in `RRULE` are
                                not supported (for example, `DTSTART`, `DTEND`, `DURATION`).
                                More examples available in this [downtime guide](https://docs.datadoghq.com/monitors/guide/suppress-alert-with-downtimes/?tab=api).'
                              type: string
                            start:
                              description: 8601 Datetime to start the downtime. Must
                                include a UTC offset of zero. If not provided, the
                                downtime starts the moment it is created. ISO-8601
                                Datetime to start the downtime. Must not include a
                                UTC offset. If not provided, the downtime starts the
                                moment it is created.
                              type: string
                          type: object
                        type: array
                      timezone:
                        description: (String) The timezone in which to schedule the
                          downtime. The timezone in which to schedule the downtime.
                        type: string
                    type: object
                  scope:
                    description: (String) The scope to which the downtime applies.
                      Must follow the common search syntax. The scope to which the
                      downtime applies. Must follow the [common search syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  displayTimezone:
                    description: (String) The timezone in which to display the downtime's
                      start and end times in Datadog applications. This is not used
                      as an offset for scheduling. The timezone in which to display
                      the downtime's start and end times in Datadog applications.
                      This is not used as an offset for scheduling.
                    type: string
                  message:
                    description: (String) A message to include with notifications
                      for this downtime. Email notifications can be sent to specific
                      users by using the same @username notation as events. A message
                      to include with notifications for this downtime. Email notifications
                      can be sent to specific users by using the same `@username`
                      notation as events.
                    type: string
                  monitorIdentifier:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      monitorId:
                        description: (Number) ID of the monitor to prevent notifications.
                          ID of the monitor to prevent notifications.
                        type: number
                      monitorTags:
                        description: (Set of String) A list of monitor tags. For example,
                          tags that are applied directly to monitors, not tags that
                          are used in monitor queries (which are filtered by the scope
                          parameter), to which the downtime applies. The resulting
                          downtime applies to monitors that match all provided monitor
                          tags. Setting monitor_tags to [*] configures the downtime
                          to mute all monitors for the given scope. A list of monitor
                          tags. For example, tags that are applied directly to monitors,
                          not tags that are used in monitor queries (which are filtered
                          by the scope parameter), to which the downtime applies.
                          The resulting downtime applies to monitors that match **all**
                          provided monitor tags. Setting `monitor_tags` to `[*]` configures
                          the downtime to mute all monitors for the given scope.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  muteFirstRecoveryNotification:
                    description: (Boolean) If the first recovery notification during
                      a downtime should be muted. If the first recovery notification
                      during a downtime should be muted.
                    type: boolean
                  notifyEndStates:
                    description: (Set of String) States that will trigger a monitor
                      notification when the notify_end_types action occurs. States
                      that will trigger a monitor notification when the `notify_end_types`
                      action occurs.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  notifyEndTypes:
                    description: (Set of String) Actions that will trigger a monitor
                      notification if the downtime is in the notify_end_types state.
                      Actions that will trigger a monitor notification if the downtime
                      is in the `notify_end_types` state.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  oneTimeSchedule:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      end:
                        description: 8601 Datetime to end the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime never
                          ends. ISO-8601 Datetime to end the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime never
                          ends.
                        type: string
                      start:
                        description: 8601 Datetime to start the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime starts
                          the moment it is created. ISO-8601 Datetime to start the
                          downtime. Must include a UTC offset of zero. If not provided,
                          the downtime starts the moment it is created.
                        type: string
                    type: object
                  recurringSchedule:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      recurrence:
                        description: (Block List) (see below for nested schema)
                        items:
                          properties:
                            duration:
                              description: (String) The length of the downtime. Must
                                begin with an integer and end with one of 'm', 'h',
                                d', or 'w'. The length of the downtime. Must begin
                                with an integer and end with one of 'm', 'h', d',
                                or 'w'.
                              type: string
                            rrule:
                              description: '(String) The RRULE standard for defining
                                recurring events. For example, to have a recurring
                                event on the first day of each month, set the type
                                to rrule and set the FREQ to MONTHLY and BYMONTHDAY
                                to 1. Most common rrule options from the iCalendar
                                Spec are supported.  Note: Attributes specifying the
                                duration in RRULE are not supported (for example,
                                DTSTART, DTEND, DURATION). More examples available
                                in this downtime guide. The `RRULE` standard for defining
                                recurring events. For example, to have a recurring
                                event on the first day of each month, set the type
                                to `rrule` and set the `FREQ` to `MONTHLY` and `BYMONTHDAY`
                                to `1`. Most common `rrule` options from the [iCalendar
                                Spec](https://tools.ietf.org/html/rfc5545) are supported.  **Note**:
                                Attributes specifying the duration in `RRULE` are
                                not supported (for example, `DTSTART`, `DTEND`, `DURATION`).
                                More examples available in this [downtime guide](https://docs.datadoghq.com/monitors/guide/suppress-alert-with-downtimes/?tab=api).'
                              type: string
                            start:
                              description: 8601 Datetime to start the downtime. Must
                                include a UTC offset of zero. If not provided, the
                                downtime starts the moment it is created. ISO-8601
                                Datetime to start the downtime. Must not include a
                                UTC offset. If not provided, the downtime starts the
                                moment it is created.
                              type: string
                          type: object
                        type: array
                      timezone:
                        description: (String) The timezone in which to schedule the
                          downtime. The timezone in which to schedule the downtime.
                        type: string
                    type: object
                  scope:
                    description: (String) The scope to which the downtime applies.
                      Must follow the common search syntax. The scope to which the
                      downtime applies. Must follow the [common search syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.recurringSchedule is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.recurringSchedule)
                || (has(self.initProvider) && has(self.initProvider.recurringSchedule))'
            - message: spec.forProvider.scope is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scope)
                || (has(self.initProvider) && has(self.initProvider.scope))'
          status:
            description: DowntimeScheduleStatus defines the observed state of DowntimeSchedule.
            properties:
              atProvider:
                properties:
                  displayTimezone:
                    description: (String) The timezone in which to display the downtime's
                      start and end times in Datadog applications. This is not used
                      as an offset for scheduling. The timezone in which to display
                      the downtime's start and end times in Datadog applications.
                      This is not used as an offset for scheduling.
                    type: string
                  id:
                    description: (String) The ID of this resource.
                    type: string
                  message:
                    description: (String) A message to include with notifications
                      for this downtime. Email notifications can be sent to specific
                      users by using the same @username notation as events. A message
                      to include with notifications for this downtime. Email notifications
                      can be sent to specific users by using the same `@username`
                      notation as events.
                    type: string
                  monitorIdentifier:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      monitorId:
                        description: (Number) ID of the monitor to prevent notifications.
                          ID of the monitor to prevent notifications.
                        type: number
                      monitorTags:
                        description: (Set of String) A list of monitor tags. For example,
                          tags that are applied directly to monitors, not tags that
                          are used in monitor queries (which are filtered by the scope
                          parameter), to which the downtime applies. The resulting
                          downtime applies to monitors that match all provided monitor
                          tags. Setting monitor_tags to [*] configures the downtime
                          to mute all monitors for the given scope. A list of monitor
                          tags. For example, tags that are applied directly to monitors,
                          not tags that are used in monitor queries (which are filtered
                          by the scope parameter), to which the downtime applies.
                          The resulting downtime applies to monitors that match **all**
                          provided monitor tags. Setting `monitor_tags` to `[*]` configures
                          the downtime to mute all monitors for the given scope.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                    type: object
                  muteFirstRecoveryNotification:
                    description: (Boolean) If the first recovery notification during
                      a downtime should be muted. If the first recovery notification
                      during a downtime should be muted.
                    type: boolean
                  notifyEndStates:
                    description: (Set of String) States that will trigger a monitor
                      notification when the notify_end_types action occurs. States
                      that will trigger a monitor notification when the `notify_end_types`
                      action occurs.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  notifyEndTypes:
                    description: (Set of String) Actions that will trigger a monitor
                      notification if the downtime is in the notify_end_types state.
                      Actions that will trigger a monitor notification if the downtime
                      is in the `notify_end_types` state.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: set
                  oneTimeSchedule:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      end:
                        description: 8601 Datetime to end the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime never
                          ends. ISO-8601 Datetime to end the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime never
                          ends.
                        type: string
                      start:
                        description: 8601 Datetime to start the downtime. Must include
                          a UTC offset of zero. If not provided, the downtime starts
                          the moment it is created. ISO-8601 Datetime to start the
                          downtime. Must include a UTC offset of zero. If not provided,
                          the downtime starts the moment it is created.
                        type: string
                    type: object
                  recurringSchedule:
                    description: (Block, Optional) (see below for nested schema)
                    properties:
                      recurrence:
                        description: (Block List) (see below for nested schema)
                        items:
                          properties:
                            duration:
                              description: (String) The length of the downtime. Must
                                begin with an integer and end with one of 'm', 'h',
                                d', or 'w'. The length of the downtime. Must begin
                                with an integer and end with one of 'm', 'h', d',
                                or 'w'.
                              type: string
                            rrule:
                              description: '(String) The RRULE standard for defining
                                recurring events. For example, to have a recurring
                                event on the first day of each month, set the type
                                to rrule and set the FREQ to MONTHLY and BYMONTHDAY
                                to 1. Most common rrule options from the iCalendar
                                Spec are supported.  Note: Attributes specifying the
                                duration in RRULE are not supported (for example,
                                DTSTART, DTEND, DURATION). More examples available
                                in this downtime guide. The `RRULE` standard for defining
                                recurring events. For example, to have a recurring
                                event on the first day of each month, set the type
                                to `rrule` and set the `FREQ` to `MONTHLY` and `BYMONTHDAY`
                                to `1`. Most common `rrule` options from the [iCalendar
                                Spec](https://tools.ietf.org/html/rfc5545) are supported.  **Note**:
                                Attributes specifying the duration in `RRULE` are
                                not supported (for example, `DTSTART`, `DTEND`, `DURATION`).
                                More examples available in this [downtime guide](https://docs.datadoghq.com/monitors/guide/suppress-alert-with-downtimes/?tab=api).'
                              type: string
                            start:
                              description: 8601 Datetime to start the downtime. Must
                                include a UTC offset of zero. If not provided, the
                                downtime starts the moment it is created. ISO-8601
                                Datetime to start the downtime. Must not include a
                                UTC offset. If not provided, the downtime starts the
                                moment it is created.
                              type: string
                          type: object
                        type: array
                      timezone:
                        description: (String) The timezone in which to schedule the
                          downtime. The timezone in which to schedule the downtime.
                        type: string
                    type: object
                  scope:
                    description: (String) The scope to which the downtime applies.
                      Must follow the common search syntax. The scope to which the
                      downtime applies. Must follow the [common search syntax](https://docs.datadoghq.com/logs/explorer/search_syntax/).
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}

