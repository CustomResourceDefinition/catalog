---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: cpcagentinstalls.install.cpc.platform.confluent.io
spec:
  group: install.cpc.platform.confluent.io
  names:
    categories:
    - all
    - confluent-platform
    - confluent
    - cpc
    - cpcagent
    kind: CPCAgentInstall
    listKind: CPCAgentInstallList
    plural: cpcagentinstalls
    shortNames:
    - cpcagent
    - agent
    singular: cpcagentinstall
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: CPCAgentInstall is the Schema for the cpcagentinstall API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CPCAgentInstallSpec defines the desired state of CPC Agent
              Operator
            properties:
              addOnComponents:
                description: addOnComponents specifies the installation configuration
                  for add-on components.
                type: object
              agent:
                description: agent specifies the configuration for CPC Agent.
                properties:
                  image:
                    description: image specifies the image name.
                    properties:
                      pullPolicy:
                        description: pullPolicy is the policy for pulling images.
                          Valid options are `Always`, `Never`, and `IfNotPresent`.
                          The default value is `IfNotPresent`.
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      registry:
                        description: registry specifies where the docker images are
                          hosted.
                        pattern: .+
                        type: string
                      repository:
                        description: repository specifies the image repository.
                        type: string
                      tag:
                        description: tag specifies the image tag.
                        type: string
                    type: object
                  mode:
                    description: mode specifies the mode of CPC Agent.
                    enum:
                    - Local
                    - Remote
                    type: string
                  name:
                    description: name specifies the name of CPC Agent.
                    type: string
                  probePolicy:
                    description: probePolicy specifies the policy for agent probe.
                      If it is not configured, CPC Agent will use the default values.
                    properties:
                      failureThreshold:
                        default: 3
                        description: failureThreshold is the minimum consecutive failures
                          for the probe to be considered failed. The default value
                          is `3`.
                        format: int32
                        minimum: 3
                        type: integer
                      periodInSeconds:
                        default: 5
                        description: periodInSeconds specifies how often (in seconds)
                          to perform the agent probe. The default value is 5 seconds
                        format: int32
                        type: integer
                      successThreshold:
                        default: 3
                        description: successThreshold is the minimum consecutive successes
                          for the probe to be considered successful after having failed.
                          The default values is `3`.
                        format: int32
                        minimum: 3
                        type: integer
                    type: object
                  remoteKubeConfig:
                    description: remoteKubeConfig specifies the kubeconfig file used
                      to connect to remote(Control Plane) kubernetes cluster.
                    properties:
                      directoryPathInContainer:
                        description: 'directoryPathInContainer specifies the directory
                          path in the container where the license key is mounted.
                          More info: https://docs.confluent.io/operator/current/co-license.html#update-component-level-licenses'
                        minLength: 1
                        type: string
                      secretRef:
                        description: Name of the secret reference.
                        maxLength: 30
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    type: object
                required:
                - mode
                - name
                type: object
              confluentOperator:
                description: confluentOperator specifies the installation configuration
                  for Confluent Operator.
                properties:
                  name:
                    description: name specifies the name of Confluent Operator.
                    type: string
                type: object
              global:
                description: global specifies the global configuration.
                properties:
                  dockerImage:
                    description: dockerImages defines the registry and credential
                      for global use.
                    properties:
                      pullPolicy:
                        description: pullPolicy is the policy for pulling images.
                          Valid options are `Always`, `Never`, and `IfNotPresent`.
                          The default value is `IfNotPresent`.
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      pullSecretRef:
                        description: 'pullSecretRef references the secrets in the
                          same namespace to be used for pulling images. Image pull
                          secrets are distinct from secrets because secrets can be
                          mounted in the pod, but image pull secrets are only accessed
                          by `kubelet`. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod'
                        type: string
                      registry:
                        description: registry is where the docker images are hosted.
                        pattern: .+
                        type: string
                    required:
                    - registry
                    type: object
                type: object
            required:
            - agent
            type: object
          status:
            description: CPCAgentInstallStatus defines the observed state of CPCAgent
              operator.
            properties:
              agent:
                description: agent is the status of agent.
                properties:
                  conditions:
                    description: conditions specify the latest available observations
                      of the current state.
                    items:
                      description: Condition represents the latest available observations
                        of the current state.
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime shows the last time the
                            condition was transitioned from one status to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: lastUpdateTime shows the last time the condition
                            was evaluated.
                          format: date-time
                          type: string
                        message:
                          description: message shows a human-readable message with
                            details about the transition.
                          type: string
                        reason:
                          description: reason shows the reason for the last transition
                            of the condition.
                          type: string
                        status:
                          description: status shows the status of the condition, one
                            of `True`, `False`, or `Unknown`.
                          type: string
                        type:
                          description: type shows the condition type.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  id:
                    description: id is the ID of the CPC Agent.
                    type: string
                  kubeConfigInfo:
                    description: kubeConfigInfo is the kube config information used
                      by agent running in Remote mode to communicate with Control
                      Plane Kubernetes cluster.
                    properties:
                      certificateInfo:
                        description: certificateInfo contains status for the agent
                          certificate.
                        properties:
                          issuer:
                            description: issuer is the issuer of the certificate.
                            type: string
                          sanList:
                            description: sanList is the list of Subject Alternative
                              Names for the certificate.
                            items:
                              type: string
                            type: array
                          subject:
                            description: subject is the name of the person or entity
                              to whom the certificate is being issued. This field
                              can also include the certificate recipient's organization,
                              organization unit, locality, state or province, and
                              country or region.
                            type: string
                          validDuration:
                            description: validDuration is the valid duration for the
                              certificate.
                            properties:
                              notAfter:
                                description: notAfter means the certificate is not
                                  valid after this time.
                                format: date-time
                                type: string
                              notBefore:
                                description: notBefore means the certificate is not
                                  valid before this time.
                                format: date-time
                                type: string
                            type: object
                        type: object
                      cluster:
                        description: cluster is the name of the cluster for this context
                        type: string
                      currentContext:
                        description: currentContext is the current context for the  kube
                          config file
                        type: string
                      namespace:
                        description: Namespace is the default namespace to use on
                          unspecified requests
                        type: string
                      server:
                        description: Server is the address of the kubernetes cluster
                          (https://hostname:port).
                        type: string
                      user:
                        description: user is the name of the authInfo for this context
                        type: string
                    type: object
                type: object
              confluentOperator:
                description: confluentOperator is the status of Confluent Operator.
                properties:
                  conditions:
                    description: conditions specify the latest available observations
                      of the current state.
                    items:
                      description: Condition represents the latest available observations
                        of the current state.
                      properties:
                        lastTransitionTime:
                          description: lastTransitionTime shows the last time the
                            condition was transitioned from one status to another.
                          format: date-time
                          type: string
                        lastUpdateTime:
                          description: lastUpdateTime shows the last time the condition
                            was evaluated.
                          format: date-time
                          type: string
                        message:
                          description: message shows a human-readable message with
                            details about the transition.
                          type: string
                        reason:
                          description: reason shows the reason for the last transition
                            of the condition.
                          type: string
                        status:
                          description: status shows the status of the condition, one
                            of `True`, `False`, or `Unknown`.
                          type: string
                        type:
                          description: type shows the condition type.
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

